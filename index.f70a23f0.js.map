{"mappings":"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","sources":["<anon>","src/index.ts","src/swipe.ts","src/longpress.ts","src/ui/debug.ts","src/stats.ts","src/dict.ts","src/store.ts","src/training.ts","src/random.ts","src/ui/global.ts","src/game.ts","src/trie.ts","src/ui/ui.ts","src/ui/board.ts","src/timer.ts","src/ui/define.ts","src/ui/menu.ts","src/ui/review.ts","src/ui/score.ts","src/ui/settings.ts","src/ui/stats.ts","src/ui/training.ts"],"sourcesContent":["/* ! Modified from John Doherty's MIT-licensed https://github.com/john-doherty/swiped-events */ (()=>{\n    \"use strict\";\n    const THRESHOLD = 100;\n    const TIMEOUT = 500;\n    let downX = null;\n    let downY = null;\n    let diffX = 0;\n    let diffY = 0;\n    let timeDown = null;\n    let startElement = null;\n    if (typeof window.CustomEvent !== \"function\") {\n        // @ts-ignore\n        window.CustomEvent = (event, params)=>{\n            params = params || {\n                bubbles: false,\n                cancelable: false,\n                detail: undefined\n            };\n            const e = document.createEvent(\"CustomEvent\");\n            e.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n            return e;\n        };\n        // @ts-ignore\n        window.CustomEvent.prototype = window.Event.prototype;\n    }\n    function handleTouchEnd(e) {\n        if (startElement !== e.target) return;\n        const timeDiff = Date.now() - timeDown;\n        let eventType = \"\";\n        if (Math.abs(diffX) > Math.abs(diffY)) {\n            if (Math.abs(diffX) > THRESHOLD && timeDiff < TIMEOUT) {\n                if (diffX > 0) eventType = \"swiped-left\";\n                else eventType = \"swiped-right\";\n            }\n        } else if (Math.abs(diffY) > THRESHOLD && timeDiff < TIMEOUT) {\n            if (diffY > 0) eventType = \"swiped-up\";\n            else eventType = \"swiped-down\";\n        }\n        if (eventType) startElement.dispatchEvent(new CustomEvent(eventType, {\n            bubbles: true,\n            cancelable: true\n        }));\n        downX = null;\n        downY = null;\n        timeDown = null;\n    }\n    function handleTouchStart(e) {\n        const board = document.getElementById(\"board\");\n        if (board?.contains(e.target)) return;\n        startElement = e.target;\n        timeDown = Date.now();\n        downX = e.touches[0].clientX;\n        downY = e.touches[0].clientY;\n        diffX = 0;\n        diffY = 0;\n    }\n    function handleTouchMove(e) {\n        if (!downX || !downY) return;\n        diffX = downX - e.touches[0].clientX;\n        diffY = downY - e.touches[0].clientY;\n    }\n    document.addEventListener(\"touchstart\", handleTouchStart, false);\n    document.addEventListener(\"touchmove\", handleTouchMove, false);\n    document.addEventListener(\"touchend\", handleTouchEnd, false);\n})();\n\n\n/* ! Modified from John Doherty's MIT-licensed https://github.com/john-doherty/long-press-event */ (()=>{\n    \"use strict\";\n    const TOUCH = \"ontouchstart\" in window || navigator.maxTouchPoints > 0;\n    const mouseDown = TOUCH ? \"touchstart\" : \"mousedown\";\n    const mouseUp = TOUCH ? \"touchend\" : \"mouseup\";\n    const mouseMove = TOUCH ? \"touchmove\" : \"mousemove\";\n    const MAX_DIFF = 10;\n    const TIMEOUT = 500;\n    let timer = null;\n    let startX = 0;\n    let startY = 0;\n    if (typeof window.CustomEvent !== \"function\") {\n        // @ts-ignore\n        window.CustomEvent = (event, params)=>{\n            params = params || {\n                bubbles: false,\n                cancelable: false,\n                detail: undefined\n            };\n            const e = document.createEvent(\"CustomEvent\");\n            e.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n            return e;\n        };\n        // @ts-ignore\n        window.CustomEvent.prototype = window.Event.prototype;\n    }\n    function isTouch(e) {\n        return \"touches\" in e;\n    }\n    function fireLongPressEvent(element, e) {\n        clearLongPressTimer();\n        const clientX = isTouch(e) ? e.touches[0].clientX : e.clientX;\n        const clientY = isTouch(e) ? e.touches[0].clientY : e.clientY;\n        const longPress = element.dispatchEvent(new CustomEvent(\"long-press\", {\n            bubbles: true,\n            cancelable: true,\n            detail: {\n                clientX: clientX,\n                clientY: clientY\n            }\n        }));\n        if (longPress) document.addEventListener(mouseUp, (e)=>{\n            e.stopImmediatePropagation();\n            e.preventDefault();\n            e.stopPropagation();\n            element.dispatchEvent(new CustomEvent(\"long-press-up\", {\n                bubbles: true,\n                cancelable: true,\n                detail: {\n                    clientX: clientX,\n                    clientY: clientY\n                }\n            }));\n        }, {\n            once: true,\n            capture: true\n        });\n    }\n    function startLongPressTimer(e) {\n        clearLongPressTimer();\n        const start = new Date().getTime();\n        const loop = ()=>{\n            const current = new Date().getTime();\n            const delta = current - start;\n            const timeout = e.target?.id === \"title\" ? TIMEOUT * 10 : TIMEOUT;\n            if (delta >= timeout) fireLongPressEvent(e.target, e);\n            else timer.value = window.requestAnimationFrame(loop);\n        };\n        timer = {\n            value: window.requestAnimationFrame(loop)\n        };\n    }\n    function clearLongPressTimer() {\n        if (timer) window.cancelAnimationFrame(timer.value);\n        timer = null;\n    }\n    function mouseDownHandler(e) {\n        const board = document.getElementById(\"board\");\n        if (board?.contains(e.target)) return;\n        startX = isTouch(e) ? e.touches[0].clientX : e.clientX;\n        startY = isTouch(e) ? e.touches[0].clientY : e.clientY;\n        startLongPressTimer(e);\n    }\n    function mouseMoveHandler(e) {\n        const diffX = Math.abs(startX - (isTouch(e) ? e.touches[0].clientX : e.clientX));\n        const diffY = Math.abs(startY - (isTouch(e) ? e.touches[0].clientY : e.clientY));\n        if (diffX >= MAX_DIFF || diffY >= MAX_DIFF) clearLongPressTimer();\n    }\n    document.addEventListener(mouseUp, clearLongPressTimer, true);\n    document.addEventListener(mouseMove, mouseMoveHandler, true);\n    document.addEventListener(\"wheel\", clearLongPressTimer, true);\n    document.addEventListener(\"scroll\", clearLongPressTimer, true);\n    document.addEventListener(mouseDown, mouseDownHandler, true);\n})();\n\n\nfunction $55dcb6b52fc85e3d$export$f36d6a7a5c09a23e(word, dict) {\n    const val = dict[word];\n    if (!val) return \"\";\n    const re = /[{<](.*?)?=.*?[>}]/g;\n    let def = dict[word].defn;\n    if (!def) return \"\";\n    const match = re.exec(def);\n    if (match) {\n        const m = dict[match[1].toUpperCase()];\n        if (!m?.defn) def = match[1];\n        else def = `${match[1]} (${m.defn})`;\n    }\n    return def.replace(/\\{(.*?)=.*?\\}/g, \"$1\").replace(/<(.*?)=.*?>/g, \"$1\").replace(/\\s*?\\[.*?\\]\\s*?/g, \"\");\n}\nfunction $55dcb6b52fc85e3d$export$1ea939691cdc45b8(word, dict, type) {\n    const val = dict[word];\n    return val && (!val.dict || val.dict.includes(type.charAt(0)));\n}\nfunction $55dcb6b52fc85e3d$export$aaaeab0fac9a3ccb(words) {\n    const ordered = [];\n    const anadromes = new Set();\n    for (const w of words){\n        const r = w.split(\"\").reverse().join(\"\");\n        if (r !== w && words.includes(r)) {\n            const key = `${[\n                w,\n                r\n            ].sort().join(\" \")}`;\n            if (!anadromes.has(key)) {\n                anadromes.add(key);\n                ordered.push(`(${w}`, `${r})`);\n            }\n        } else ordered.push(w);\n    }\n    return ordered;\n}\n\n\nclass $2f4d5440d89e6de9$export$3cdec2bba15e3523 {\n    constructor(percentiles, dict){\n        this.dict = dict;\n        this.percentiles = percentiles;\n        this.mixed = {};\n        for(const word in dict){\n            const anagram = $2f4d5440d89e6de9$export$3cdec2bba15e3523.toAnagram(word);\n            this.mixed[anagram] = this.mixed[anagram] || [];\n            this.mixed[anagram].push(word);\n        }\n    }\n    anagrams(word, type, min) {\n        const a = $2f4d5440d89e6de9$export$3cdec2bba15e3523.toAnagram(word);\n        const group = this.mixed[a];\n        const result = {\n            words: []\n        };\n        if (!group) return result;\n        for (const w of group){\n            if (min && w.length < min) continue;\n            if ((0, $55dcb6b52fc85e3d$export$1ea939691cdc45b8)(w, this.dict, type)) {\n                result.words.push(w);\n                const v = this.dict[w];\n                for (const d of [\n                    \"n\",\n                    \"o\",\n                    \"b\"\n                ])if (v[d]) result[d] = (result[d] || 0) + v[d];\n            }\n        }\n        return result;\n    }\n    stats(word, dice = \"New\", type = \"NWL\") {\n        const val = this.dict[word];\n        const a = this.anagrams(word, type);\n        if (!(0, $55dcb6b52fc85e3d$export$1ea939691cdc45b8)(word, this.dict, type) || !a.words.length) return {\n            grade: \" \"\n        };\n        const pf = val.freq === undefined ? -1 : this.percentiles.freqs.findIndex((v)=>v <= val.freq);\n        const f = pf === -1 ? \" \" : $2f4d5440d89e6de9$var$gradeFreq(pf);\n        const s = this.percentiles[dice][type];\n        const d = dice.charAt(0).toLowerCase();\n        const vw = val[d] || 0;\n        const pw = s.words.findIndex((v)=>v <= vw);\n        const rw = $2f4d5440d89e6de9$var$rank(pw);\n        const va = a[d] || 0;\n        const pa = s.anagrams.findIndex((v)=>v <= va);\n        const ra = $2f4d5440d89e6de9$var$rank(pa);\n        const g = [\n            \" \",\n            \"A\",\n            \"B\",\n            \"C\",\n            \"D\"\n        ][Math.ceil((rw + ra) / 2)];\n        const pct = (v)=>Math.round(100 * v / s.total * 1000) / 1000;\n        const result = {\n            grade: g < f ? f : g\n        };\n        if (pf > -1) result.freq = pf;\n        if (pw > -1) result.word = {\n            p: pw,\n            v: pct(val.freq)\n        };\n        if (pa > -1) result.anagram = {\n            p: pa,\n            v: pct(va)\n        };\n        return result;\n    }\n    history(games, dice, type) {\n        const d = dice.charAt(0).toLowerCase();\n        const reverse = (w)=>w.split(\"\").reverse().join(\"\");\n        const ratio = {};\n        const anadromes = {};\n        const anagrams = {};\n        const all = {};\n        const either = {};\n        const found = {};\n        let n = games.length;\n        for (const [possible, played] of games){\n            const as = {};\n            for(const w in possible){\n                all[w] = (all[w] || 0) + 1;\n                const a = $2f4d5440d89e6de9$export$3cdec2bba15e3523.toAnagram(w);\n                as[a] = as[a] || [];\n                as[a].push(w);\n                if (played.has(w)) {\n                    found[w] = (found[w] || 0) + 1;\n                    const r = reverse(w);\n                    if (r !== w && possible[r]) {\n                        const k = [\n                            w,\n                            r\n                        ].sort()[0];\n                        if (!played.has(r)) {\n                            either[k] = (either[k] || 0) + 1;\n                            // FIXME: why does this not remove NOD/DON in Big dice?\n                            anadromes[k] = (anadromes[w] || 0) + 1 / n * this.dict[k][d];\n                        } else if (w === k) either[k] = (either[k] || 0) + 1;\n                    }\n                } else ratio[w] = (ratio[w] || 0) + 1 / n * this.dict[w][d];\n            }\n            for(const a in as){\n                const group = as[a];\n                if (group.length <= 1) continue;\n                const f = group.filter((w)=>played.has(w)).length / group.length;\n                if (!f) continue;\n                const w = group.reduce((acc, w)=>acc + this.dict[w][d], 0) / group.length;\n                anagrams[a] = (anagrams[a] || 0) + 1 / n * w * (1 - f);\n            }\n            n--;\n        }\n        const K = Math.log(games.length);\n        for(const w in all){\n            ratio[w] += K * this.dict[w][d] * Math.pow(1 - (found[w] || 0) / all[w], 2);\n            if (anadromes[w]) {\n                const r = reverse(w);\n                const [a, b] = (found[r] || 0) > (found[w] || 0) ? [\n                    w,\n                    r\n                ] : [\n                    r,\n                    w\n                ];\n                anadromes[w] += K * this.dict[w][d] * 2 * Math.pow(1 - (found[a] || 0) / (all[b] || 1), 2);\n            }\n            const a = $2f4d5440d89e6de9$export$3cdec2bba15e3523.toAnagram(w);\n            if (anagrams[a] && all[w]) anagrams[w] += K * this.dict[w][d] * Math.pow(1 - (found[w] || 0) / all[w], 2);\n        }\n        const sorted = (obj, limit)=>Object.entries(obj).sort((a, b)=>b[1] - a[1]).slice(0, limit);\n        return {\n            words: sorted(ratio, 100).map((e)=>({\n                    w: e[0],\n                    found: found[e[0]] || 0,\n                    all: all[e[0]] || 0\n                })),\n            anadromes: sorted(anadromes, 50).map((e)=>{\n                const k = e[0];\n                const r = reverse(k);\n                const [n, d] = (found[r] || 0) > (found[k] || 0) ? [\n                    k,\n                    r\n                ] : [\n                    r,\n                    k\n                ];\n                return {\n                    n: n,\n                    fn: found[n] || 0,\n                    d: d,\n                    fd: found[d] || 0,\n                    e: either[k] || 0\n                };\n            }),\n            anagrams: sorted(anagrams, 50).map((e)=>{\n                const group = [];\n                // FIXME: should pass in min length and 3 letter words should have B scores\n                for (const r of (0, $55dcb6b52fc85e3d$export$aaaeab0fac9a3ccb)(this.anagrams(e[0], type).words)){\n                    const w = r.replace(/[^A-Z]/, \"\");\n                    group.push({\n                        raw: r,\n                        found: found[w] || 0,\n                        all: all[w] || 0\n                    });\n                }\n                return group;\n            })\n        };\n    }\n    static toAnagram(word) {\n        return word.split(\"\").sort().join(\"\");\n    }\n}\nfunction $2f4d5440d89e6de9$var$gradeFreq(p) {\n    if (p >= 99) return \" \";\n    if (p >= 20) return \"A\";\n    if (p >= 10) return \"B\";\n    if (p >= 5) return \"C\";\n    return \"D\";\n}\nfunction $2f4d5440d89e6de9$var$rank(p) {\n    if (p >= 75) return 0;\n    if (p >= 50) return 1;\n    if (p >= 25) return 2;\n    if (p >= 10) return 3;\n    return 4;\n}\n\n\nclass $565bb8264fce4bd8$export$390f32400eaf98c9 {\n    static async setup(dbName = \"keyval\", storeNames = [\n        \"keyval\"\n    ]) {\n        return new Promise((resolve, reject)=>{\n            const openreq = indexedDB.open(dbName, 1);\n            openreq.onerror = ()=>reject(openreq.error);\n            openreq.onsuccess = ()=>resolve(openreq.result);\n            openreq.onupgradeneeded = ()=>{\n                for (const storeName of storeNames)openreq.result.createObjectStore(storeName);\n            };\n        });\n    }\n    constructor(dbName = \"keyval\", storeName = \"keyval\"){\n        this.dbName = dbName;\n        this.storeName = storeName;\n        this.db = new Promise((resolve, reject)=>{\n            const openreq = indexedDB.open(dbName, 1);\n            openreq.onerror = ()=>reject(openreq.error);\n            openreq.onsuccess = ()=>resolve(openreq.result);\n            // First time setup: create an empty object store\n            openreq.onupgradeneeded = ()=>{\n                openreq.result.createObjectStore(storeName);\n            };\n        });\n    }\n    get(key) {\n        let req;\n        return this.withIDBStore(\"readonly\", (store)=>{\n            req = store.get(key);\n        }).then(()=>req.result);\n    }\n    set(key, value) {\n        return this.withIDBStore(\"readwrite\", (store)=>{\n            store.put(value, key);\n        });\n    }\n    withIDBStore(type, callback) {\n        return this.db.then((db)=>new Promise((resolve, reject)=>{\n                const transaction = db.transaction(this.storeName, type);\n                transaction.oncomplete = ()=>resolve();\n                transaction.onabort = transaction.onerror = ()=>reject(transaction.error);\n                callback(transaction.objectStore(this.storeName));\n            }));\n    }\n}\n\n\n\nclass $69e3cfcc1b264755$export$a92776769f460054 {\n    constructor(n = 4 /* https://xkcd.com/221/ */ ){\n        // Hash: https://burtleburtle.net/bob/hash/integer.html\n        n = n ^ 61 ^ n >>> 16;\n        n = n + (n << 3);\n        n = n ^ n >>> 4;\n        n = Math.imul(n, 0x27d4eb2d);\n        n = n ^ n >>> 15;\n        this.seed = n >>> 0;\n    }\n    // Mulberry32: https://gist.github.com/tommyettinger/46a874533244883189143505d203312c\n    next(min, max) {\n        if (min) min = Math.floor(min);\n        if (max) max = Math.floor(max);\n        let z = this.seed += 1831565813;\n        z = Math.imul(z ^ z >>> 15, z | 1);\n        z = z ^ z + Math.imul(z ^ z >>> 7, z | 61);\n        z = (z ^ z >>> 14) >>> 0;\n        const n = z / 2 ** 32;\n        if (min === undefined) return n;\n        if (!max) return Math.floor(n * min);\n        return Math.floor(n * (max - min)) + min;\n    }\n    shuffle(arr) {\n        for(let i = arr.length - 1; i > 0; i--){\n            const j = Math.floor(this.next() * (i + 1));\n            [arr[i], arr[j]] = [\n                arr[j],\n                arr[i]\n            ];\n        }\n        return arr;\n    }\n    sample(arr, remove = false) {\n        if (arr.length === 0) throw new RangeError(\"Cannot sample an empty array\");\n        const index = this.next(arr.length);\n        const val = arr[index];\n        if (remove) {\n            arr[index] = arr[arr.length - 1];\n            arr.pop();\n        }\n        if (val === undefined && !Object.prototype.hasOwnProperty.call(arr, index)) throw new RangeError(\"Cannot sample a sparse array\");\n        return val;\n    }\n}\n\n\nconst $96aac1339b3e6cb8$var$PERIOD = 3;\nconst $96aac1339b3e6cb8$var$DAY = 86400000;\nfunction $96aac1339b3e6cb8$var$defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\nclass $96aac1339b3e6cb8$var$Queue {\n    constructor(data = [], compare = $96aac1339b3e6cb8$var$defaultCompare){\n        this.data = data;\n        this.length = this.data.length;\n        this.compare = compare;\n        if (this.length > 0) for(let i = (this.length >> 1) - 1; i >= 0; i--)this.down(i);\n    }\n    push(item) {\n        this.data.push(item);\n        this.length++;\n        this.up(this.length - 1);\n    }\n    pop() {\n        if (this.length === 0) return undefined;\n        const top = this.data[0];\n        const bottom = this.data.pop();\n        this.length--;\n        if (this.length > 0) {\n            this.data[0] = bottom;\n            this.down(0);\n        }\n        return top;\n    }\n    peek() {\n        return this.data[0];\n    }\n    up(pos) {\n        const item = this.data[pos];\n        while(pos > 0){\n            const parent = pos - 1 >> 1;\n            const current = this.data[parent];\n            if (this.compare(item, current) >= 0) break;\n            this.data[pos] = current;\n            pos = parent;\n        }\n        this.data[pos] = item;\n    }\n    down(pos) {\n        const half = this.length >> 1;\n        const item = this.data[pos];\n        while(pos < half){\n            let left = (pos << 1) + 1;\n            let best = this.data[left];\n            const right = left + 1;\n            if (right < this.length && this.compare(this.data[right], best) < 0) {\n                left = right;\n                best = this.data[right];\n            }\n            if (this.compare(best, item) >= 0) break;\n            this.data[pos] = best;\n            pos = left;\n        }\n        this.data[pos] = item;\n    }\n}\nclass $96aac1339b3e6cb8$export$c612839cda33ff7e {\n    static async create(stats, dice, type, store, min) {\n        const d = dice.toLowerCase()[0];\n        // NOTE: learned is shared across dice...\n        const learned = new $96aac1339b3e6cb8$var$Queue([], (a, b)=>a.d - b.d);\n        const queued = new Set();\n        // TODO: store short separately and iterate over depending on min length\n        const stored = await store.get(\"data\");\n        if (stored) {\n            learned.data = stored;\n            learned.length = stored.length;\n            for (const s of stored)queued.add(s.k);\n        }\n        const raw = [];\n        for(const k in stats.mixed)if (!queued.has(k)) {\n            const w = stats.anagrams(k, type, min)[d] || 0;\n            if (w) raw.push({\n                k: k,\n                w: w\n            });\n        }\n        raw.sort((a, b)=>a.w - b.w);\n        const unlearned = raw.map((e)=>e.k);\n        return new $96aac1339b3e6cb8$export$c612839cda33ff7e(unlearned, learned, d, type, store, stats);\n    }\n    constructor(unlearned, learned, d, type, store, stats){\n        this.unlearned = unlearned;\n        this.learned = learned;\n        this.size = learned.length;\n        this.d = d;\n        this.type = type;\n        this.store = store;\n        this.stats = stats;\n    }\n    overdue() {\n        const now = +new Date();\n        const popped = [];\n        let overdue = this.size === this.learned.length ? 0 : 1;\n        for(let next = this.learned.pop(); next; next = this.learned.pop()){\n            popped.push(next);\n            if (next.d > now) break;\n            overdue++;\n        }\n        for (const p of popped)this.learned.push(p);\n        return overdue;\n    }\n    next() {\n        const now = +new Date();\n        const backfill = ()=>{\n            if (!this.unlearned.length) return undefined;\n            return {\n                k: this.unlearned.pop(),\n                e: 2.5,\n                c: 0,\n                n: 0,\n                d: 0,\n                p: 0\n            };\n        };\n        // TODO: what about if settings change and group no longer valid (eg. min length)?\n        let next = this.learned.pop();\n        if (next) {\n            if (next.d > now) {\n                const fill = backfill();\n                if (fill) {\n                    this.learned.push(next);\n                    next = fill;\n                }\n            }\n        } else next = backfill();\n        if (!next) throw new RangeError();\n        let key = next.k;\n        const anagrams = this.stats.anagrams(key, this.type);\n        const group = anagrams.words;\n        const restore = ()=>{\n            this.learned.push(next);\n            this.size = this.learned.length;\n        };\n        const update = (q)=>{\n            next = $96aac1339b3e6cb8$var$adjust(next, q, now);\n            restore();\n            return this.store.set(\"data\", this.learned.data);\n        };\n        const random = new (0, $69e3cfcc1b264755$export$a92776769f460054)(next.n);\n        // try to find a permutation which isn't in the group\n        for(let i = 0; i < 10; i++){\n            key = random.shuffle(key.split(\"\")).join(\"\");\n            if (!group.includes(key)) break;\n        }\n        return {\n            label: key,\n            group: (0, $55dcb6b52fc85e3d$export$aaaeab0fac9a3ccb)(group),\n            update: update,\n            restore: restore\n        };\n    }\n}\nfunction $96aac1339b3e6cb8$var$adjust(v, q, now) {\n    // Standard update from SM2: https://www.supermemo.com/en/archives1990-2015/english/ol/sm2\n    let mod = -0.8 + 0.28 * q - 0.02 * q * q;\n    // During the initial learning phase (n < 5), only apply a fraction of the modifier if negative\n    // https://apps.ankiweb.net/docs/manual.html#what-spaced-repetition-algorithm-does-anki-use\n    if (mod < 0) mod *= Math.min(Math.pow(2, v.n + 1) * 2.5, 100) / 100;\n    // SM2 uses a minimum easiness of 1.3\n    const min = 1.3;\n    if (q >= 3) {\n        // http://www.blueraja.com/blog/477/a-better-spaced-repetition-learning-algorithm-sm2\n        const bonus = v.d ? Math.min(2, (v.d - v.p) / $96aac1339b3e6cb8$var$DAY / (v.c ? $96aac1339b3e6cb8$var$PERIOD : 1)) : 1;\n        v.c++;\n        v.e = Math.max(min, v.e + mod * bonus);\n        v.d = now + $96aac1339b3e6cb8$var$DAY * $96aac1339b3e6cb8$var$PERIOD * Math.pow(v.e, v.c - 1) * bonus;\n    } else {\n        v.c = 0;\n        v.e = Math.max(min, v.e + mod);\n        v.d = now + $96aac1339b3e6cb8$var$DAY;\n    }\n    v.n++;\n    v.p = now;\n    return v;\n}\n\n\n\n\n\nconst $e46db5192eb49d53$var$NEW_DICE = [\n    \"AAEEGN\",\n    \"ELRTTY\",\n    \"AOOTTW\",\n    \"ABBJOO\",\n    \"EHRTVW\",\n    \"CIMOTU\",\n    \"DISTTY\",\n    \"EIOSST\",\n    \"DELRVY\",\n    \"ACHOPS\",\n    \"HIMNQU\",\n    \"EEINSU\",\n    \"EEGHNW\",\n    \"AFFKPS\",\n    \"HLNNRZ\",\n    \"DEILRX\"\n];\nconst $e46db5192eb49d53$var$OLD_DICE = [\n    \"AACIOT\",\n    \"AHMORS\",\n    \"EGKLUY\",\n    \"ABILTY\",\n    \"ACDEMP\",\n    \"EGINTV\",\n    \"GILRUW\",\n    \"ELPSTU\",\n    \"DENOSW\",\n    \"ACELRS\",\n    \"ABJMOQ\",\n    \"EEFHIY\",\n    \"EHINPS\",\n    \"DKNOTU\",\n    \"ADENVZ\",\n    \"BIFORX\"\n];\nconst $e46db5192eb49d53$var$BIG_DICE = [\n    \"AAAFRS\",\n    \"AAEEEE\",\n    \"AAFIRS\",\n    \"ADENNN\",\n    \"AEEEEM\",\n    \"AEEGMU\",\n    \"AEGMNN\",\n    \"AFIRSY\",\n    \"BJKQXZ\",\n    \"CCNSTW\",\n    \"CEIILT\",\n    \"CEILPT\",\n    \"CEIPST\",\n    \"DDLNOR\",\n    \"DHHLOR\",\n    \"DHHNOT\",\n    \"DHLNOR\",\n    \"EIIITT\",\n    \"EMOTTT\",\n    \"ENSSSU\",\n    \"FIPRSY\",\n    \"GORRVW\",\n    \"HIPRRY\",\n    \"NOOTUW\",\n    \"OOOTTU\"\n];\nconst $e46db5192eb49d53$export$4405dec33e6bc9e5 = [\n    \"S\",\n    \"ER\",\n    \"ED\",\n    \"ING\"\n];\nclass $e46db5192eb49d53$export$985739bfa5723e08 {\n    constructor(trie, dict, stats, random, settings = {\n        dice: \"New\",\n        dict: \"NWL\"\n    }){\n        this.trie = trie;\n        this.dict = dict;\n        this.stats = stats;\n        this.dice = settings.dice === \"Big\" ? $e46db5192eb49d53$var$BIG_DICE : settings.dice === \"Old\" ? $e46db5192eb49d53$var$OLD_DICE : $e46db5192eb49d53$var$NEW_DICE;\n        this.size = Math.sqrt(this.dice.length);\n        settings.min = settings.min || this.size - 1;\n        this.settings = settings;\n        this.random = random;\n        this.seed = this.random.seed;\n        this.board = [];\n        for (const die of this.dice){\n            const c = this.random.sample(die.split(\"\"));\n            this.board.push(c === \"Q\" ? \"Qu\" : c);\n        }\n        this.random.shuffle(this.board);\n        this.possible = this.solve();\n        this.id = $e46db5192eb49d53$export$985739bfa5723e08.encodeID(this.settings, this.seed);\n        this.played = {};\n        this.overtime = new Set();\n        this.score = {\n            regular: 0,\n            overtime: 0\n        };\n        this.start = +new Date();\n        this.expired = null; // set to timestamp!\n    }\n    play(word) {\n        if (!this.played[word] && word.length >= this.settings.min) {\n            if (this.possible[word]) {\n                this.played[word] = +new Date();\n                const score = $e46db5192eb49d53$export$985739bfa5723e08.score(word);\n                if (this.expired) this.overtime.add(word);\n                const bucket = this.expired ? \"overtime\" : \"regular\";\n                this.score[bucket] += score;\n                return score;\n            } else {\n                this.played[word] = -new Date();\n                if (this.expired) this.overtime.add(word);\n            }\n        }\n        return 0;\n    }\n    toJSON() {\n        return {\n            seed: this.id,\n            start: this.start,\n            expired: this.expired,\n            words: this.played,\n            goal: {\n                S: this.totals.s,\n                A: this.totals.a,\n                B: this.totals.b,\n                C: this.totals.c,\n                D: this.totals.d\n            }\n        };\n    }\n    static encodeID(s, seed) {\n        return `${s.dice.charAt(0)}${s.min}${s.dict.charAt(0)}${seed}`;\n    }\n    static decodeID(id) {\n        const d = id.charAt(0);\n        const dice = d === \"N\" ? \"New\" : d === \"O\" ? \"Old\" : d === \"B\" ? \"Big\" : undefined;\n        let min = Number(id.charAt(1));\n        if (isNaN(min) || min < 3 || min > 5) min = undefined;\n        const t = id.charAt(2);\n        const dict = t === \"N\" ? \"NWL\" : t === \"E\" ? \"ENABLE\" : t === \"C\" ? \"CSW\" : undefined;\n        const num = id.slice(3);\n        let seed = num.length ? Number(num) : NaN;\n        if (String(seed) !== num) seed = NaN;\n        return [\n            {\n                dice: dice,\n                min: min,\n                dict: dict\n            },\n            seed\n        ];\n    }\n    static fromJSON(json, trie, dict, stats) {\n        const [settings, seed] = $e46db5192eb49d53$export$985739bfa5723e08.decodeID(json.seed);\n        const random = new (0, $69e3cfcc1b264755$export$a92776769f460054)();\n        random.seed = seed;\n        const game = new $e46db5192eb49d53$export$985739bfa5723e08(trie, dict, stats, random, settings);\n        // @ts-ignore readonly\n        game.start = json.start;\n        // @ts-ignore readonly\n        game.expired = json.expired;\n        // @ts-ignore readonly\n        game.played = json.words;\n        const score = {\n            regular: 0,\n            overtime: 0\n        };\n        for(const w in game.played){\n            if (game.played[w] < 0) continue;\n            const s = $e46db5192eb49d53$export$985739bfa5723e08.score(w);\n            if (!game.expired || game.played[w] <= game.expired) score.regular += s;\n            else score.overtime += s;\n        }\n        // @ts-ignore readonly\n        game.score = score;\n        return game;\n    }\n    get totals() {\n        if (this.totals_) return this.totals_;\n        const anagrams = {};\n        const grades = {};\n        for(const word in this.possible){\n            const anagram = (0, $2f4d5440d89e6de9$export$3cdec2bba15e3523).toAnagram(word);\n            anagrams[anagram] = anagrams[anagram] || [];\n            anagrams[anagram].push(word);\n            const g = this.stats.stats(word, this.settings.dice, this.settings.dict).grade;\n            grades[g] = (grades[g] || 0) + $e46db5192eb49d53$export$985739bfa5723e08.score(word);\n        }\n        const d = grades.D || 0;\n        const c = d + (grades.C || 0);\n        const b = c + (grades.B || 0);\n        const a = b + (grades.A || 0);\n        const s = a + (grades[\" \"] || 0);\n        return this.totals_ = {\n            s: s,\n            a: a,\n            b: b,\n            c: c,\n            d: d,\n            anagrams: anagrams\n        };\n    }\n    progress() {\n        let total = 0;\n        let invalid = 0;\n        let valid = 0;\n        const suffixes = {};\n        const subwords = new Set();\n        const anagrams = {};\n        for(const word in this.played){\n            total++;\n            if (this.played[word] < 0) {\n                invalid++;\n                continue;\n            }\n            valid++;\n            for (const suffix of $e46db5192eb49d53$export$4405dec33e6bc9e5){\n                let suffixed;\n                if ([\n                    \"ER\",\n                    \"ED\"\n                ].includes(suffix) && word.endsWith(\"E\")) suffixed = `${word}${suffix.charAt(1)}`;\n                else if (suffix === \"S\" && (word.endsWith(\"S\") || word.endsWith(\"X\"))) suffixed = `${word}ES`;\n                else suffixed = `${word}${suffix}`;\n                if (this.possible[suffixed] && !this.played[suffixed]) suffixes[suffixed] = word;\n            }\n            const anagram = (0, $2f4d5440d89e6de9$export$3cdec2bba15e3523).toAnagram(word);\n            anagrams[anagram] = anagrams[anagram] || [];\n            anagrams[anagram].push(word);\n            for (const sub of $e46db5192eb49d53$var$subs(word, this.settings.min))if (this.possible[sub] && !this.played[sub]) subwords.add(sub);\n        }\n        let missing = [];\n        for(const anagram in anagrams)missing = missing.concat(this.totals.anagrams[anagram].filter((w)=>!anagrams[anagram].includes(w)));\n        const words = new Set([\n            ...Object.keys(suffixes),\n            ...subwords,\n            ...missing\n        ]);\n        const score = this.score.regular + this.score.overtime + Array.from(words).reduce((sum, w)=>$e46db5192eb49d53$export$985739bfa5723e08.score(w) + sum, 0);\n        return {\n            invalid: invalid,\n            valid: valid,\n            total: total,\n            score: score,\n            suffixes: suffixes,\n            subwords: subwords.size,\n            anagrams: missing.length,\n            missing: words\n        };\n    }\n    state() {\n        const progress = this.progress();\n        const gr = (w)=>this.stats.stats(w, this.settings.dice, this.settings.dict).grade;\n        // missing > grade > length > anagrams > alphabetical\n        const fn = (a, b)=>{\n            const ma = progress.missing.has(a);\n            const mb = progress.missing.has(b);\n            if (ma && !mb) return -1;\n            if (mb && !ma) return 1;\n            const ga = gr(a);\n            const gb = gr(b);\n            if (ga > gb) return -1;\n            if (gb > ga) return 1;\n            if (a.length > b.length) return 1;\n            if (b.length > a.length) return -1;\n            return (0, $2f4d5440d89e6de9$export$3cdec2bba15e3523).toAnagram(a).localeCompare((0, $2f4d5440d89e6de9$export$3cdec2bba15e3523).toAnagram(b));\n        };\n        const augment = (w)=>({\n                word: w,\n                grade: gr(w),\n                defn: (0, $55dcb6b52fc85e3d$export$f36d6a7a5c09a23e)(w, this.dict)\n            });\n        return {\n            played: Array.from(Object.entries(this.played)).sort((a, b)=>Math.abs(a[1]) - Math.abs(b[1])).map((e)=>{\n                const w = e[0];\n                const v = augment(w);\n                if (e[1] < 0) v.invalid = true;\n                if (this.overtime.has(w)) v.overtime = true;\n                return v;\n            }),\n            remaining: Object.keys(this.possible).filter((w)=>!this.played[w]).sort(fn).map((w)=>{\n                const v = augment(w);\n                if (progress.missing.has(w)) v.missing = true;\n                if (progress.suffixes[w]) v.root = progress.suffixes[w];\n                return v;\n            }),\n            progress: progress,\n            totals: this.totals\n        };\n    }\n    solve() {\n        const words = {};\n        const queue = [];\n        for(let y = 0; y < this.size; y++)for(let x = 0; x < this.size; x++){\n            let c = this.board[this.size * y + x];\n            const ord = c.charCodeAt(0);\n            let node = this.trie.children[ord - 65];\n            if (c === \"Qu\" && node !== undefined) {\n                c = \"QU\";\n                node = node.children[20]; // ('U' = 85) - 65\n            }\n            if (node !== undefined) queue.push([\n                x,\n                y,\n                c,\n                node,\n                [\n                    [\n                        x,\n                        y\n                    ]\n                ]\n            ]);\n        }\n        while(queue.length !== 0){\n            const [x, y, s, node, h] = queue.pop();\n            // eslint-disable-next-line max-len\n            for (const [dx, dy] of [\n                [\n                    1,\n                    0\n                ],\n                [\n                    1,\n                    -1\n                ],\n                [\n                    0,\n                    -1\n                ],\n                [\n                    -1,\n                    -1\n                ],\n                [\n                    -1,\n                    0\n                ],\n                [\n                    -1,\n                    1\n                ],\n                [\n                    0,\n                    1\n                ],\n                [\n                    1,\n                    1\n                ]\n            ]){\n                const [x2, y2] = [\n                    x + dx,\n                    y + dy\n                ];\n                if (h.find((e)=>e[0] === x2 && e[1] === y2) !== undefined) continue;\n                if (x2 >= 0 && x2 < this.size && y2 >= 0 && y2 < this.size) {\n                    const hist = h.slice();\n                    hist.push([\n                        x2,\n                        y2\n                    ]);\n                    let c = this.board[this.size * y2 + x2];\n                    let node2 = node.children[c.charCodeAt(0) - 65];\n                    if (c === \"Qu\" && node2 !== undefined) {\n                        c = \"QU\";\n                        node2 = node2.children[20]; // ('U' = 85) - 65\n                    }\n                    if (node2 !== undefined) {\n                        const s2 = s + c;\n                        const isWord = typeof node2.isWord === \"boolean\" ? node2.isWord : node2.isWord.includes(this.settings.dict.charAt(0));\n                        if (isWord && s2.length >= this.settings.min) words[s2] = hist;\n                        queue.push([\n                            x2,\n                            y2,\n                            s2,\n                            node2,\n                            hist\n                        ]);\n                    }\n                }\n            }\n        }\n        return words;\n    }\n    static score(word) {\n        if (word.length < 3) return 0;\n        if (word.length <= 4) return 1;\n        if (word.length === 5) return 2;\n        if (word.length === 6) return 3;\n        if (word.length === 7) return 5;\n        /* if (word.length >= 8) */ return 11;\n    }\n}\nfunction $e46db5192eb49d53$var$subs(word, min) {\n    const words = new Set();\n    for(let b = 0; b < word.length; b++)for(let e = 1; e <= word.length - b; e++){\n        const s = word.substr(b, e);\n        if (s.length >= min) words.add(s);\n    }\n    return words;\n}\n\n\n\n\nclass $f58af0fc7d096920$export$73571c50d0f2507e {\n    constructor(parent, value){\n        this.parent = parent;\n        this.children = new Array(26);\n        this.isWord = false;\n        if (parent !== null) parent.children[value.charCodeAt(0) - 65] = this;\n    }\n    static create(dict) {\n        const root = new $f58af0fc7d096920$export$73571c50d0f2507e(null, \"\");\n        for(const word in dict){\n            let current = root;\n            for (const letter of word){\n                const ord = letter.charCodeAt(0);\n                let next = current.children[ord - 65];\n                if (next === undefined) next = new $f58af0fc7d096920$export$73571c50d0f2507e(current, letter);\n                current = next;\n            }\n            current.isWord = dict[word].dict || true;\n        }\n        return root;\n    }\n}\n\n\nconst $c1afce2e0b574aed$var$STORE = new (0, $565bb8264fce4bd8$export$390f32400eaf98c9)(\"db\", \"store\");\nconst $c1afce2e0b574aed$var$DEFAULTS = {\n    dice: \"New\",\n    min: 3,\n    dict: \"NWL\",\n    grade: \"D\",\n    shortcuts: \"None\",\n    display: \"Show\",\n    theme: \"System\"\n};\nconst $c1afce2e0b574aed$var$fetchJSON = (url)=>fetch(url, {\n        mode: \"no-cors\"\n    }).then((j)=>j.json());\nconst $c1afce2e0b574aed$export$90b4d2ff6acb88af = {\n    SETTINGS: JSON.parse(localStorage.getItem(\"settings\")) || $c1afce2e0b574aed$var$DEFAULTS,\n    STORE: $c1afce2e0b574aed$var$STORE,\n    LIMIT: 500,\n    MAX_SEED: 1e12,\n    DICT: undefined,\n    STATS: undefined,\n    HISTORY: undefined,\n    TRIE: undefined,\n    GAMES: undefined,\n    PLAYED: undefined,\n    SEED: 0,\n    LOADED: {\n        DICT: $c1afce2e0b574aed$var$fetchJSON(\"data/dict.json\").then((d)=>{\n            $c1afce2e0b574aed$export$90b4d2ff6acb88af.DICT = d;\n        }),\n        TRIE: async ()=>{\n            if ($c1afce2e0b574aed$export$90b4d2ff6acb88af.TRIE) return;\n            await $c1afce2e0b574aed$export$90b4d2ff6acb88af.LOADED.DICT;\n            $c1afce2e0b574aed$export$90b4d2ff6acb88af.TRIE = (0, $f58af0fc7d096920$export$73571c50d0f2507e).create($c1afce2e0b574aed$export$90b4d2ff6acb88af.DICT);\n        },\n        STATS: async ()=>{\n            if ($c1afce2e0b574aed$export$90b4d2ff6acb88af.STATS) return;\n            let stats;\n            await Promise.all([\n                $c1afce2e0b574aed$export$90b4d2ff6acb88af.LOADED.DICT,\n                $c1afce2e0b574aed$var$fetchJSON(\"data/stats.json\").then((s)=>{\n                    stats = s;\n                })\n            ]);\n            $c1afce2e0b574aed$export$90b4d2ff6acb88af.STATS = new (0, $2f4d5440d89e6de9$export$3cdec2bba15e3523)(stats, $c1afce2e0b574aed$export$90b4d2ff6acb88af.DICT);\n        },\n        HISTORY: $c1afce2e0b574aed$var$STORE.get(\"history\").then((h)=>{\n            $c1afce2e0b574aed$export$90b4d2ff6acb88af.HISTORY = h || [];\n        }),\n        TRAINING: (0, $565bb8264fce4bd8$export$390f32400eaf98c9).setup(\"training\", [\n            \"NWL\",\n            \"ENABLE\",\n            \"CSW\"\n        ]),\n        GAMES: async ()=>{\n            if ($c1afce2e0b574aed$export$90b4d2ff6acb88af.GAMES) return;\n            await Promise.all([\n                $c1afce2e0b574aed$export$90b4d2ff6acb88af.LOADED.HISTORY,\n                $c1afce2e0b574aed$export$90b4d2ff6acb88af.LOADED.TRIE(),\n                $c1afce2e0b574aed$export$90b4d2ff6acb88af.LOADED.DICT,\n                $c1afce2e0b574aed$export$90b4d2ff6acb88af.LOADED.STATS()\n            ]);\n            $c1afce2e0b574aed$export$90b4d2ff6acb88af.GAMES = [];\n            for(let i = $c1afce2e0b574aed$export$90b4d2ff6acb88af.HISTORY.length - 1; i >= 0 && $c1afce2e0b574aed$export$90b4d2ff6acb88af.GAMES.length < $c1afce2e0b574aed$export$90b4d2ff6acb88af.LIMIT; i--){\n                const game = (0, $e46db5192eb49d53$export$985739bfa5723e08).fromJSON($c1afce2e0b574aed$export$90b4d2ff6acb88af.HISTORY[i], $c1afce2e0b574aed$export$90b4d2ff6acb88af.TRIE, $c1afce2e0b574aed$export$90b4d2ff6acb88af.DICT, $c1afce2e0b574aed$export$90b4d2ff6acb88af.STATS);\n                const played = new Set();\n                for(const w in game.played)if (game.played[w] > 0) played.add(w);\n                $c1afce2e0b574aed$export$90b4d2ff6acb88af.GAMES.push([\n                    game.possible,\n                    played\n                ]);\n            }\n        },\n        PLAYED: async ()=>{\n            if ($c1afce2e0b574aed$export$90b4d2ff6acb88af.PLAYED) return;\n            await $c1afce2e0b574aed$export$90b4d2ff6acb88af.LOADED.HISTORY;\n            $c1afce2e0b574aed$export$90b4d2ff6acb88af.PLAYED = new Set();\n            for (const h of $c1afce2e0b574aed$export$90b4d2ff6acb88af.HISTORY)$c1afce2e0b574aed$export$90b4d2ff6acb88af.PLAYED.add(h.seed);\n        }\n    }\n};\n\n\n\n\n\n\n\n\nclass $c97362ee32723b49$export$c57e9b2d8b9e4de {\n    constructor(display, duration, elapsed = 0, expireFn = null, updateFn = null){\n        this.duration = duration;\n        this.display = display;\n        this.elapsed = elapsed;\n        this.interval = null;\n        this.expireFn = expireFn;\n        this.updateFn = updateFn;\n        this.render();\n    }\n    toJSON() {\n        return {\n            duration: this.duration,\n            elapsed: this.elapsed\n        };\n    }\n    start() {\n        if (this.interval) return;\n        this.begin = new Date().getTime();\n        this.last = this.begin;\n        this.interval = setInterval(()=>this.update(), 100);\n    }\n    stop() {\n        if (this.interval) {\n            clearInterval(this.interval);\n            this.interval = null;\n            this.begin = new Date().getTime();\n            this.elapsed += this.begin - this.last;\n            this.last = this.begin;\n        }\n    }\n    toggle() {\n        if (this.interval) this.stop();\n        else this.start();\n    }\n    expired() {\n        return this.elapsed >= this.duration;\n    }\n    update() {\n        const now = new Date().getTime();\n        this.elapsed += now - this.last;\n        this.last = now;\n        const before = this.display.textContent;\n        this.render();\n        if (before !== this.display.textContent && this.updateFn) this.updateFn();\n    }\n    render() {\n        let distance;\n        if (this.expired()) {\n            this.display.classList.add(\"expired\");\n            distance = this.elapsed - this.duration;\n            if (this.expireFn) {\n                this.expireFn();\n                this.expireFn = null;\n            }\n        } else {\n            this.display.classList.remove(\"expired\");\n            distance = this.duration - this.elapsed;\n        }\n        const minutes = Math.floor(distance % 3600000 / 60000);\n        const seconds = `${Math.floor(distance % 60000 / 1000)}`.padStart(2, \"0\");\n        const time = `${minutes}:${seconds}`;\n        // Safari doesn't fire click events on the display while we're updating ¯\\_(ツ)_/¯\n        if (time !== this.display.textContent) this.display.textContent = time;\n    }\n}\n\n\n\n\nconst $5733c26233441270$var$DURATION = 180000;\nconst $5733c26233441270$var$VALID = (s)=>s.split(\"\").every((c)=>c >= \"A\" && c <= \"Z\" || c >= \"a\" && c <= \"z\");\nclass $5733c26233441270$export$373e09b633948dc {\n    constructor(json){\n        this.last = json ? json.last : \"\";\n        this.kept = json ? json.kept : false;\n        this.game = json ? json.game : undefined;\n        this.paused = json ? json.paused : false;\n        const { display: display, timer: timer } = this.createTimer(json?.timer);\n        this.timer = timer;\n        this.timerDisplay = display;\n        document.addEventListener(\"visibilitychange\", ()=>{\n            if (document.hidden) this.timer.stop();\n            else if (!this.paused) this.timer.start();\n        });\n    }\n    toJSON() {\n        return {\n            last: this.last,\n            kept: this.kept,\n            paused: this.paused,\n            timer: this.timer.toJSON(),\n            game: this.game && (\"random\" in this.game ? this.game.toJSON() : this.game)\n        };\n    }\n    async init(data = {}) {\n        await Promise.all([\n            (0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).LOADED.DICT,\n            (0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).LOADED.TRIE(),\n            (0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).LOADED.STATS(),\n            (0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).LOADED.HISTORY,\n            (0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).LOADED.PLAYED()\n        ]);\n        if (!this.game || data.new) {\n            let seed = (0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).SEED;\n            if (this.game) {\n                this.timer.stop();\n                if (!(\"random\" in this.game)) this.game = (0, $e46db5192eb49d53$export$985739bfa5723e08).fromJSON(this.game, (0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).TRIE, (0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).DICT, (0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).STATS);\n                if (this.game.seed === seed) seed = this.game.random.seed % (0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).MAX_SEED;\n                (0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).PLAYED.add(this.game.id);\n                if (Object.values(this.game.played).filter((t)=>t > 0).length) {\n                    this.updateGames();\n                    (0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).HISTORY.push(this.game.toJSON());\n                    await (0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).STORE.set(\"history\", (0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).HISTORY);\n                }\n            }\n            let game;\n            const random = new (0, $69e3cfcc1b264755$export$a92776769f460054)();\n            while(!game || !Object.keys(game.possible).length){\n                random.seed = seed;\n                const id = (0, $e46db5192eb49d53$export$985739bfa5723e08).encodeID((0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).SETTINGS, random.seed);\n                if ((0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).PLAYED.has(id) && !data.allowDupes) {\n                    seed = (seed + 1) % (0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).MAX_SEED;\n                    continue;\n                }\n                game = new (0, $e46db5192eb49d53$export$985739bfa5723e08)((0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).TRIE, (0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).DICT, (0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).STATS, random, (0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).SETTINGS);\n            }\n            this.game = game;\n            (0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).SEED = seed;\n            const { display: display, timer: timer } = this.createTimer();\n            this.timer = timer;\n            this.timerDisplay = display;\n            this.last = \"\";\n            this.kept = false;\n            this.paused = false;\n        } else if (!(\"random\" in this.game)) this.game = (0, $e46db5192eb49d53$export$985739bfa5723e08).fromJSON(this.game, (0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).TRIE, (0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).DICT, (0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).STATS);\n        const hash = `#${this.game.id}`;\n        if (document.location.hash !== hash) window.history.replaceState(null, \"\", hash);\n        if (!this.full) this.full = (0, $635ad17e88fce26c$export$4b08aed5f1ec6952).createElementWithId(\"div\", \"full\");\n        if (!this.score) {\n            this.score = (0, $635ad17e88fce26c$export$4b08aed5f1ec6952).createElementWithId(\"div\", \"score\");\n            this.displayScore();\n        }\n    }\n    async attach(data = {}) {\n        await this.init(data);\n        this.container = (0, $635ad17e88fce26c$export$4b08aed5f1ec6952).createElementWithId(\"div\", \"game\");\n        const touch = \"ontouchstart\" in window || navigator.maxTouchPoints > 0;\n        const back = (0, $635ad17e88fce26c$export$4b08aed5f1ec6952).createBackButton(()=>(0, $635ad17e88fce26c$export$4b08aed5f1ec6952).toggleView(\"Menu\"));\n        back.addEventListener(\"long-press\", (e)=>{\n            if (touch) e.preventDefault();\n            return this.refresh({\n                new: true\n            });\n        });\n        const score = (0, $635ad17e88fce26c$export$4b08aed5f1ec6952).createElementWithId(\"div\", \"score-wrapper\");\n        score.appendChild(this.score);\n        score.addEventListener(\"mouseup\", ()=>(0, $635ad17e88fce26c$export$4b08aed5f1ec6952).toggleView(\"Score\"));\n        score.addEventListener(\"long-press\", ()=>this.onLongPress());\n        score.addEventListener(\"long-press-up\", ()=>this.onLongPressUp());\n        this.container.appendChild((0, $635ad17e88fce26c$export$4b08aed5f1ec6952).createTopbar(back, this.timerDisplay, score));\n        this.container.appendChild(this.full);\n        this.container.appendChild(this.renderBoard());\n        this.displayScore();\n        this.word = (0, $635ad17e88fce26c$export$4b08aed5f1ec6952).createElementWithId(\"input\", \"word\");\n        this.word.setAttribute(\"type\", \"text\");\n        this.word.classList.add(\"word\");\n        this.word.addEventListener(\"beforeinput\", (e)=>this.onBeforeInput(e));\n        if (touch) this.word.setAttribute(\"disabled\", \"disabled\");\n        this.container.appendChild(this.word);\n        this.defn = (0, $635ad17e88fce26c$export$4b08aed5f1ec6952).createElementWithId(\"div\", \"defn\");\n        this.defn.classList.add(\"definition\");\n        this.container.appendChild(this.defn);\n        if (!this.paused) this.timer.start();\n        return this.container;\n    }\n    renderBoard() {\n        const game = this.game;\n        const content = (0, $635ad17e88fce26c$export$4b08aed5f1ec6952).createElementWithId(\"div\", \"board-wrapper\");\n        const table = (0, $635ad17e88fce26c$export$4b08aed5f1ec6952).createElementWithId(\"table\", \"board\");\n        if (game.size > 4) table.classList.add(\"big\");\n        this.tds = new Set();\n        const random = new (0, $69e3cfcc1b264755$export$a92776769f460054)(game.seed);\n        for(let row = 0; row < game.size; row++){\n            const tr = document.createElement(\"tr\");\n            for(let col = 0; col < game.size; col++){\n                const td = document.createElement(\"td\");\n                const text = document.createElement(\"div\");\n                text.textContent = game.board[row * game.size + col];\n                if (text.textContent === \"Qu\") text.classList.add(\"qu\");\n                if ([\n                    \"M\",\n                    \"W\",\n                    \"Z\"\n                ].includes(text.textContent)) text.classList.add(\"underline\");\n                text.classList.add(`rotate${90 * random.next(0, 4)}`);\n                td.setAttribute(\"data-x\", String(row));\n                td.setAttribute(\"data-y\", String(col));\n                td.appendChild(text);\n                const div = document.createElement(\"div\");\n                div.classList.add(\"target\");\n                div.setAttribute(\"data-x\", String(row));\n                div.setAttribute(\"data-y\", String(col));\n                td.appendChild(div);\n                tr.appendChild(td);\n                this.tds.add(td);\n            }\n            table.appendChild(tr);\n        }\n        let touched = new Set();\n        const deselect = ()=>{\n            for (const td of touched)td.classList.remove(\"selected\");\n        };\n        const registerTouch = (e)=>{\n            const touch = e.touches[0];\n            const cell = document.elementFromPoint(touch.clientX, touch.clientY);\n            if (cell?.matches(\".target\")) {\n                const td = cell.parentNode;\n                td.classList.add(\"selected\");\n                if (!touched.has(td)) {\n                    touched.add(td);\n                    this.word.value += td.textContent;\n                }\n            }\n        };\n        table.addEventListener(\"touchstart\", (e)=>{\n            this.clear();\n            deselect();\n            touched = new Set();\n            registerTouch(e);\n        });\n        table.addEventListener(\"touchend\", ()=>{\n            deselect();\n            this.play();\n        });\n        table.addEventListener(\"touchmove\", registerTouch);\n        content.appendChild(table);\n        return content;\n    }\n    afterAttach() {\n        (0, $635ad17e88fce26c$export$4b08aed5f1ec6952).permaFocus(this.word);\n    }\n    detach(next) {\n        if (![\n            \"Score\",\n            \"Define\"\n        ].includes(next)) this.timer.stop();\n        return this.container;\n    }\n    async refresh(data = {}) {\n        (0, $635ad17e88fce26c$export$4b08aed5f1ec6952).persist();\n        await (0, $635ad17e88fce26c$export$4b08aed5f1ec6952).detachView(\"Board\", \"Board\");\n        await (0, $635ad17e88fce26c$export$4b08aed5f1ec6952).attachView(\"Board\", data);\n    }\n    play() {\n        const game = this.game;\n        let w = (this.word.value || \"\").toUpperCase();\n        if (!w.length) return;\n        if ((0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).SETTINGS.shortcuts === \"Shortcuts\" && (w.length < 3 || (0, $e46db5192eb49d53$export$4405dec33e6bc9e5).includes(w))) {\n            w = `${this.last}${w}`;\n            this.word.value = w;\n        }\n        const score = game.play(w);\n        this.last = w;\n        (0, $635ad17e88fce26c$export$4b08aed5f1ec6952).persist();\n        const hide = (0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).SETTINGS.display === \"Hide\";\n        this.kept = true;\n        if (!hide && score) {\n            this.displayScore();\n            this.defn.textContent = (0, $55dcb6b52fc85e3d$export$f36d6a7a5c09a23e)(w, (0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).DICT);\n        } else {\n            const original = this.word.value || undefined;\n            if (!hide && game.played[w] < 0) this.word.classList.add(\"error\");\n            this.word.classList.add(\"fade\");\n            this.word.addEventListener(\"animationend\", ()=>this.clear(original), {\n                once: true\n            });\n        }\n    }\n    displayScore() {\n        const game = this.game;\n        if ((0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).SETTINGS.display === \"Hide\") {\n            this.score.textContent = \"?\";\n            this.full.classList.add(\"hidden\");\n            return;\n        }\n        if ((0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).SETTINGS.display === \"Full\") {\n            const state = game.state();\n            const p = state.progress;\n            const details = `(${p.score}) ${Object.keys(p.suffixes).length}/${p.subwords}/${p.anagrams}`;\n            const score = game.score.regular + game.score.overtime;\n            const goal = state.totals[(0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).SETTINGS.grade.toLowerCase()];\n            const pct = Math.round(score / goal * 100).toFixed(0);\n            this.full.classList.remove(\"hidden\");\n            this.full.textContent = `${details} - ${score}/${goal} (${pct}%)`;\n        } else this.full.classList.add(\"hidden\");\n        const s = game.score;\n        this.score.textContent = s.overtime ? `${s.regular}\\xA0/\\xA0${s.overtime}` : `${s.regular}`;\n    }\n    clear(w) {\n        if (w && w !== this.word.value) return;\n        this.word.value = \"\";\n        this.word.classList.remove(\"error\");\n        this.word.classList.remove(\"fade\");\n        this.defn.textContent = \"\";\n        this.kept = false;\n    }\n    createTimer(json) {\n        const display = (0, $635ad17e88fce26c$export$4b08aed5f1ec6952).createElementWithId(\"div\", \"timer\");\n        display.addEventListener(\"click\", ()=>{\n            this.timer.toggle();\n            this.paused = !this.paused;\n        });\n        const duration = json ? json.duration : $5733c26233441270$var$DURATION;\n        const elapsed = json ? json.elapsed : 0;\n        const expire = ()=>{\n            if (this.game && !this.game.expired) this.game.expired = +new Date();\n        };\n        const timer = new (0, $c97362ee32723b49$export$c57e9b2d8b9e4de)(display, duration, elapsed, expire, ()=>(0, $635ad17e88fce26c$export$4b08aed5f1ec6952).persist());\n        return {\n            display: display,\n            timer: timer\n        };\n    }\n    updateGames() {\n        if (!(0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).GAMES) return;\n        const game = this.game;\n        const played = new Set();\n        for(const w in game.played)if (game.played[w] > 0) played.add(w);\n        if (!played.size) return;\n        if ((0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).GAMES.length >= (0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).LIMIT) (0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).GAMES.shift();\n        (0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).GAMES.push([\n            game.possible,\n            played\n        ]);\n    }\n    onLongPress() {\n        const game = this.game;\n        const size = game.size;\n        const weights = [];\n        for(let row = 0; row < size; row++){\n            const a = [];\n            for(let col = 0; col < size; col++)a.push(0);\n            weights.push(a);\n        }\n        let total = 0;\n        for(const word in game.possible){\n            if (game.played[word]) continue;\n            const score = (0, $e46db5192eb49d53$export$985739bfa5723e08).score(word);\n            total += score;\n            for (const p of game.possible[word])weights[p[1]][p[0]] += score;\n        }\n        for (const td of this.tds){\n            const w = weights[Number(td.dataset.x)][Number(td.dataset.y)] / total;\n            td.style.backgroundColor = `rgba(255,0,0,${w})`;\n        }\n    }\n    onLongPressUp() {\n        for (const td of this.tds)td.style.removeProperty(\"background-color\");\n    }\n    onBeforeInput(e) {\n        if (e.inputType.startsWith(\"delete\") || e.data && $5733c26233441270$var$VALID(e.data)) return;\n        e.preventDefault();\n        const enter = [\n            \"insertLineBreak\",\n            \"insertParagraph\"\n        ].includes(e.inputType);\n        if (enter || e.data?.includes(\" \")) this.play();\n    }\n    // TODO: up and down arrow to go through history\n    async onKeyDown(e) {\n        if (!this.word) return; // not attached\n        if (this.kept) this.clear();\n        const key = e.keyCode;\n        if (key === 13 || key === 32) {\n            e.preventDefault();\n            this.play();\n        } else if (!this.word.value && (key === 37 || key === 39)) e.preventDefault();\n        else if (![\n            0,\n            37,\n            39,\n            8,\n            46\n        ].includes(key) && !$5733c26233441270$var$VALID(String.fromCharCode(key))) e.preventDefault();\n    }\n}\n\n\n\n\n\nconst $29f72165be3278d3$var$VALID = (s)=>s.split(\"\").every((c)=>c >= \"A\" && c <= \"Z\" || c >= \"a\" && c <= \"z\");\nclass $29f72165be3278d3$export$4598af383c6b3a19 {\n    constructor(json){\n        this.defn = null;\n        this.stats = null;\n        this.anagrams = null;\n        this.word = json ? json.word : \"\";\n    }\n    toJSON() {\n        return {\n            word: this.word\n        };\n    }\n    async attach(word) {\n        await Promise.all([\n            (0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).LOADED.DICT,\n            (0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).LOADED.STATS()\n        ]);\n        if (word) this.word = word;\n        this.define = (0, $635ad17e88fce26c$export$4b08aed5f1ec6952).createElementWithId(\"div\", \"define\");\n        this.search = (0, $635ad17e88fce26c$export$4b08aed5f1ec6952).createElementWithId(\"input\", \"search\");\n        this.search.setAttribute(\"type\", \"text\");\n        this.search.classList.add(\"word\");\n        this.search.value = this.word;\n        this.search.addEventListener(\"beforeinput\", (e)=>this.onBeforeInput(e));\n        this.search.addEventListener(\"input\", ()=>{\n            const w = this.search.value;\n            this.query(w && $29f72165be3278d3$var$VALID(w) ? w : \"\");\n        });\n        this.define.appendChild(this.search);\n        this.update();\n        return this.define;\n    }\n    afterAttach() {\n        (0, $635ad17e88fce26c$export$4b08aed5f1ec6952).permaFocus(this.search);\n    }\n    query(w) {\n        this.search.value = w;\n        this.word = w.toUpperCase();\n        this.update();\n        (0, $635ad17e88fce26c$export$4b08aed5f1ec6952).persist();\n    }\n    detach() {\n        this.defn = null;\n        this.stats = null;\n        this.anagrams = null;\n        return this.define;\n    }\n    update() {\n        const val = (0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).DICT[this.word];\n        if (val) {\n            const defn = (0, $635ad17e88fce26c$export$4b08aed5f1ec6952).createElementWithId(\"div\", \"defineDefn\");\n            defn.classList.add(\"definition\");\n            defn.textContent = (0, $55dcb6b52fc85e3d$export$f36d6a7a5c09a23e)(this.word, (0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).DICT);\n            const hard = val.dict && !val.dict.includes((0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).SETTINGS.dict.charAt(0)) || this.word.length < (0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).SETTINGS.min;\n            if (hard) this.define.classList.add(\"hard\");\n            else this.define.classList.remove(\"hard\");\n            const addCells = (tr, label, data)=>{\n                let td = document.createElement(\"td\");\n                const b = document.createElement(\"b\");\n                b.textContent = label;\n                td.appendChild(b);\n                tr.appendChild(td);\n                td = document.createElement(\"td\");\n                td.classList.add(\"value\");\n                td.textContent = data;\n                tr.appendChild(td);\n            };\n            const s = (0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).STATS.stats(this.word, (0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).SETTINGS.dice, (0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).SETTINGS.dict);\n            const stats = document.createElement(\"table\");\n            stats.classList.add(\"roundedTable\");\n            let tr = document.createElement(\"tr\");\n            addCells(tr, \"Grade\", s.grade === \" \" ? \"S\" : s.grade);\n            addCells(tr, \"Score\", s.word ? String(s.word.p) : \"-\");\n            stats.appendChild(tr);\n            tr = document.createElement(\"tr\");\n            addCells(tr, \"Frequency\", s.freq ? String(s.freq) : \"-\");\n            addCells(tr, \"Anagram\", s.anagram ? String(s.anagram.p) : \"-\");\n            stats.appendChild(tr);\n            stats.appendChild(tr);\n            if (this.defn) this.define.removeChild(this.defn);\n            this.define.appendChild(defn);\n            this.defn = defn;\n            if (this.stats) this.define.removeChild(this.stats);\n            this.define.appendChild(stats);\n            this.stats = stats;\n        } else {\n            if (this.defn) {\n                this.define.removeChild(this.defn);\n                this.defn = null;\n            }\n            if (this.stats) {\n                this.define.removeChild(this.stats);\n                this.stats = null;\n            }\n        }\n        const anagrams = this.renderAnagrams();\n        if (this.anagrams) this.define.removeChild(this.anagrams);\n        this.define.appendChild(anagrams);\n        this.anagrams = anagrams;\n    }\n    renderAnagrams() {\n        const div = (0, $635ad17e88fce26c$export$4b08aed5f1ec6952).createElementWithId(\"div\", \"defineAnagrams\");\n        const words = (0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).STATS.anagrams(this.word, (0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).SETTINGS.dict).words;\n        if (words.length <= 1) return div;\n        const solo = [];\n        const anadromes = new Set();\n        for (const w of words){\n            const r = w.split(\"\").reverse().join(\"\");\n            if (r !== w && words.includes(r)) anadromes.add(`${[\n                w,\n                r\n            ].sort().join(\" \")}`);\n            else solo.push(w);\n        }\n        const format = (w)=>{\n            const e = document.createElement(w === this.word ? \"b\" : \"span\");\n            e.textContent = w;\n            e.addEventListener(\"click\", ()=>this.query(w));\n            return e;\n        };\n        for (const pair of anadromes){\n            const [a, b] = pair.split(\" \");\n            div.appendChild(document.createTextNode(\" (\"));\n            div.appendChild(format(a));\n            div.appendChild(document.createTextNode(\" \"));\n            div.appendChild(format(b));\n            div.appendChild(document.createTextNode(\") \"));\n        }\n        for (const w of solo){\n            div.appendChild(format(w));\n            div.appendChild(document.createTextNode(\" \"));\n        }\n        return div;\n    }\n    async onBeforeInput(e) {\n        if (e.inputType.startsWith(\"delete\") || e.data && $29f72165be3278d3$var$VALID(e.data)) return;\n        e.preventDefault();\n        const enter = [\n            \"insertLineBreak\",\n            \"insertParagraph\"\n        ].includes(e.inputType);\n        if (enter || e.data?.includes(\" \")) {\n            if (this.word) this.query(\"\");\n            else await (0, $635ad17e88fce26c$export$4b08aed5f1ec6952).toggleView(\"Define\");\n        }\n    }\n    async onKeyDown(e) {\n        if (!this.search) return; // not attached\n        const key = e.keyCode;\n        if (key === 13 || key === 32) {\n            e.preventDefault();\n            if (this.word) this.query(\"\");\n            else await (0, $635ad17e88fce26c$export$4b08aed5f1ec6952).toggleView(\"Define\");\n        } else if (key === 27) await (0, $635ad17e88fce26c$export$4b08aed5f1ec6952).toggleView(\"Define\");\n        else if (![\n            0,\n            37,\n            39,\n            8,\n            46\n        ].includes(key) && !$29f72165be3278d3$var$VALID(String.fromCharCode(key))) e.preventDefault();\n    }\n}\n\n\n\n\nclass $e7e585f6fffb4ff0$export$5fe8222595b01ed2 {\n    toJSON() {}\n    attach() {\n        // NOTE: The '#menu' here would make more sense, but uBlock's \"Web Annoyances Ultralist\" has:\n        // 'github.io###menu, .fixedHeaderContainer, .menu-btn:style(position: absolute !important;)'\n        this.menu = (0, $635ad17e88fce26c$export$4b08aed5f1ec6952).createElementWithId(\"div\", \"men\");\n        const title = (0, $635ad17e88fce26c$export$4b08aed5f1ec6952).createElementWithId(\"h1\", \"title\");\n        title.textContent = \"BOGGLE\";\n        title.addEventListener(\"long-press\", async ()=>{\n            const key = (await caches.keys()).find((n)=>n.includes(\":cache:\"));\n            if (key) await caches.delete(key);\n            document.location.reload(true);\n        });\n        this.menu.appendChild(title);\n        const nav = document.createElement(\"nav\");\n        const createButton = (name, fn)=>{\n            const button = document.createElement(\"button\");\n            button.classList.add(\"toggle\");\n            button.textContent = name;\n            button.addEventListener(\"click\", fn);\n            return button;\n        };\n        if ((0, $635ad17e88fce26c$export$4b08aed5f1ec6952).Views.Board.game) {\n            nav.appendChild(createButton(\"RESUME\", ()=>(0, $635ad17e88fce26c$export$4b08aed5f1ec6952).toggleView(\"Board\")));\n            nav.appendChild(createButton(\"NEW GAME\", ()=>(0, $635ad17e88fce26c$export$4b08aed5f1ec6952).toggleView(\"Board\", {\n                    new: true\n                })));\n        } else nav.appendChild(createButton(\"PLAY\", ()=>(0, $635ad17e88fce26c$export$4b08aed5f1ec6952).toggleView(\"Board\")));\n        nav.appendChild(createButton(\"TRAIN\", ()=>(0, $635ad17e88fce26c$export$4b08aed5f1ec6952).toggleView(\"Training\")));\n        nav.appendChild(createButton(\"DEFINE\", ()=>(0, $635ad17e88fce26c$export$4b08aed5f1ec6952).toggleView(\"Define\")));\n        nav.appendChild(createButton(\"STATS\", ()=>(0, $635ad17e88fce26c$export$4b08aed5f1ec6952).toggleView(\"Stats\")));\n        nav.appendChild(createButton(\"SETTINGS\", ()=>(0, $635ad17e88fce26c$export$4b08aed5f1ec6952).toggleView(\"Settings\")));\n        this.menu.appendChild(nav);\n        return this.menu;\n    }\n    detach() {\n        return this.menu;\n    }\n}\n\n\n\n\n\n\nclass $d5af522aef81d25f$export$ce711eda3c29ab03 {\n    constructor(training){\n        this.training = training;\n    }\n    toJSON() {}\n    async attach() {\n        await this.training.init();\n        this.review = (0, $635ad17e88fce26c$export$4b08aed5f1ec6952).createElementWithId(\"div\", \"review\");\n        const back = (0, $635ad17e88fce26c$export$4b08aed5f1ec6952).createBackButton(()=>(0, $635ad17e88fce26c$export$4b08aed5f1ec6952).toggleView(\"Training\"));\n        this.review.appendChild((0, $635ad17e88fce26c$export$4b08aed5f1ec6952).createTopbar(back, null, this.training.progress));\n        const d = (0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).SETTINGS.dice.charAt(0).toLowerCase();\n        const score = (k)=>(0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).STATS.anagrams(k, (0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).SETTINGS.dict)[d] || 0;\n        const store = new (0, $565bb8264fce4bd8$export$390f32400eaf98c9)(\"training\", (0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).SETTINGS.dict);\n        const data = await store.get(\"data\") || [];\n        const keys = data.filter((w)=>!w.c || w.e < 2.0).sort((a, b)=>score(b.k) / b.e - score(a.k) / a.e).map((w)=>w.k);\n        const wrapper = (0, $635ad17e88fce26c$export$4b08aed5f1ec6952).createElementWithId(\"div\", \"review-results-wrapper\");\n        if (!keys.length) wrapper.appendChild((0, $635ad17e88fce26c$export$4b08aed5f1ec6952).createPlaceholder());\n        else for (const k of keys){\n            const table = (0, $635ad17e88fce26c$export$4b08aed5f1ec6952).createElementWithId(\"table\", \"review-results\");\n            (0, $635ad17e88fce26c$export$4b08aed5f1ec6952).addAnagramRows(table, (0, $55dcb6b52fc85e3d$export$aaaeab0fac9a3ccb)((0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).STATS.anagrams(k, (0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).SETTINGS.dict).words));\n            wrapper.appendChild(table);\n        }\n        this.review.appendChild(wrapper);\n        return this.review;\n    }\n    detach() {\n        return this.review;\n    }\n}\n\n\n\n\n\nclass $3ffa33bc3d9c668d$export$b5fd6146180b74ff {\n    constructor(board){\n        this.board = board;\n    }\n    toJSON() {}\n    async attach() {\n        await this.board.init();\n        this.container = (0, $635ad17e88fce26c$export$4b08aed5f1ec6952).createElementWithId(\"div\", \"game\");\n        // TODO: wrapper should really be container, not game\n        const wrapper = (0, $635ad17e88fce26c$export$4b08aed5f1ec6952).createElementWithId(\"div\", \"score-history\");\n        const back = (0, $635ad17e88fce26c$export$4b08aed5f1ec6952).createBackButton(()=>(0, $635ad17e88fce26c$export$4b08aed5f1ec6952).toggleView(\"Board\"));\n        this.container.appendChild((0, $635ad17e88fce26c$export$4b08aed5f1ec6952).createTopbar(back, this.board.timerDisplay, this.board.score));\n        const game = this.board.game;\n        const state = game.state();\n        const score = game.score.regular + game.score.overtime;\n        const goal = state.totals[(0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).SETTINGS.grade.toLowerCase()];\n        const details = `${score}/${goal} (${Math.round(score / goal * 100).toFixed(0)}%)`;\n        const current = $3ffa33bc3d9c668d$var$makeCollapsible(game.id, details, \"block\");\n        const div = document.createElement(\"div\");\n        div.classList.add(\"collapsible-content\");\n        this.displayPlayed(state, div, true);\n        this.displayPossible(state, div);\n        wrapper.appendChild(current);\n        wrapper.appendChild(div);\n        // Start off with played expanded\n        current.classList.add(\"active\");\n        div.style.display = \"block\";\n        for(let i = (0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).HISTORY.length - 1; i >= 0; i--){\n            const state = (0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).HISTORY[i];\n            let score = 0;\n            for (const [w, t] of Object.entries(state.words))if (t > 0) score += (0, $e46db5192eb49d53$export$985739bfa5723e08).score(w);\n            if (!score) continue;\n            const details = `${score}/${state.goal[(0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).SETTINGS.grade]} (${Math.round(score / state.goal[(0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).SETTINGS.grade] * 100).toFixed(0)}%)`;\n            const div = document.createElement(\"div\");\n            div.classList.add(\"collapsible-content\");\n            div.classList.add(\"lazy\");\n            const button = $3ffa33bc3d9c668d$var$makeCollapsible(state.seed, details, \"block\", ()=>{\n                if (div.classList.contains(\"lazy\")) {\n                    div.classList.remove(\"lazy\");\n                    const game = (0, $e46db5192eb49d53$export$985739bfa5723e08).fromJSON(state, (0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).TRIE, (0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).DICT, (0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).STATS);\n                    const s = game.state();\n                    this.displayPlayed(s, div);\n                    this.displayPossible(s, div);\n                }\n            });\n            wrapper.appendChild(button);\n            wrapper.appendChild(div);\n        }\n        this.container.appendChild(wrapper);\n        return this.container;\n    }\n    detach() {\n        return this.container;\n    }\n    displayPlayed(state, div, expanded = false) {\n        const p = state.progress;\n        const details = `(${p.score}) ${Object.keys(p.suffixes).length}/${p.subwords}/${p.anagrams} (${p.invalid}/${p.total})`;\n        const button = $3ffa33bc3d9c668d$var$makeCollapsible(\"PLAYED\", details, \"table\");\n        const table = document.createElement(\"table\");\n        table.classList.add(\"collapsible-content\");\n        table.classList.add(\"results\");\n        table.classList.add(\"played\");\n        for (const { word: word, grade: grade, overtime: overtime, defn: defn, invalid: invalid } of state.played){\n            const tr = document.createElement(\"tr\");\n            if (!invalid && grade < (0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).SETTINGS.grade) tr.classList.add(\"hard\");\n            if (invalid) tr.classList.add(\"error\");\n            if (overtime) tr.classList.add(\"overtime\");\n            let td = document.createElement(\"td\");\n            const b = document.createElement(\"b\");\n            b.textContent = word;\n            td.appendChild(b);\n            tr.appendChild(td);\n            td = document.createElement(\"td\");\n            if (defn) td.textContent = defn;\n            tr.appendChild(td);\n            table.appendChild(tr);\n        }\n        if (expanded) {\n            button.classList.add(\"active\");\n            table.style.display = \"table\";\n        }\n        div.appendChild(button);\n        div.appendChild(table);\n    }\n    displayPossible(state, div, expanded = false) {\n        const tot = state.totals;\n        const details = `${tot.d}/${tot.c}/${tot.b}/${tot.a} (${tot.s})`;\n        const button = $3ffa33bc3d9c668d$var$makeCollapsible(\"POSSIBLE\", details, \"table\");\n        const table = document.createElement(\"table\");\n        table.classList.add(\"collapsible-content\");\n        table.classList.add(\"results\");\n        table.classList.add(\"possible\");\n        for (const { word: word, grade: grade, root: root, missing: missing, defn: defn } of state.remaining){\n            const tr = document.createElement(\"tr\");\n            if (grade < (0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).SETTINGS.grade) tr.classList.add(\"hard\");\n            let td = document.createElement(\"td\");\n            const b = document.createElement(\"b\");\n            if (root) {\n                const rootSpan = document.createElement(\"span\");\n                rootSpan.textContent = root;\n                const suffixSpan = document.createElement(\"span\");\n                suffixSpan.classList.add(\"underline\");\n                suffixSpan.textContent = word.slice(root.length);\n                b.appendChild(rootSpan);\n                b.appendChild(suffixSpan);\n            } else {\n                if (missing) b.classList.add(\"underline\");\n                b.textContent = word;\n            }\n            td.appendChild(b);\n            tr.appendChild(td);\n            td = document.createElement(\"td\");\n            td.textContent = defn;\n            tr.appendChild(td);\n            table.appendChild(tr);\n        }\n        if (expanded) {\n            button.classList.add(\"active\");\n            table.style.display = \"table\";\n        }\n        div.appendChild(button);\n        div.appendChild(table);\n    }\n}\nfunction $3ffa33bc3d9c668d$var$makeCollapsible(title, details, display, fn) {\n    const button = document.createElement(\"button\");\n    button.setAttribute(\"type\", \"button\");\n    button.classList.add(\"collapsible\");\n    const div = document.createElement(\"div\");\n    const titleSpan = document.createElement(\"span\");\n    titleSpan.classList.add(\"collapsible-title\");\n    titleSpan.textContent = title;\n    const detailsSpan = document.createElement(\"span\");\n    detailsSpan.classList.add(\"collapsible-details\");\n    detailsSpan.textContent = details;\n    div.appendChild(titleSpan);\n    div.appendChild(detailsSpan);\n    button.appendChild(div);\n    button.addEventListener(\"click\", ()=>{\n        button.classList.toggle(\"active\");\n        const content = button.nextElementSibling;\n        if (content.style.display === display) content.style.display = \"none\";\n        else {\n            if (fn) fn();\n            content.style.display = display;\n        }\n    });\n    return button;\n}\n\n\n\n\n\nconst $952a3e9600c33f15$var$CHARS = new Set([\n    \"B\",\n    \"b\",\n    \"N\",\n    \"n\",\n    \"E\",\n    \"e\",\n    \"C\",\n    \"c\",\n    \"O\",\n    \"o\",\n    \"0\",\n    \"1\",\n    \"2\",\n    \"3\",\n    \"4\",\n    \"5\",\n    \"6\",\n    \"7\",\n    \"8\",\n    \"9\"\n]);\nconst $952a3e9600c33f15$var$VALID = (s)=>s.split(\"\").every((c)=>$952a3e9600c33f15$var$CHARS.has(c));\nclass $952a3e9600c33f15$export$7d05e0deed78c249 {\n    toJSON() {}\n    attach() {\n        this.settings = (0, $635ad17e88fce26c$export$4b08aed5f1ec6952).createElementWithId(\"div\", \"settings\");\n        this.seed = (0, $635ad17e88fce26c$export$4b08aed5f1ec6952).createElementWithId(\"input\", \"seed\");\n        this.seed.setAttribute(\"type\", \"text\");\n        this.seed.value = (0, $e46db5192eb49d53$export$985739bfa5723e08).encodeID((0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).SETTINGS, (0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).SEED);\n        this.seed.addEventListener(\"input\", ()=>this.onInput(this.seed.value || \"\"));\n        this.seed.addEventListener(\"beforeinput\", (e)=>this.onBeforeInput(e));\n        const back = (0, $635ad17e88fce26c$export$4b08aed5f1ec6952).createBackButton(()=>(0, $635ad17e88fce26c$export$4b08aed5f1ec6952).toggleView(\"Menu\"));\n        this.settings.appendChild((0, $635ad17e88fce26c$export$4b08aed5f1ec6952).createTopbar(back, this.seed, null));\n        const checkedRadioRow = (k, opts, fn, id)=>{\n            const row = document.createElement(\"div\");\n            row.classList.add(\"row\");\n            const radios = (0, $635ad17e88fce26c$export$4b08aed5f1ec6952).createRadios(id || k, opts.map((s)=>s === String((0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).SETTINGS[k]) ? [\n                    s\n                ] : s), fn);\n            row.appendChild(radios);\n            return row;\n        };\n        this.settings.appendChild(checkedRadioRow(\"dice\", [\n            \"New\",\n            \"Old\",\n            \"Big\"\n        ], function() {\n            const min = this.value === \"Big\" ? 4 : 3;\n            document.getElementById(`min${min}`).checked = true;\n            (0, $635ad17e88fce26c$export$4b08aed5f1ec6952).updateSettings({\n                dice: this.value,\n                min: min\n            });\n        }));\n        this.settings.appendChild(checkedRadioRow(\"min\", [\n            \"3\",\n            \"4\",\n            \"5\"\n        ], function() {\n            (0, $635ad17e88fce26c$export$4b08aed5f1ec6952).updateSettings({\n                min: Number(this.value)\n            });\n        }));\n        this.settings.appendChild(checkedRadioRow(\"dict\", [\n            \"NWL\",\n            \"ENABLE\",\n            \"CSW\"\n        ], function() {\n            (0, $635ad17e88fce26c$export$4b08aed5f1ec6952).updateSettings({\n                dict: this.value\n            });\n        }));\n        this.settings.appendChild(checkedRadioRow(\"grade\", [\n            \"A\",\n            \"B\",\n            \"C\",\n            \"D\"\n        ], function() {\n            (0, $635ad17e88fce26c$export$4b08aed5f1ec6952).updateSettings({\n                grade: this.value\n            });\n        }));\n        this.settings.appendChild(checkedRadioRow(\"display\", [\n            \"Hide\",\n            \"Show\",\n            \"Full\"\n        ], function() {\n            (0, $635ad17e88fce26c$export$4b08aed5f1ec6952).updateSettings({\n                display: this.value\n            });\n        }, \"scoreDisplay\"));\n        this.settings.appendChild(checkedRadioRow(\"shortcuts\", [\n            \"Shortcuts\",\n            \"None\"\n        ], function() {\n            (0, $635ad17e88fce26c$export$4b08aed5f1ec6952).updateSettings({\n                shortcuts: this.value\n            });\n        }));\n        this.settings.appendChild(checkedRadioRow(\"theme\", [\n            \"System\",\n            \"Light\",\n            \"Dark\"\n        ], function() {\n            const theme = this.value;\n            (0, $635ad17e88fce26c$export$4b08aed5f1ec6952).updateSettings({\n                theme: theme\n            });\n            (0, $635ad17e88fce26c$export$4b08aed5f1ec6952).setTheme(theme);\n        }));\n        return this.settings;\n    }\n    detach() {\n        return this.settings;\n    }\n    update() {\n        this.seed.textContent = (0, $e46db5192eb49d53$export$985739bfa5723e08).encodeID((0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).SETTINGS, (0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).SEED);\n        this.seed.classList.remove(\"error\");\n        const set = (id)=>document.getElementById(id).checked = true;\n        set(`dice${(0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).SETTINGS.dice}`);\n        set(`min${(0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).SETTINGS.min}`);\n        set(`dict${(0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).SETTINGS.dict}`);\n        set(`grade${(0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).SETTINGS.grade}`);\n        set(`scoreDisplay${(0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).SETTINGS.display}`);\n        set(`shortcuts${(0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).SETTINGS.shortcuts}`);\n        set(`theme${(0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).SETTINGS.theme}`);\n    }\n    onInput(id) {\n        if (!$952a3e9600c33f15$var$VALID(id)) return;\n        const [settings, seed] = (0, $e46db5192eb49d53$export$985739bfa5723e08).decodeID(id);\n        if (!(0, $635ad17e88fce26c$export$4b08aed5f1ec6952).valid(settings, seed)) this.seed.classList.add(\"error\");\n        else {\n            (0, $635ad17e88fce26c$export$4b08aed5f1ec6952).updateSettings(settings, seed, false);\n            this.update();\n        }\n    }\n    onBeforeInput(e) {\n        if (e.inputType.startsWith(\"delete\") || e.data && $952a3e9600c33f15$var$VALID(e.data)) return;\n        e.preventDefault();\n    }\n    async onKeyDown(e) {\n        if (!this.seed) return; // not attached\n        const key = e.keyCode;\n        if ([\n            0,\n            37,\n            39,\n            8,\n            46\n        ].includes(key) || $952a3e9600c33f15$var$VALID(String.fromCharCode(key))) return;\n        e.preventDefault();\n    }\n}\n\n\n\n\nclass $9bc8b3c506b9c499$export$1e3e8ecfe0e6273a {\n    constructor(json){\n        this.table = null;\n        this.section = json ? json.section : \"WORD\";\n    }\n    toJSON() {\n        return {\n            section: this.section\n        };\n    }\n    // TODO: why is there no spinner?\n    async attach() {\n        await (0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).LOADED.GAMES();\n        // TODO: cache this, invalidate if GAMES/dice/dict/min changes?\n        const data = (0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).STATS.history((0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).GAMES, (0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).SETTINGS.dice, (0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).SETTINGS.dict);\n        this.stats = (0, $635ad17e88fce26c$export$4b08aed5f1ec6952).createElementWithId(\"div\", \"stats\");\n        const back = (0, $635ad17e88fce26c$export$4b08aed5f1ec6952).createBackButton(()=>(0, $635ad17e88fce26c$export$4b08aed5f1ec6952).toggleView(\"Menu\"));\n        const display = (s)=>this.display(s, data);\n        const radios = (0, $635ad17e88fce26c$export$4b08aed5f1ec6952).createRadios(\"statsSelect\", [\n            \"WORD\",\n            \"ANAGRAM\",\n            \"PAIR\"\n        ].map((s)=>s === this.section ? [\n                s\n            ] : s), function() {\n            display(this.value);\n            (0, $635ad17e88fce26c$export$4b08aed5f1ec6952).persist();\n        });\n        this.stats.appendChild((0, $635ad17e88fce26c$export$4b08aed5f1ec6952).createTopbar(back, radios, null));\n        this.display(this.section, data);\n        return this.stats;\n    }\n    detach() {\n        this.table = null;\n        return this.stats;\n    }\n    display(section, data) {\n        this.section = section;\n        const { words: words, anadromes: anadromes, anagrams: anagrams } = data;\n        const link = (w)=>{\n            const b = document.createElement(\"b\");\n            b.textContent = w;\n            b.addEventListener(\"click\", ()=>(0, $635ad17e88fce26c$export$4b08aed5f1ec6952).toggleView(\"Define\", w));\n            return b;\n        };\n        let table = document.createElement(\"table\");\n        table.classList.add(\"roundedTable\");\n        if (section === \"PAIR\") {\n            if (!anadromes.length) table = (0, $635ad17e88fce26c$export$4b08aed5f1ec6952).createPlaceholder();\n            else for (const { n: n, fn: fn, d: d, fd: fd, e: e } of anadromes){\n                const tr = document.createElement(\"tr\");\n                let td = document.createElement(\"td\");\n                td.appendChild(link(n));\n                tr.appendChild(td);\n                td = document.createElement(\"td\");\n                td.textContent = `${fn}/${fd} (${e})`;\n                tr.appendChild(td);\n                td = document.createElement(\"td\");\n                td.appendChild(link(d));\n                tr.appendChild(td);\n                table.appendChild(tr);\n            }\n        } else if (section === \"WORD\") {\n            if (!words.length) table = (0, $635ad17e88fce26c$export$4b08aed5f1ec6952).createPlaceholder();\n            else for (const { w: w, found: found, all: all } of words){\n                const tr = document.createElement(\"tr\");\n                let td = document.createElement(\"td\");\n                td.appendChild(link(w));\n                tr.appendChild(td);\n                td = document.createElement(\"td\");\n                td.textContent = `${found}/${all}`;\n                tr.appendChild(td);\n                table.appendChild(tr);\n            }\n        } else {\n            if (!anagrams.length) table = (0, $635ad17e88fce26c$export$4b08aed5f1ec6952).createPlaceholder();\n            else for (const group of anagrams){\n                const tr = document.createElement(\"tr\");\n                const td = document.createElement(\"td\");\n                let together = [];\n                let wait = false;\n                for (const { raw: raw, found: found, all: all } of group){\n                    const w = raw.replace(/[^A-Z]/, \"\");\n                    if (raw.startsWith(\"(\")) {\n                        const b = document.createElement(\"b\");\n                        b.textContent = \"(\";\n                        together.push(b);\n                        wait = true;\n                    }\n                    together.push(link(w));\n                    const span = document.createElement(\"span\");\n                    span.textContent = ` ${found}/${all}`;\n                    if (raw.endsWith(\")\")) {\n                        together.push(span);\n                        const b = document.createElement(\"b\");\n                        b.textContent = \")\";\n                        together.push(b);\n                        wait = false;\n                    } else {\n                        if (wait) span.textContent += \" \";\n                        together.push(span);\n                    }\n                    if (!wait) {\n                        for (const e of together)td.appendChild(e);\n                        td.appendChild(document.createElement(\"br\"));\n                        together = [];\n                    }\n                }\n                tr.appendChild(td);\n                table.appendChild(tr);\n            }\n        }\n        if (this.table) this.stats.removeChild(this.table);\n        this.stats.appendChild(table);\n        this.table = table;\n    }\n}\n\n\n\n\n\n\nconst $7425debbed8aea0b$var$INTERVAL = 1000;\nclass $7425debbed8aea0b$export$9e19812ff71b0df9 {\n    toJSON() {}\n    async init() {\n        await Promise.all([\n            (0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).LOADED.TRAINING,\n            (0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).LOADED.DICT,\n            (0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).LOADED.STATS()\n        ]);\n        if (!this.pool || this.pool.type !== (0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).SETTINGS.dict) {\n            const store = new (0, $565bb8264fce4bd8$export$390f32400eaf98c9)(\"training\", (0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).SETTINGS.dict);\n            this.pool = await (0, $96aac1339b3e6cb8$export$c612839cda33ff7e).create((0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).STATS, (0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).SETTINGS.dice, (0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).SETTINGS.dict, store, (0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).SETTINGS.min);\n        }\n        if (!this.progress) {\n            this.progress = (0, $635ad17e88fce26c$export$4b08aed5f1ec6952).createElementWithId(\"div\", \"progress\");\n            this.updateProgress();\n            this.interval = setInterval(()=>this.updateProgress(), $7425debbed8aea0b$var$INTERVAL);\n        }\n    }\n    async attach() {\n        await this.init();\n        this.train = (0, $635ad17e88fce26c$export$4b08aed5f1ec6952).createElementWithId(\"div\", \"train\");\n        this.next();\n        return this.train;\n    }\n    async detach() {\n        if (this.restore) this.restore();\n        if (this.interval) clearInterval(this.interval);\n        this.content = null;\n        return this.train;\n    }\n    next() {\n        const content = (0, $635ad17e88fce26c$export$4b08aed5f1ec6952).createElementWithId(\"div\", \"content\");\n        const { label: label, group: group, update: update, restore: restore } = this.pool.next();\n        this.restore = restore;\n        const trainWord = document.createElement(\"div\");\n        trainWord.classList.add(\"word\");\n        trainWord.textContent = label;\n        const sizeHint = (0, $635ad17e88fce26c$export$4b08aed5f1ec6952).createElementWithId(\"div\", \"sizeHint\");\n        sizeHint.style.visibility = \"hidden\";\n        sizeHint.textContent = String(group.length);\n        const rating = this.createRatingToggles(update);\n        const table = document.createElement(\"table\");\n        table.classList.add(\"results\", \"hidden\");\n        (0, $635ad17e88fce26c$export$4b08aed5f1ec6952).addAnagramRows(table, group);\n        const progress = (0, $635ad17e88fce26c$export$4b08aed5f1ec6952).createElementWithId(\"div\", \"progress-wrapper\");\n        progress.appendChild(this.progress);\n        progress.addEventListener(\"mouseup\", ()=>(0, $635ad17e88fce26c$export$4b08aed5f1ec6952).toggleView(\"Review\"));\n        progress.addEventListener(\"long-press\", ()=>{\n            if (!rating.classList.contains(\"hidden\")) return;\n            sizeHint.style.visibility = \"visible\";\n        });\n        progress.addEventListener(\"long-press-up\", ()=>{\n            sizeHint.style.visibility = \"hidden\";\n        });\n        const back = (0, $635ad17e88fce26c$export$4b08aed5f1ec6952).createBackButton(()=>(0, $635ad17e88fce26c$export$4b08aed5f1ec6952).toggleView(\"Menu\"));\n        content.appendChild((0, $635ad17e88fce26c$export$4b08aed5f1ec6952).createTopbar(back, null, progress));\n        const wrapper = document.createElement(\"div\");\n        wrapper.classList.add(\"wrapper\");\n        wrapper.appendChild(trainWord);\n        wrapper.appendChild(table);\n        content.appendChild(wrapper);\n        content.appendChild(sizeHint);\n        const rwrapper = (0, $635ad17e88fce26c$export$4b08aed5f1ec6952).createElementWithId(\"div\", \"rating-wrapper\");\n        rwrapper.appendChild(rating);\n        content.appendChild(rwrapper);\n        const listener = (e)=>{\n            if (![\n                back,\n                progress,\n                this.progress\n            ].includes(e.target)) {\n                content.removeEventListener(\"click\", listener);\n                trainWord.classList.add(\"hidden\");\n                sizeHint.classList.add(\"hidden\");\n                table.classList.remove(\"hidden\");\n                rating.classList.remove(\"hidden\");\n            }\n        };\n        content.addEventListener(\"click\", listener);\n        if (this.content) this.train.removeChild(this.content);\n        this.train.appendChild(content);\n        this.content = content;\n    }\n    createRatingToggles(update) {\n        const toggles = document.createElement(\"div\");\n        toggles.setAttribute(\"id\", \"rating\");\n        toggles.classList.add(\"toggle-group\");\n        toggles.classList.add(\"horizontal\");\n        toggles.classList.add(\"hidden\");\n        for(let i = 0; i < 6; i++){\n            const toggle = document.createElement(\"button\");\n            toggle.setAttribute(\"id\", `rating${i}`);\n            toggle.setAttribute(\"type\", \"button\");\n            toggle.classList.add(\"toggle\");\n            toggle.textContent = String(i);\n            toggles.appendChild(toggle);\n            toggle.addEventListener(\"click\", async ()=>{\n                await update(Number(toggle.textContent));\n                // Update progress before its scheduled interval to ensure there's no perceived lag\n                this.updateProgress();\n                this.restore = null;\n                this.next();\n            });\n        }\n        return toggles;\n    }\n    updateProgress() {\n        this.progress.textContent = `${this.pool.overdue()}\\xA0/\\xA0${this.pool.size}`;\n    }\n    constructor(){\n        this.content = null;\n        this.restore = null;\n        this.interval = null;\n    }\n}\n\n\nclass $635ad17e88fce26c$var$Loader {\n    attach() {\n        this.loader = $635ad17e88fce26c$export$4b08aed5f1ec6952.createElementWithId(\"div\", \"loader\");\n        const spinner = $635ad17e88fce26c$export$4b08aed5f1ec6952.createElementWithId(\"div\", \"spinner\");\n        this.loader.appendChild(spinner);\n        return this.loader;\n    }\n    detach() {\n        return this.loader;\n    }\n}\nconst $635ad17e88fce26c$export$4b08aed5f1ec6952 = new class {\n    async create() {\n        setTimeout(()=>window.scrollTo(0, 1), 0);\n        const mobile = typeof window.orientation !== \"undefined\" || navigator.userAgent.includes(\"IEMobile\");\n        if (mobile) {\n            setTimeout(()=>{\n                const meta = document.querySelector(\"meta[name=viewport]\");\n                const w = window.innerWidth;\n                const h = window.innerHeight;\n                meta.setAttribute(\"content\", `width=${w}, height=${h}, initial-scale=1, user-scalable=no, minimal-ui`);\n            }, 200);\n            // https://stackoverflow.com/questions/7919172\n            window.addEventListener(\"orientationchange\", ()=>{\n                document.body.style.display = \"none\";\n                // eslint-disable-next-line no-unused-expressions\n                document.body.offsetHeight; // cause a reflow\n                document.body.style.display = \"block\"; // cause a repaint\n            });\n        }\n        const pref = window.matchMedia(\"(prefers-color-scheme: dark)\");\n        const listener = (e)=>{\n            if ((0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).SETTINGS.theme === \"System\") this.setTheme(e.matches ? \"Dark\" : \"Light\");\n        };\n        try {\n            pref.addEventListener(\"change\", listener);\n        } catch (err) {\n            pref.addListener(listener);\n        }\n        this.setTheme((0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).SETTINGS.theme === \"System\" ? pref.matches ? \"Dark\" : \"Light\" : (0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).SETTINGS.theme);\n        this.root = document.getElementById(\"display\");\n        const state = JSON.parse(localStorage.getItem(\"state\"));\n        this.current = state ? state.current : \"Menu\";\n        this.previous = state ? state.previous : \"Menu\";\n        this.loader = new $635ad17e88fce26c$var$Loader();\n        const VIEWS = {\n            Menu: (0, $e7e585f6fffb4ff0$export$5fe8222595b01ed2),\n            Board: (0, $5733c26233441270$export$373e09b633948dc),\n            Training: (0, $7425debbed8aea0b$export$9e19812ff71b0df9),\n            Define: (0, $29f72165be3278d3$export$4598af383c6b3a19),\n            Stats: (0, $9bc8b3c506b9c499$export$1e3e8ecfe0e6273a),\n            Settings: (0, $952a3e9600c33f15$export$7d05e0deed78c249)\n        };\n        const views = state ? state.views : {};\n        this.Views = {};\n        for (const [type, V] of Object.entries(VIEWS))// @ts-ignore\n        this.Views[type] = new V(views[type]);\n        this.Views.Review = new (0, $d5af522aef81d25f$export$ce711eda3c29ab03)(this.Views.Training);\n        this.Views.Score = new (0, $3ffa33bc3d9c668d$export$b5fd6146180b74ff)(this.Views.Board);\n        await this.setup();\n        this.BACK = document.createElement(\"img\");\n        this.BACK.src = document.getElementById(\"svg\").src;\n        this.BACK.height = 20;\n        document.addEventListener(\"keydown\", (e)=>this.onKeyDown(e));\n        document.addEventListener(\"swiped-left\", ()=>this.toggleView(\"Define\"));\n        document.addEventListener(\"swiped-right\", ()=>this.toggleView(\"Define\"));\n        window.addEventListener(\"hashchange\", ()=>this.onHashChange());\n        window.addEventListener(\"beforeunload\", ()=>this.persist());\n        await this.attachView(this.current);\n    }\n    persist(previous = false) {\n        const state = JSON.parse(localStorage.getItem(\"state\")) || {};\n        state.current = this.current;\n        state.previous = this.previous;\n        state.views = state.views || {};\n        state.views[this.current] = this.Views[this.current];\n        if (previous) state.views[this.previous] = this.Views[this.previous];\n        localStorage.setItem(\"state\", JSON.stringify(state));\n    }\n    async attachView(view, data) {\n        // console.log(+new Date(), 'ATTACHING', view, data, this.Views[view]);\n        this.root.appendChild(this.loader.attach());\n        const v = this.Views[view];\n        const attached = await v.attach(data);\n        this.root.removeChild(this.loader.detach());\n        this.root.appendChild(attached);\n        if (v.afterAttach) v.afterAttach();\n    // console.log(+new Date(), 'ATTACHED', view, data, this.Views[view]);\n    }\n    async detachView(view, next) {\n        // console.log(+new Date(), 'DETACHING', view, this.Views[view]);\n        this.root.removeChild(await this.Views[view].detach(next));\n    // console.log(+new Date(), 'DETACHED', view, this.Views[view]);\n    }\n    async toggleView(view, data) {\n        // console.log('TOGGLE', view, {current: this.current, previous: this.previous});\n        if (this.current === view) {\n            await this.detachView(view, this.previous);\n            this.current = this.previous;\n            this.previous = view;\n            await this.attachView(this.current, data);\n        } else {\n            await this.detachView(this.current, view);\n            this.previous = this.current;\n            this.current = view;\n            await this.attachView(view, data);\n        }\n        this.persist(true);\n    }\n    async setup() {\n        const setupFromHistory = async ()=>{\n            await (0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).LOADED.HISTORY;\n            if ((0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).HISTORY.length) {\n                const id = (0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).HISTORY[(0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).HISTORY.length - 1].seed;\n                const [settings] = (0, $e46db5192eb49d53$export$985739bfa5723e08).decodeID(id);\n                const rand = new (0, $69e3cfcc1b264755$export$a92776769f460054)();\n                rand.seed = (0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).SEED;\n                rand.next();\n                this.updateSettings(settings, rand.seed % (0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).MAX_SEED, false);\n            }\n        };\n        const hash = document.location.hash?.slice(1);\n        if (!hash) {\n            const existing = this.Views.Board.game;\n            if (existing) {\n                const [settings, seed] = (0, $e46db5192eb49d53$export$985739bfa5723e08).decodeID(existing.seed);\n                this.updateSettings(settings, seed, false);\n            } else return setupFromHistory();\n        } else {\n            const [settings, seed] = (0, $e46db5192eb49d53$export$985739bfa5723e08).decodeID(hash);\n            if (!this.valid(settings, seed)) return setupFromHistory();\n            this.updateSettings(settings, seed, false);\n        }\n    }\n    async onKeyDown(e) {\n        const key = e.keyCode;\n        const currentView = this.Views[this.current];\n        if (key === 191 && e.shiftKey) {\n            e.preventDefault();\n            await this.toggleView(\"Define\");\n        } else if (\"onKeyDown\" in currentView) await currentView.onKeyDown(e);\n    }\n    async onHashChange() {\n        if (!document.location.hash) return;\n        const [settings, seed] = (0, $e46db5192eb49d53$export$985739bfa5723e08).decodeID(document.location.hash.slice(1));\n        if (!this.valid(settings, seed)) return;\n        let refresh = seed !== (0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).SEED;\n        if (!refresh) {\n            const s = {\n                ...(0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).SETTINGS\n            };\n            refresh = s.dice !== settings.dice || s.min !== settings.min || s.dict !== settings.dict;\n        }\n        this.updateSettings(settings, seed, false);\n        if (this.current === \"Settings\") this.Views[this.current].update();\n        else if (refresh && [\n            \"Board\",\n            \"Score\"\n        ].includes(this.current)) return this.Views.Board.refresh({\n            new: true,\n            allowDupes: true\n        });\n    }\n    valid(settings, seed) {\n        return !!(!isNaN(seed) && Number.isInteger(seed) && seed < (0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).MAX_SEED && settings.dice && settings.dict && settings.min);\n    }\n    updateSettings(settings, seed, dom = true) {\n        Object.assign((0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).SETTINGS, settings);\n        localStorage.setItem(\"settings\", JSON.stringify((0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).SETTINGS));\n        if (typeof seed === \"number\") (0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).SEED = seed;\n        const id = (0, $e46db5192eb49d53$export$985739bfa5723e08).encodeID((0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).SETTINGS, (0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).SEED);\n        window.history.replaceState(null, \"\", `#${id}`);\n        if (dom && this.current === \"Settings\") {\n            const view = this.Views[this.current];\n            view.seed.textContent = id;\n            view.seed.classList.remove(\"error\");\n        }\n    }\n    createElementWithId(type, id) {\n        const element = document.createElement(type);\n        element.setAttribute(\"id\", id);\n        return element;\n    }\n    createTopbar(left, center, right) {\n        const topbar = this.createElementWithId(\"header\", \"topbar\");\n        topbar.appendChild(left || document.createElement(\"div\"));\n        topbar.appendChild(center || document.createElement(\"div\"));\n        topbar.appendChild(right || document.createElement(\"div\"));\n        return topbar;\n    }\n    createBackButton(fn) {\n        const back = this.createElementWithId(\"div\", \"back\");\n        back.appendChild(this.BACK);\n        back.addEventListener(\"mouseup\", fn);\n        return back;\n    }\n    createPlaceholder() {\n        const empty = this.createElementWithId(\"div\", \"empty\");\n        empty.textContent = \"...\";\n        return empty;\n    }\n    permaFocus(element) {\n        element.addEventListener(\"blur\", ()=>setTimeout(()=>element.focus(), 20));\n        element.focus();\n    }\n    setTheme(theme) {\n        document.documentElement.setAttribute(\"data-theme\", theme.toLowerCase());\n    }\n    addAnagramRows(table, group) {\n        for (const r of group){\n            const w = r.replace(/[^A-Z]/, \"\");\n            const tr = document.createElement(\"tr\");\n            const grade = (0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).STATS.stats(w, (0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).SETTINGS.dice, (0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).SETTINGS.dict).grade;\n            if (grade < (0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).SETTINGS.grade) tr.classList.add(\"hard\");\n            let td = document.createElement(\"td\");\n            const b = document.createElement(\"b\");\n            const s = r.startsWith(\"(\") ? `${r}\\xa0` : r.endsWith(\")\") ? `\\xa0${r}` : `\\xa0${r}\\xa0`;\n            b.textContent = `\\xa0${s}\\xa0`;\n            td.appendChild(b);\n            tr.appendChild(td);\n            td = document.createElement(\"td\");\n            td.textContent = (0, $55dcb6b52fc85e3d$export$f36d6a7a5c09a23e)(w, (0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).DICT);\n            tr.appendChild(td);\n            table.appendChild(tr);\n        }\n    }\n    createRadios(id, values, listener) {\n        const radios = this.createElementWithId(\"span\", id);\n        radios.classList.add(\"toggle-group\");\n        radios.classList.add(\"horizontal\");\n        radios.setAttribute(\"role\", \"radiogroup\");\n        for (let val of values){\n            let checked = false;\n            if (Array.isArray(val)) {\n                checked = true;\n                val = val[0];\n            }\n            const radio = this.createElementWithId(\"input\", `${id}${val}`);\n            radio.classList.add(\"hide\");\n            radio.setAttribute(\"type\", \"radio\");\n            radio.setAttribute(\"name\", id);\n            radio.setAttribute(\"value\", val);\n            if (checked) radio.setAttribute(\"checked\", \"checked\");\n            const label = document.createElement(\"label\");\n            label.classList.add(\"toggle\");\n            label.setAttribute(\"for\", `${id}${val}`);\n            label.textContent = val.toUpperCase();\n            radio.addEventListener(\"click\", listener.bind(radio));\n            radios.appendChild(radio);\n            radios.appendChild(label);\n        }\n        return radios;\n    }\n}();\n\n\nconst $ffaaba23bb5f0d08$export$153e5dc2c098b35c = new class {\n    async backup() {\n        const data = {\n            history: await (0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).STORE.get(\"history\")\n        };\n        for (const type of [\n            \"NWL\",\n            \"ENABLE\",\n            \"CSW\"\n        ]){\n            const store = new (0, $565bb8264fce4bd8$export$390f32400eaf98c9)(\"training\", type);\n            data[type] = await store.get(\"data\");\n        }\n        data.settings = JSON.parse(localStorage.getItem(\"settings\"));\n        return JSON.stringify(data);\n    }\n    async restore(data) {\n        await (0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).STORE.set(\"history\", data.history);\n        for (const type of [\n            \"NWL\",\n            \"ENABLE\",\n            \"CSW\"\n        ]){\n            const store = new (0, $565bb8264fce4bd8$export$390f32400eaf98c9)(\"training\", type);\n            await store.set(\"data\", data[type]);\n        }\n        localStorage.setItem(\"settings\", JSON.stringify(data.settings));\n    }\n    async modify(w, fn) {\n        const store = new (0, $565bb8264fce4bd8$export$390f32400eaf98c9)(\"training\", (0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).SETTINGS.dict);\n        const pool = await (0, $96aac1339b3e6cb8$export$c612839cda33ff7e).create((0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).STATS, (0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).SETTINGS.dice, (0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).SETTINGS.dict, store, (0, $c1afce2e0b574aed$export$90b4d2ff6acb88af).SETTINGS.min);\n        const k = (0, $2f4d5440d89e6de9$export$3cdec2bba15e3523).toAnagram(w);\n        let found;\n        // @ts-ignore\n        const learned = pool.learned;\n        const popped = [];\n        for(found = learned.pop(); found && found.k !== k; found = learned.pop())popped.push(found);\n        if (!found) throw RangeError();\n        learned.push(fn(found));\n        for (const p of popped)learned.push(p);\n        return store.set(\"data\", learned.data);\n    }\n    get state() {\n        return JSON.parse(localStorage.getItem(\"state\"));\n    }\n}();\n// @ts-ignore\nwindow.global = (0, $c1afce2e0b574aed$export$90b4d2ff6acb88af);\n// @ts-ignore\nwindow.UI = (0, $635ad17e88fce26c$export$4b08aed5f1ec6952);\n// @ts-ignore\nwindow.Debug = $ffaaba23bb5f0d08$export$153e5dc2c098b35c;\n\n\n\n// eslint-disable-next-line @typescript-eslint/no-floating-promises\n(0, $635ad17e88fce26c$export$4b08aed5f1ec6952).create();\n\n\n//# sourceMappingURL=index.f70a23f0.js.map\n","import './swipe';\nimport './longpress';\nimport './ui/debug';\n\nimport {UI} from './ui/ui';\n\n// eslint-disable-next-line @typescript-eslint/no-floating-promises\nUI.create();\n","/* ! Modified from John Doherty's MIT-licensed https://github.com/john-doherty/swiped-events */\n(() => {\n  'use strict';\n\n  const THRESHOLD = 100;\n  const TIMEOUT = 500;\n\n  let downX: number | null = null;\n  let downY: number | null = null;\n  let diffX = 0;\n  let diffY = 0;\n  let timeDown: number | null = null;\n  let startElement: EventTarget | null = null;\n\n  if (typeof window.CustomEvent !== 'function') {\n    // @ts-ignore\n    window.CustomEvent = (event: string, params: any) => {\n      params = params || {bubbles: false, cancelable: false, detail: undefined};\n      const e = document.createEvent('CustomEvent');\n      e.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n      return e;\n    };\n\n    // @ts-ignore\n    window.CustomEvent.prototype = window.Event.prototype;\n  }\n\n  function handleTouchEnd(e: TouchEvent) {\n    if (startElement !== e.target) return;\n\n    const timeDiff = Date.now() - timeDown!;\n    let eventType = '';\n\n    if (Math.abs(diffX) > Math.abs(diffY)) {\n      if (Math.abs(diffX) > THRESHOLD && timeDiff < TIMEOUT) {\n        if (diffX > 0) {\n          eventType = 'swiped-left';\n        } else {\n          eventType = 'swiped-right';\n        }\n      }\n    } else {\n      if (Math.abs(diffY) > THRESHOLD && timeDiff < TIMEOUT) {\n        if (diffY > 0) {\n          eventType = 'swiped-up';\n        } else {\n          eventType = 'swiped-down';\n        }\n      }\n    }\n\n    if (eventType) {\n      startElement!.dispatchEvent(new CustomEvent(eventType, {bubbles: true, cancelable: true}));\n    }\n\n    downX = null;\n    downY = null;\n    timeDown = null;\n  }\n\n  function handleTouchStart(e: TouchEvent) {\n    const board = document.getElementById('board');\n    if (board?.contains(e.target! as Node)) return;\n\n    startElement = e.target;\n\n    timeDown = Date.now();\n    downX = e.touches[0].clientX;\n    downY = e.touches[0].clientY;\n    diffX = 0;\n    diffY = 0;\n  }\n\n  function handleTouchMove(e: TouchEvent) {\n    if (!downX || !downY) return;\n    diffX = downX - e.touches[0].clientX;\n    diffY = downY - e.touches[0].clientY;\n  }\n\n  document.addEventListener('touchstart', handleTouchStart, false);\n  document.addEventListener('touchmove', handleTouchMove, false);\n  document.addEventListener('touchend', handleTouchEnd, false);\n})();\n","/* ! Modified from John Doherty's MIT-licensed https://github.com/john-doherty/long-press-event */\n(() => {\n  'use strict';\n  const TOUCH = 'ontouchstart' in window || navigator.maxTouchPoints > 0;\n\n  const mouseDown = TOUCH ? 'touchstart' : 'mousedown';\n  const mouseUp = TOUCH ? 'touchend' : 'mouseup';\n  const mouseMove = TOUCH ? 'touchmove' : 'mousemove';\n\n  const MAX_DIFF = 10;\n  const TIMEOUT = 500;\n\n  let timer: {value: number} | null = null;\n  let startX = 0;\n  let startY = 0;\n\n  if (typeof window.CustomEvent !== 'function') {\n    // @ts-ignore\n    window.CustomEvent = (event: string, params: any) => {\n      params = params || {bubbles: false, cancelable: false, detail: undefined};\n      const e = document.createEvent('CustomEvent');\n      e.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n      return e;\n    };\n\n    // @ts-ignore\n    window.CustomEvent.prototype = window.Event.prototype;\n  }\n\n  function isTouch(e: MouseEvent | TouchEvent): e is TouchEvent {\n    return 'touches' in e;\n  }\n\n  function fireLongPressEvent(element: EventTarget, e: MouseEvent | TouchEvent) {\n    clearLongPressTimer();\n\n    const clientX = isTouch(e) ? e.touches[0].clientX : e.clientX;\n    const clientY = isTouch(e) ? e.touches[0].clientY : e.clientY;\n\n    const longPress = element.dispatchEvent(\n      new CustomEvent('long-press', {\n        bubbles: true,\n        cancelable: true,\n        detail: {clientX, clientY},\n      })\n    );\n\n    if (longPress) {\n      document.addEventListener(\n        mouseUp,\n        e => {\n          e.stopImmediatePropagation();\n          e.preventDefault();\n          e.stopPropagation();\n\n          element.dispatchEvent(\n            new CustomEvent('long-press-up', {\n              bubbles: true,\n              cancelable: true,\n              detail: {clientX, clientY},\n            })\n          );\n        },\n        {once: true, capture: true}\n      );\n    }\n  }\n\n  function startLongPressTimer(e: MouseEvent | TouchEvent) {\n    clearLongPressTimer();\n\n    const start = new Date().getTime();\n    const loop = () => {\n      const current = new Date().getTime();\n      const delta = current - start;\n\n      const timeout = (e.target as HTMLElement)?.id === 'title' ? TIMEOUT * 10 : TIMEOUT;\n      if (delta >= timeout) {\n        fireLongPressEvent(e.target!, e);\n      } else {\n        timer!.value = window.requestAnimationFrame(loop);\n      }\n    };\n\n    timer = {value: window.requestAnimationFrame(loop)};\n  }\n\n  function clearLongPressTimer() {\n    if (timer) window.cancelAnimationFrame(timer.value);\n    timer = null;\n  }\n\n  function mouseDownHandler(e: MouseEvent | TouchEvent) {\n    const board = document.getElementById('board');\n    if (board?.contains(e.target! as Node)) return;\n\n    startX = isTouch(e) ? e.touches[0].clientX : e.clientX;\n    startY = isTouch(e) ? e.touches[0].clientY : e.clientY;\n    startLongPressTimer(e);\n  }\n\n  function mouseMoveHandler(e: MouseEvent | TouchEvent) {\n    const diffX = Math.abs(startX - (isTouch(e) ? e.touches[0].clientX : e.clientX));\n    const diffY = Math.abs(startY - (isTouch(e) ? e.touches[0].clientY : e.clientY));\n    if (diffX >= MAX_DIFF || diffY >= MAX_DIFF) clearLongPressTimer();\n  }\n\n  document.addEventListener(mouseUp, clearLongPressTimer, true);\n  document.addEventListener(mouseMove, mouseMoveHandler, true);\n  document.addEventListener('wheel', clearLongPressTimer, true);\n  document.addEventListener('scroll', clearLongPressTimer, true);\n\n  document.addEventListener(mouseDown, mouseDownHandler, true);\n})();\n","import {Stats} from '../stats';\nimport {Store} from '../store';\nimport {TrainingPool, TrainingStats} from '../training';\n\nimport {global} from './global';\nimport {UI} from './ui';\n\nexport const Debug = new (class {\n  async backup() {\n    const data: any = {history: await global.STORE.get('history')};\n    for (const type of ['NWL', 'ENABLE', 'CSW']) {\n      const store = new Store('training', type);\n      data[type] = await store.get('data');\n    }\n    data.settings = JSON.parse(localStorage.getItem('settings')!);\n    return JSON.stringify(data);\n  }\n\n  async restore(data: any) {\n    await global.STORE.set('history', data.history);\n    for (const type of ['NWL', 'ENABLE', 'CSW']) {\n      const store = new Store('training', type);\n      await store.set('data', data[type]);\n    }\n    localStorage.setItem('settings', JSON.stringify(data.settings));\n  }\n\n  async modify(w: string, fn: (s: TrainingStats) => TrainingStats) {\n    const store = new Store('training', global.SETTINGS.dict);\n    const pool = await TrainingPool.create(\n      global.STATS,\n      global.SETTINGS.dice,\n      global.SETTINGS.dict,\n      store,\n      global.SETTINGS.min\n    );\n    const k = Stats.toAnagram(w);\n\n    let found;\n    // @ts-ignore\n    const learned = pool.learned;\n    const popped = [];\n    for (found = learned.pop(); found && found.k !== k; found = learned.pop()) {\n      popped.push(found);\n    }\n    if (!found) throw RangeError();\n\n    learned.push(fn(found));\n    for (const p of popped) learned.push(p);\n\n    return store.set('data', learned.data);\n  }\n\n  get state() {\n    return JSON.parse(localStorage.getItem('state')!);\n  }\n})();\n\n// @ts-ignore\nwindow.global = global;\n// @ts-ignore\nwindow.UI = UI;\n// @ts-ignore\nwindow.Debug = Debug;\n","import {Dictionary, Type, isValid, order} from './dict';\nimport {Dice} from './settings';\n\nexport interface Data {\n  New: DiceEntry;\n  Old: DiceEntry;\n  Big: DiceEntry;\n  freqs: number[];\n  total: number;\n}\n\ninterface DiceEntry {\n  NWL: TypeEntry;\n  ENABLE: TypeEntry;\n  CSW: TypeEntry;\n}\n\ninterface TypeEntry {\n  words: number[];\n  anagrams: number[];\n  total: number;\n}\n\nexport type Grade = 'A' | 'B' | 'C' | 'D' | ' ';\n\nexport class Stats {\n  private readonly dict: Dictionary;\n  private readonly percentiles: Data;\n  // NOTE: contains ALL words!\n  readonly mixed: {[anagram: string]: string[]};\n\n  constructor(percentiles: Data, dict: Dictionary) {\n    this.dict = dict;\n    this.percentiles = percentiles;\n\n    this.mixed = {};\n    for (const word in dict) {\n      const anagram = Stats.toAnagram(word);\n      this.mixed[anagram] = this.mixed[anagram] || [];\n      this.mixed[anagram].push(word);\n    }\n  }\n\n  anagrams(word: string, type: Type, min?: number) {\n    const a = Stats.toAnagram(word);\n    const group = this.mixed[a];\n\n    const result: {words: string[]; n?: number; o?: number; b?: number} = {words: []};\n    if (!group) return result;\n\n    for (const w of group) {\n      if (min && w.length < min) continue;\n      if (isValid(w, this.dict, type)) {\n        result.words.push(w);\n        const v = this.dict[w];\n        for (const d of ['n', 'o', 'b'] as Array<'n' | 'o' | 'b'>) {\n          if (v[d]) result[d] = (result[d] || 0) + v[d]!;\n        }\n      }\n    }\n\n    return result;\n  }\n\n  stats(word: string, dice: Dice = 'New', type: Type = 'NWL') {\n    const val = this.dict[word];\n    const a = this.anagrams(word, type);\n    if (!isValid(word, this.dict, type) || !a.words.length) {\n      return {grade: ' ' as Grade};\n    }\n\n    const pf = val.freq === undefined ? -1 : this.percentiles.freqs.findIndex(v => v <= val.freq!);\n    const f = pf === -1 ? ' ' : gradeFreq(pf);\n\n    const s = (this.percentiles[dice])[type];\n    const d = dice.charAt(0).toLowerCase() as 'n' | 'o' | 'b';\n\n    const vw = val[d] || 0;\n    const pw = s.words.findIndex((v: number) => v <= vw);\n    const rw = rank(pw);\n\n    const va = a[d] || 0;\n    const pa = s.anagrams.findIndex((v: number) => v <= va);\n    const ra = rank(pa);\n\n    const g = [' ', 'A', 'B', 'C', 'D'][Math.ceil((rw + ra) / 2)] as Grade;\n\n    const pct = (v: number) => Math.round(((100 * v) / s.total) * 1000) / 1000;\n    const result: {\n      grade: Grade;\n      freq?: number;\n      word?: {p: number; v: number};\n      anagram?: {p: number; v: number};\n    } = {grade: g < f ? f : g};\n    if (pf > -1) result.freq = pf;\n    if (pw > -1) result.word = {p: pw, v: pct(val.freq!)};\n    if (pa > -1) result.anagram = {p: pa, v: pct(va)};\n    return result;\n  }\n\n  history(games: Array<[{[w: string]: any}, Set<string>]>, dice: Dice, type: Type) {\n    const d = dice.charAt(0).toLowerCase() as 'n' | 'o' | 'b';\n    const reverse = (w: string) => w.split('').reverse().join('');\n\n    const ratio: {[k: string]: number} = {};\n    const anadromes: {[k: string]: number} = {};\n    const anagrams: {[k: string]: number} = {};\n\n    const all: {[k: string]: number} = {};\n    const either: {[k: string]: number} = {};\n    const found: {[k: string]: number} = {};\n    let n = games.length;\n    for (const [possible, played] of games) {\n      const as: {[k: string]: string[]} = {};\n      for (const w in possible) {\n        all[w] = (all[w] || 0) + 1;\n        const a = Stats.toAnagram(w);\n        as[a] = as[a] || [];\n        as[a].push(w);\n\n        if (played.has(w)) {\n          found[w] = (found[w] || 0) + 1;\n\n          const r = reverse(w);\n          if (r !== w && possible[r]) {\n            const k = [w, r].sort()[0];\n            if (!played.has(r)) {\n              either[k] = (either[k] || 0) + 1;\n              // FIXME: why does this not remove NOD/DON in Big dice?\n              anadromes[k] = (anadromes[w] || 0) + (1 / n) * this.dict[k][d]!;\n            } else if (w === k) {\n              either[k] = (either[k] || 0) + 1;\n            }\n          }\n        } else {\n          ratio[w] = (ratio[w] || 0) + (1 / n) * this.dict[w][d]!;\n        }\n      }\n\n      for (const a in as) {\n        const group = as[a];\n        if (group.length <= 1) continue;\n        const f = group.filter(w => played.has(w)).length / group.length;\n        if (!f) continue;\n        const w = group.reduce((acc, w) => acc + this.dict[w][d]!, 0) / group.length;\n        anagrams[a] = (anagrams[a] || 0) + (1 / n) * w * (1 - f);\n      }\n      n--;\n    }\n\n    const K = Math.log(games.length);\n    for (const w in all) {\n      ratio[w] += K * this.dict[w][d]! * Math.pow(1 - (found[w] || 0) / all[w], 2);\n      if (anadromes[w]) {\n        const r = reverse(w);\n        const [a, b] = (found[r] || 0) > (found[w] || 0) ? [w, r] : [r, w];\n        anadromes[w] += K * this.dict[w][d]! * 2 * Math.pow(1 - (found[a] || 0) / (all[b] || 1), 2);\n      }\n\n      const a = Stats.toAnagram(w);\n      if (anagrams[a] && all[w]) {\n        anagrams[w] += K * this.dict[w][d]! * Math.pow(1 - (found[w] || 0) / all[w], 2);\n      }\n    }\n\n    const sorted = (obj: {[k: string]: number}, limit: number) =>\n      Object.entries(obj)\n        .sort((a, b) => b[1] - a[1])\n        .slice(0, limit);\n\n    return {\n      words: sorted(ratio, 100).map(e => ({\n        w: e[0],\n        found: found[e[0]] || 0,\n        all: all[e[0]] || 0,\n      })),\n      anadromes: sorted(anadromes, 50).map(e => {\n        const k = e[0];\n        const r = reverse(k);\n        const [n, d] = (found[r] || 0) > (found[k] || 0) ? [k, r] : [r, k];\n        return {n, fn: found[n] || 0, d, fd: found[d] || 0, e: either[k] || 0};\n      }),\n      anagrams: sorted(anagrams, 50).map(e => {\n        const group = [];\n        // FIXME: should pass in min length and 3 letter words should have B scores\n        for (const r of order(this.anagrams(e[0], type).words)) {\n          const w = r.replace(/[^A-Z]/, '');\n          group.push({raw: r, found: found[w] || 0, all: all[w] || 0});\n        }\n        return group;\n      }),\n    };\n  }\n\n  static toAnagram(word: string) {\n    return word.split('').sort().join('');\n  }\n}\n\nfunction gradeFreq(p: number) {\n  if (p >= 99) return ' ';\n  if (p >= 20) return 'A';\n  if (p >= 10) return 'B';\n  if (p >= 5) return 'C';\n  return 'D';\n}\n\nfunction rank(p: number) {\n  if (p >= 75) return 0;\n  if (p >= 50) return 1;\n  if (p >= 25) return 2;\n  if (p >= 10) return 3;\n  return 4;\n}\n","export interface Dictionary {\n  [word: string]: Entry;\n}\n\nexport interface Entry {\n  defn: string;\n\n  freq?: number;\n  dict?: string;\n\n  n?: number;\n  o?: number;\n  b?: number;\n}\n\nexport type Type = 'NWL' | 'ENABLE' | 'CSW';\n\n// TODO: linkify? recurse?\nexport function define(word: string, dict: Dictionary) {\n  const val = dict[word];\n  if (!val) return '';\n  const re = /[{<](.*?)?=.*?[>}]/g;\n  let def = dict[word].defn;\n  if (!def) return '';\n  const match = re.exec(def);\n  if (match) {\n    const m = dict[match[1].toUpperCase()];\n    if (!m?.defn) {\n      def = match[1];\n    } else {\n      def = `${match[1]} (${m.defn})`;\n    }\n  }\n  return def\n    .replace(/\\{(.*?)=.*?\\}/g, '$1')\n    .replace(/<(.*?)=.*?>/g, '$1')\n    .replace(/\\s*?\\[.*?\\]\\s*?/g, '');\n}\n\nexport function isValid(word: string, dict: Dictionary, type: Type) {\n  const val = dict[word];\n  return val && (!val.dict || val.dict.includes(type.charAt(0)));\n}\n\nexport function order(words: string[]) {\n  const ordered = [];\n\n  const anadromes = new Set();\n  for (const w of words) {\n    const r = w.split('').reverse().join('');\n    if (r !== w && words.includes(r)) {\n      const key = `${[w, r].sort().join(' ')}`;\n      if (!anadromes.has(key)) {\n        anadromes.add(key);\n        ordered.push(`(${w}`, `${r})`);\n      }\n    } else {\n      ordered.push(w);\n    }\n  }\n  return ordered;\n}\n","export class Store {\n  dbName: string;\n  readonly storeName: string;\n  private readonly db: Promise<IDBDatabase>;\n\n  static async setup(dbName = 'keyval', storeNames = ['keyval']) {\n    return new Promise((resolve, reject) => {\n      const openreq = indexedDB.open(dbName, 1);\n      openreq.onerror = () => reject(openreq.error);\n      openreq.onsuccess = () => resolve(openreq.result);\n      openreq.onupgradeneeded = () => {\n        for (const storeName of storeNames) {\n          openreq.result.createObjectStore(storeName);\n        }\n      };\n    });\n  }\n\n  constructor(dbName = 'keyval', storeName = 'keyval') {\n    this.dbName = dbName;\n    this.storeName = storeName;\n    this.db = new Promise((resolve, reject) => {\n      const openreq = indexedDB.open(dbName, 1);\n      openreq.onerror = () => reject(openreq.error);\n      openreq.onsuccess = () => resolve(openreq.result);\n\n      // First time setup: create an empty object store\n      openreq.onupgradeneeded = () => {\n        openreq.result.createObjectStore(storeName);\n      };\n    });\n  }\n\n  get<T>(key: string): Promise<T> {\n    let req: IDBRequest;\n    return this.withIDBStore('readonly', store => {\n      req = store.get(key);\n    }).then(() => req.result);\n  }\n\n  set<T>(key: string, value: T): Promise<void> {\n    return this.withIDBStore('readwrite', store => {\n      store.put(value, key);\n    });\n  }\n\n  private withIDBStore(\n    type: IDBTransactionMode,\n    callback: (store: IDBObjectStore) => void\n  ): Promise<void> {\n    return this.db.then(\n      db =>\n        new Promise<void>((resolve, reject) => {\n          const transaction = db.transaction(this.storeName, type);\n          transaction.oncomplete = () => resolve();\n          transaction.onabort = transaction.onerror = () => reject(transaction.error);\n          callback(transaction.objectStore(this.storeName));\n        })\n    );\n  }\n}\n","import {Type, order} from './dict';\nimport {Random} from './random';\nimport {Dice} from './settings';\nimport {Stats} from './stats';\nimport {Store} from './store';\n\nconst PERIOD = 3;\nconst DAY = 24 * 60 * 60 * 1000;\n\ntype Comparator<T> = (a: T, b: T) => number;\n\nfunction defaultCompare<T>(a: T, b: T) {\n  return a < b ? -1 : a > b ? 1 : 0;\n}\n\nclass Queue<T> {\n  length: number;\n  data: T[];\n  compare: Comparator<T>;\n\n  constructor(data: T[] = [], compare: Comparator<T> = defaultCompare) {\n    this.data = data;\n    this.length = this.data.length;\n    this.compare = compare;\n\n    if (this.length > 0) {\n      for (let i = (this.length >> 1) - 1; i >= 0; i--) this.down(i);\n    }\n  }\n\n  push(item: T) {\n    this.data.push(item);\n    this.length++;\n    this.up(this.length - 1);\n  }\n\n  pop(): T | undefined {\n    if (this.length === 0) return undefined;\n\n    const top = this.data[0];\n    const bottom = this.data.pop()!;\n    this.length--;\n\n    if (this.length > 0) {\n      this.data[0] = bottom;\n      this.down(0);\n    }\n\n    return top;\n  }\n\n  peek(): T | undefined {\n    return this.data[0];\n  }\n\n  private up(pos: number) {\n    const item = this.data[pos];\n\n    while (pos > 0) {\n      const parent = (pos - 1) >> 1;\n      const current = this.data[parent];\n      if (this.compare(item, current) >= 0) break;\n      this.data[pos] = current;\n      pos = parent;\n    }\n\n    this.data[pos] = item;\n  }\n\n  private down(pos: number) {\n    const half = this.length >> 1;\n    const item = this.data[pos];\n\n    while (pos < half) {\n      let left = (pos << 1) + 1;\n      let best = this.data[left];\n      const right = left + 1;\n\n      if (right < this.length && this.compare(this.data[right], best) < 0) {\n        left = right;\n        best = this.data[right];\n      }\n      if (this.compare(best, item) >= 0) break;\n\n      this.data[pos] = best;\n      pos = left;\n    }\n\n    this.data[pos] = item;\n  }\n}\n\nexport interface TrainingStats {\n  k: string; // key\n  e: number; // easiness\n  c: number; // correct\n  n: number; // encounters\n  d: number; // due date\n  p: number; // previous\n}\n\nexport class TrainingPool {\n  readonly type: Type;\n\n  private readonly d: 'n' | 'o' | 'b';\n  private readonly unlearned: string[];\n  private readonly learned: Queue<TrainingStats>;\n  private readonly store: Store;\n  private readonly stats: Stats;\n\n  size: number;\n\n  static async create(stats: Stats, dice: Dice, type: Type, store: Store, min: number) {\n    const d = dice.toLowerCase()[0] as 'n' | 'o' | 'b';\n    // NOTE: learned is shared across dice...\n    const learned = new Queue<TrainingStats>([] /* filled in */, (a, b) => a.d - b.d);\n\n    const queued = new Set();\n    // TODO: store short separately and iterate over depending on min length\n    const stored: TrainingStats[] | undefined = await store.get('data');\n    if (stored) {\n      learned.data = stored;\n      learned.length = stored.length;\n      for (const s of stored) queued.add(s.k);\n    }\n\n    const raw = [];\n    for (const k in stats.mixed) {\n      if (!queued.has(k)) {\n        const w = stats.anagrams(k, type, min)[d] || 0;\n        if (w) raw.push({k, w});\n      }\n    }\n    raw.sort((a, b) => a.w - b.w);\n    const unlearned = raw.map(e => e.k);\n\n    return new TrainingPool(unlearned, learned, d, type, store, stats);\n  }\n\n  private constructor(\n    unlearned: string[],\n    learned: Queue<TrainingStats>,\n    d: 'n' | 'o' | 'b',\n    type: Type,\n    store: Store,\n    stats: Stats\n  ) {\n    this.unlearned = unlearned;\n    this.learned = learned;\n    this.size = learned.length;\n    this.d = d;\n    this.type = type;\n    this.store = store;\n    this.stats = stats;\n  }\n\n  overdue() {\n    const now = +new Date();\n    const popped = [];\n    let overdue = this.size === this.learned.length ? 0 : 1;\n    for (let next = this.learned.pop(); next; next = this.learned.pop()) {\n      popped.push(next);\n      if (next.d > now) break;\n      overdue++;\n    }\n    for (const p of popped) this.learned.push(p);\n    return overdue;\n  }\n\n  next() {\n    const now = +new Date();\n    const backfill = () => {\n      if (!this.unlearned.length) return undefined;\n      return {\n        k: this.unlearned.pop()!,\n        e: 2.5,\n        c: 0,\n        n: 0,\n        d: 0,\n        p: 0,\n      };\n    };\n    // TODO: what about if settings change and group no longer valid (eg. min length)?\n    let next: TrainingStats | undefined = this.learned.pop();\n    if (next) {\n      if (next.d > now) {\n        const fill = backfill();\n        if (fill) {\n          this.learned.push(next);\n          next = fill;\n        }\n      }\n    } else {\n      next = backfill();\n    }\n    if (!next) throw new RangeError();\n\n    let key = next.k;\n    const anagrams = this.stats.anagrams(key, this.type);\n    const group = anagrams.words;\n\n    const restore = () => {\n      this.learned.push(next!);\n      this.size = this.learned.length;\n    };\n    const update = (q: number) => {\n      next = adjust(next!, q, now);\n      restore();\n      return this.store.set('data', this.learned.data);\n    };\n\n    const random = new Random(next.n);\n    // try to find a permutation which isn't in the group\n    for (let i = 0; i < 10; i++) {\n      key = random.shuffle(key.split('')).join('');\n      if (!group.includes(key)) break;\n    }\n\n    return {label: key, group: order(group), update, restore};\n  }\n}\n\nfunction adjust(v: TrainingStats, q: number, now: number) {\n  // Standard update from SM2: https://www.supermemo.com/en/archives1990-2015/english/ol/sm2\n  let mod = -0.8 + 0.28 * q - 0.02 * q * q;\n  // During the initial learning phase (n < 5), only apply a fraction of the modifier if negative\n  // https://apps.ankiweb.net/docs/manual.html#what-spaced-repetition-algorithm-does-anki-use\n  if (mod < 0) mod *= Math.min(Math.pow(2, v.n + 1) * 2.5, 100) / 100;\n  // SM2 uses a minimum easiness of 1.3\n  const min = 1.3;\n\n  if (q >= 3) {\n    // http://www.blueraja.com/blog/477/a-better-spaced-repetition-learning-algorithm-sm2\n    const bonus = v.d ? Math.min(2, (v.d - v.p) / DAY / (v.c ? PERIOD : 1)) : 1;\n    v.c++;\n    v.e = Math.max(min, v.e + mod * bonus);\n    v.d = now + DAY * PERIOD * Math.pow(v.e, v.c - 1) * bonus;\n  } else {\n    v.c = 0;\n    v.e = Math.max(min, v.e + mod);\n    v.d = now + DAY;\n  }\n  v.n++;\n  v.p = now;\n\n  return v;\n}\n","export class Random {\n  /* private */ seed: number;\n\n  constructor(n = 4 /* https://xkcd.com/221/ */) {\n    // Hash: https://burtleburtle.net/bob/hash/integer.html\n    n = n ^ 61 ^ (n >>> 16);\n    n = n + (n << 3);\n    n = n ^ (n >>> 4);\n    n = Math.imul(n, 0x27d4eb2d);\n    n = n ^ (n >>> 15);\n    this.seed = n >>> 0;\n  }\n\n  // Mulberry32: https://gist.github.com/tommyettinger/46a874533244883189143505d203312c\n  next(min?: number, max?: number) {\n    if (min) min = Math.floor(min);\n    if (max) max = Math.floor(max);\n\n    let z = (this.seed += 0x6d2b79f5 | 0);\n    z = Math.imul(z ^ (z >>> 15), z | 1);\n    z = z ^ (z + Math.imul(z ^ (z >>> 7), z | 61));\n    z = (z ^ (z >>> 14)) >>> 0;\n    const n = z / 2 ** 32;\n\n    if (min === undefined) return n;\n    if (!max) return Math.floor(n * min);\n    return Math.floor(n * (max - min)) + min;\n  }\n\n  shuffle<T>(arr: T[]) {\n    for (let i = arr.length - 1; i > 0; i--) {\n      const j = Math.floor(this.next() * (i + 1));\n      [arr[i], arr[j]] = [arr[j], arr[i]];\n    }\n    return arr;\n  }\n\n  sample<T>(arr: T[], remove = false) {\n    if (arr.length === 0) throw new RangeError('Cannot sample an empty array');\n    const index = this.next(arr.length);\n    const val = arr[index];\n    if (remove) {\n      arr[index] = arr[arr.length - 1];\n      arr.pop();\n    }\n    if (val === undefined && !Object.prototype.hasOwnProperty.call(arr, index)) {\n      throw new RangeError('Cannot sample a sparse array');\n    }\n    return val;\n  }\n}\n","import {Dictionary} from '../dict';\nimport {Game, GameJSON} from '../game';\nimport {Settings} from '../settings';\nimport {Data, Stats} from '../stats';\nimport {Store} from '../store';\nimport {Trie} from '../trie';\n\nconst STORE = new Store('db', 'store');\nconst DEFAULTS: Settings = {\n  dice: 'New',\n  min: 3,\n  dict: 'NWL',\n  grade: 'D',\n  shortcuts: 'None',\n  display: 'Show',\n  theme: 'System',\n};\nconst fetchJSON = (url: string) => fetch(url, {mode: 'no-cors'}).then(j => j.json());\n// TODO: TRIE, STATS, GAMES, and the TrainingPool creation\n// need to be moved to a background worker and transferred in.\nexport const global: {\n  SETTINGS: Settings;\n  STORE: Store;\n  LIMIT: number;\n  MAX_SEED: number;\n  DICT: Dictionary;\n  STATS: Stats;\n  HISTORY: GameJSON[];\n  TRIE: Trie;\n  GAMES: Array<[{[word: string]: any}, Set<string>]> | undefined;\n  PLAYED: Set<string> | undefined;\n  SEED: number;\n  LOADED: {\n    DICT: Promise<void>;\n    TRIE: () => Promise<void>;\n    STATS: () => Promise<void>;\n    HISTORY: Promise<void>;\n    TRAINING: Promise<void>;\n    GAMES: () => Promise<void>;\n    PLAYED: () => Promise<void>;\n  };\n} = {\n  SETTINGS: (JSON.parse(localStorage.getItem('settings')!) as Settings) || DEFAULTS,\n  STORE,\n  LIMIT: 500,\n  MAX_SEED: 1e12,\n  DICT: (undefined as unknown) as Dictionary,\n  STATS: (undefined as unknown) as Stats,\n  HISTORY: (undefined as unknown) as GameJSON[],\n  TRIE: (undefined as unknown) as Trie,\n  GAMES: undefined as Array<[{[word: string]: any}, Set<string>]> | undefined,\n  PLAYED: undefined as Set<string> | undefined,\n  SEED: 0,\n  LOADED: {\n    DICT: fetchJSON('data/dict.json').then(d => {\n      global.DICT = d;\n    }),\n    TRIE: async () => {\n      if (global.TRIE) return;\n      await global.LOADED.DICT;\n      global.TRIE = Trie.create(global.DICT);\n    },\n    STATS: async () => {\n      if (global.STATS) return;\n      let stats: Data;\n      await Promise.all([\n        global.LOADED.DICT,\n        fetchJSON('data/stats.json').then(s => {\n          stats = s;\n        }),\n      ]);\n      global.STATS = new Stats(stats!, global.DICT);\n    },\n    HISTORY: STORE.get('history').then(h => {\n      global.HISTORY = (h as GameJSON[]) || [];\n    }),\n    TRAINING: Store.setup('training', ['NWL', 'ENABLE', 'CSW']) as Promise<void>,\n    GAMES: async () => {\n      if (global.GAMES) return;\n      await Promise.all([\n        global.LOADED.HISTORY,\n        global.LOADED.TRIE(),\n        global.LOADED.DICT,\n        global.LOADED.STATS(),\n      ]);\n      global.GAMES = [];\n      for (let i = global.HISTORY.length - 1; i >= 0 && global.GAMES.length < global.LIMIT; i--) {\n        const game = Game.fromJSON(global.HISTORY[i], global.TRIE, global.DICT, global.STATS);\n        const played = new Set<string>();\n        for (const w in game.played) {\n          if (game.played[w] > 0) played.add(w);\n        }\n        global.GAMES.push([game.possible, played]);\n      }\n    },\n    PLAYED: async () => {\n      if (global.PLAYED) return;\n      await global.LOADED.HISTORY;\n      global.PLAYED = new Set();\n      for (const h of global.HISTORY) global.PLAYED.add(h.seed);\n    },\n  },\n};\n","import {Dictionary, Type, define} from './dict';\nimport {Random} from './random';\nimport {Dice, MinLength, Settings} from './settings';\nimport {Grade, Stats} from './stats';\nimport {Trie} from './trie';\n\nconst NEW_DICE = [\n  'AAEEGN', 'ELRTTY', 'AOOTTW', 'ABBJOO',\n  'EHRTVW', 'CIMOTU', 'DISTTY', 'EIOSST',\n  'DELRVY', 'ACHOPS', 'HIMNQU', 'EEINSU',\n  'EEGHNW', 'AFFKPS', 'HLNNRZ', 'DEILRX',\n];\n\nconst OLD_DICE = [\n  'AACIOT', 'AHMORS', 'EGKLUY', 'ABILTY',\n  'ACDEMP', 'EGINTV', 'GILRUW', 'ELPSTU',\n  'DENOSW', 'ACELRS', 'ABJMOQ', 'EEFHIY',\n  'EHINPS', 'DKNOTU', 'ADENVZ', 'BIFORX',\n];\n\nconst BIG_DICE = [\n  'AAAFRS', 'AAEEEE', 'AAFIRS', 'ADENNN', 'AEEEEM',\n  'AEEGMU', 'AEGMNN', 'AFIRSY', 'BJKQXZ', 'CCNSTW',\n  'CEIILT', 'CEILPT', 'CEIPST', 'DDLNOR', 'DHHLOR',\n  'DHHNOT', 'DHLNOR', 'EIIITT', 'EMOTTT', 'ENSSSU',\n  'FIPRSY', 'GORRVW', 'HIPRRY', 'NOOTUW', 'OOOTTU',\n];\n\nexport const SUFFIXES = ['S', 'ER', 'ED', 'ING'];\n\nexport interface GameSettings {\n  dice: Dice;\n  dict: Type;\n  min?: MinLength;\n}\n\nexport interface GameJSON {\n  seed: string;\n  start: number;\n  expired: number | null;\n  words: {[word: string]: number};\n  goal: {\n    S: number;\n    A: number;\n    B: number;\n    C: number;\n    D: number;\n  };\n}\n\nexport class Game {\n  private readonly trie: Trie;\n  private readonly dict: Dictionary;\n  private readonly stats: Stats;\n\n  private readonly dice: string[];\n\n  readonly seed: number;\n  readonly board: string[];\n  readonly random: Random;\n  readonly settings: Omit<Settings, 'grade'>;\n  readonly size: number;\n  readonly possible: {[word: string]: Array<[number, number]>};\n  readonly id: string;\n  readonly played: {[word: string]: number};\n  readonly overtime: Set<string>;\n  readonly score: {regular: number; overtime: number};\n  readonly start: number;\n\n  expired: number | null;\n  private totals_:\n  | {\n    s: number;\n    a: number;\n    b: number;\n    c: number;\n    d: number;\n    anagrams: {[anagram: string]: string[]};\n  }\n  | undefined;\n\n  constructor(\n    trie: Trie,\n    dict: Dictionary,\n    stats: Stats,\n    random: Random,\n    settings: GameSettings = {dice: 'New', dict: 'NWL'}\n  ) {\n    this.trie = trie;\n    this.dict = dict;\n    this.stats = stats;\n\n    this.dice = settings.dice === 'Big' ? BIG_DICE : settings.dice === 'Old' ? OLD_DICE : NEW_DICE;\n    this.size = Math.sqrt(this.dice.length);\n    settings.min = (settings.min || this.size - 1) as MinLength;\n    this.settings = settings as Settings;\n\n    this.random = random;\n    this.seed = this.random.seed;\n    this.board = [];\n    for (const die of this.dice) {\n      const c = this.random.sample(die.split(''));\n      this.board.push(c === 'Q' ? 'Qu' : c);\n    }\n    this.random.shuffle(this.board);\n    this.possible = this.solve();\n\n    this.id = Game.encodeID(this.settings, this.seed);\n    this.played = {};\n    this.overtime = new Set();\n    this.score = {regular: 0, overtime: 0};\n\n    this.start = +new Date();\n    this.expired = null; // set to timestamp!\n  }\n\n  play(word: string) {\n    if (!this.played[word] && word.length >= this.settings.min) {\n      if (this.possible[word]) {\n        this.played[word] = +new Date();\n        const score = Game.score(word);\n        if (this.expired) this.overtime.add(word);\n\n        const bucket = this.expired ? 'overtime' : 'regular';\n        this.score[bucket] += score;\n        return score;\n      } else {\n        this.played[word] = -new Date();\n        if (this.expired) this.overtime.add(word);\n      }\n    }\n    return 0;\n  }\n\n  toJSON(): GameJSON {\n    return {\n      seed: this.id,\n      start: this.start,\n      expired: this.expired,\n      words: this.played,\n      goal: {\n        S: this.totals.s,\n        A: this.totals.a,\n        B: this.totals.b,\n        C: this.totals.c,\n        D: this.totals.d,\n      },\n    };\n  }\n\n  static encodeID(s: Omit<Settings, 'grade'>, seed: number) {\n    return `${s.dice.charAt(0)}${s.min}${s.dict.charAt(0)}${seed}`;\n  }\n\n  static decodeID(id: string): [Partial<GameSettings>, number] {\n    const d = id.charAt(0);\n    const dice = d === 'N' ? 'New' : d === 'O' ? 'Old' : d === 'B' ? 'Big' : undefined;\n    let min: MinLength | undefined = Number(id.charAt(1)) as MinLength;\n    if (isNaN(min) || min < 3 || min > 5) min = undefined;\n    const t = id.charAt(2);\n    const dict = t === 'N' ? 'NWL' : t === 'E' ? 'ENABLE' : t === 'C' ? 'CSW' : undefined;\n\n    const num = id.slice(3);\n    let seed = num.length ? Number(num) : NaN;\n    if (String(seed) !== num) seed = NaN;\n\n    return [{dice, min, dict}, seed];\n  }\n\n  static fromJSON(json: GameJSON, trie: Trie, dict: Dictionary, stats: Stats) {\n    const [settings, seed] = Game.decodeID(json.seed);\n    const random = new Random();\n    random.seed = seed;\n    const game = new Game(trie, dict, stats, random, settings as GameSettings);\n\n    // @ts-ignore readonly\n    game.start = json.start;\n    // @ts-ignore readonly\n    game.expired = json.expired;\n    // @ts-ignore readonly\n    game.played = json.words;\n\n    const score = {regular: 0, overtime: 0};\n    for (const w in game.played) {\n      if (game.played[w] < 0) continue;\n      const s = Game.score(w);\n      if (!game.expired || game.played[w] <= game.expired) {\n        score.regular += s;\n      } else {\n        score.overtime += s;\n      }\n    }\n\n    // @ts-ignore readonly\n    game.score = score;\n\n    return game;\n  }\n\n  get totals() {\n    if (this.totals_) return this.totals_;\n\n    const anagrams: {[anagram: string]: string[]} = {};\n    const grades: {[grade: string]: number} = {};\n    for (const word in this.possible) {\n      const anagram = Stats.toAnagram(word);\n      anagrams[anagram] = anagrams[anagram] || [];\n      anagrams[anagram].push(word);\n\n      const g = this.stats.stats(word, this.settings.dice, this.settings.dict).grade;\n      grades[g] = (grades[g] || 0) + Game.score(word);\n    }\n\n    const d = grades.D || 0;\n    const c = d + (grades.C || 0);\n    const b = c + (grades.B || 0);\n    const a = b + (grades.A || 0);\n    const s = a + (grades[' '] || 0);\n\n    return (this.totals_ = {s, a, b, c, d, anagrams});\n  }\n\n  progress() {\n    let total = 0;\n    let invalid = 0;\n    let valid = 0;\n    const suffixes: {[suffixed: string]: string} = {};\n    const subwords = new Set<string>();\n\n    const anagrams: {[anagram: string]: string[]} = {};\n    for (const word in this.played) {\n      total++;\n      if (this.played[word] < 0) {\n        invalid++;\n        continue;\n      }\n      valid++;\n\n      for (const suffix of SUFFIXES) {\n        let suffixed;\n        if (['ER', 'ED'].includes(suffix) && word.endsWith('E')) {\n          suffixed = `${word}${suffix.charAt(1)}`;\n        } else if (suffix === 'S' && (word.endsWith('S') || word.endsWith('X'))) {\n          suffixed = `${word}ES`;\n        } else {\n          suffixed = `${word}${suffix}`;\n        }\n        if (this.possible[suffixed] && !this.played[suffixed]) suffixes[suffixed] = word;\n      }\n\n      const anagram = Stats.toAnagram(word);\n      anagrams[anagram] = anagrams[anagram] || [];\n      anagrams[anagram].push(word);\n\n      for (const sub of subs(word, this.settings.min)) {\n        if (this.possible[sub] && !this.played[sub]) subwords.add(sub);\n      }\n    }\n\n    let missing: string[] = [];\n    for (const anagram in anagrams) {\n      missing = missing.concat(\n        this.totals.anagrams[anagram].filter(w => !anagrams[anagram].includes(w))\n      );\n    }\n\n    const words = new Set([...Object.keys(suffixes), ...subwords, ...missing]);\n    const score =\n      this.score.regular +\n      this.score.overtime +\n      Array.from(words).reduce((sum, w) => Game.score(w) + sum, 0);\n\n    return {\n      invalid,\n      valid,\n      total,\n      score,\n      suffixes,\n      subwords: subwords.size,\n      anagrams: missing.length,\n      missing: words,\n    };\n  }\n\n  state() {\n    const progress = this.progress();\n    const gr = (w: string) => this.stats.stats(w, this.settings.dice, this.settings.dict).grade;\n    // missing > grade > length > anagrams > alphabetical\n    const fn = (a: string, b: string) => {\n      const ma = progress.missing.has(a);\n      const mb = progress.missing.has(b);\n      if (ma && !mb) return -1;\n      if (mb && !ma) return 1;\n\n      const ga = gr(a);\n      const gb = gr(b);\n      if (ga > gb) return -1;\n      if (gb > ga) return 1;\n\n      if (a.length > b.length) return 1;\n      if (b.length > a.length) return -1;\n\n      return Stats.toAnagram(a).localeCompare(Stats.toAnagram(b));\n    };\n\n    const augment = (w: string) => ({\n      word: w,\n      grade: gr(w),\n      defn: define(w, this.dict),\n    });\n\n    return {\n      played: Array.from(Object.entries(this.played))\n        .sort((a, b) => Math.abs(a[1]) - Math.abs(b[1]))\n        .map(e => {\n          const w = e[0];\n          const v: {\n            word: string;\n            grade: Grade;\n            defn: string;\n            invalid?: boolean;\n            overtime?: boolean;\n          } = augment(w);\n          if (e[1] < 0) v.invalid = true;\n          if (this.overtime.has(w)) v.overtime = true;\n          return v;\n        }),\n      remaining: Object.keys(this.possible)\n        .filter(w => !this.played[w])\n        .sort(fn)\n        .map(w => {\n          const v: {\n            word: string;\n            grade: Grade;\n            defn: string;\n            missing?: boolean;\n            root?: string;\n          } = augment(w);\n          if (progress.missing.has(w)) v.missing = true;\n          if (progress.suffixes[w]) v.root = progress.suffixes[w];\n          return v;\n        }),\n      progress,\n      totals: this.totals,\n    };\n  }\n\n  solve() {\n    const words: {[word: string]: Array<[number, number]>} = {};\n    const queue: Array<[number, number, string, Trie, Array<[number, number]>]> = [];\n    for (let y = 0; y < this.size; y++) {\n      for (let x = 0; x < this.size; x++) {\n        let c = this.board[this.size * y + x];\n        const ord = c.charCodeAt(0);\n        let node = this.trie.children[ord - 65];\n        if (c === 'Qu' && node !== undefined) {\n          c = 'QU';\n          node = node.children[20]; // ('U' = 85) - 65\n        }\n        if (node !== undefined) {\n          queue.push([x, y, c, node, [[x, y]]]);\n        }\n      }\n    }\n    while (queue.length !== 0) {\n      const [x, y, s, node, h] = queue.pop()!;\n      // eslint-disable-next-line max-len\n      for (const [dx, dy] of [[1, 0], [1, -1], [0, -1], [-1, -1], [-1, 0], [-1, 1], [0, 1], [1, 1]]) {\n        const [x2, y2] = [x + dx, y + dy];\n        if (h.find(e => e[0] === x2 && e[1] === y2) !== undefined) continue;\n        if (x2 >= 0 && x2 < this.size && y2 >= 0 && y2 < this.size) {\n          const hist = h.slice();\n          hist.push([x2, y2]);\n\n          let c = this.board[this.size * y2 + x2];\n          let node2 = node.children[c.charCodeAt(0) - 65];\n          if (c === 'Qu' && node2 !== undefined) {\n            c = 'QU';\n            node2 = node2.children[20]; // ('U' = 85) - 65\n          }\n          if (node2 !== undefined) {\n            const s2 = s + c;\n            const isWord = typeof node2.isWord === 'boolean'\n              ? node2.isWord : node2.isWord.includes(this.settings.dict.charAt(0));\n            if (isWord && s2.length >= this.settings.min) words[s2] = hist;\n            queue.push([x2, y2, s2, node2, hist]);\n          }\n        }\n      }\n    }\n    return words;\n  }\n\n  static score(word: string) {\n    if (word.length < 3) return 0;\n    if (word.length <= 4) return 1;\n    if (word.length === 5) return 2;\n    if (word.length === 6) return 3;\n    if (word.length === 7) return 5;\n    /* if (word.length >= 8) */ return 11;\n  }\n}\n\nfunction subs(word: string, min: number) {\n  const words = new Set<string>();\n\n  for (let b = 0; b < word.length; b++) {\n    for (let e = 1; e <= word.length - b; e++) {\n      const s = word.substr(b, e);\n      if (s.length >= min) words.add(s);\n    }\n  }\n\n  return words;\n}\n","import {Dictionary} from './dict';\n\nexport class Trie {\n  parent: Trie | null;\n  children: Trie[];\n  isWord: string | boolean;\n\n  private constructor(parent: Trie | null, value: string) {\n    this.parent = parent;\n    this.children = new Array(26);\n    this.isWord = false;\n    if (parent !== null) parent.children[value.charCodeAt(0) - 65] = this;\n  }\n\n  static create(dict: Dictionary) {\n    const root = new Trie(null, '');\n    for (const word in dict) {\n      let current = root;\n      for (const letter of word) {\n        const ord = letter.charCodeAt(0);\n        let next = current.children[ord - 65];\n        if (next === undefined) next = new Trie(current, letter);\n        current = next;\n      }\n      current.isWord = dict[word].dict || true;\n    }\n    return root;\n  }\n}\n","import {define} from '../dict';\nimport {Game, GameJSON, GameSettings} from '../game';\nimport {Random} from '../random';\nimport {Settings, Theme} from '../settings';\n\nimport {BoardView} from './board';\nimport {DefineView} from './define';\nimport {global} from './global';\nimport {MenuView} from './menu';\nimport {ReviewView} from './review';\nimport {ScoreView} from './score';\nimport {SettingsView} from './settings';\nimport {StatsView} from './stats';\nimport {TrainingView} from './training';\n\nclass Loader {\n  private loader!: HTMLElement;\n\n  attach() {\n    this.loader = UI.createElementWithId('div', 'loader');\n    const spinner = UI.createElementWithId('div', 'spinner');\n    this.loader.appendChild(spinner);\n    return this.loader;\n  }\n\n  detach() {\n    return this.loader;\n  }\n}\n\nexport interface View {\n  toJSON(): any;\n  attach(data?: any): HTMLElement | Promise<HTMLElement>;\n  detach(next: string): HTMLElement | Promise<HTMLElement>;\n  afterAttach?: () => void;\n  onKeyDown?: (e: KeyboardEvent) => Promise<void>;\n}\n\nexport const UI = new (class {\n  root!: HTMLElement;\n  BACK!: HTMLImageElement;\n  current!: string;\n  previous!: string;\n  Views!: {[view: string]: View};\n  loader!: Loader;\n\n  async create() {\n    setTimeout(() => window.scrollTo(0, 1), 0);\n    const mobile =\n      typeof window.orientation !== 'undefined' || navigator.userAgent.includes('IEMobile');\n    if (mobile) {\n      setTimeout(() => {\n        const meta = document.querySelector('meta[name=viewport]')!;\n        const w = window.innerWidth;\n        const h = window.innerHeight;\n        meta.setAttribute(\n          'content',\n          `width=${w}, height=${h}, initial-scale=1, user-scalable=no, minimal-ui`\n        );\n      }, 200);\n      // https://stackoverflow.com/questions/7919172\n      window.addEventListener('orientationchange', () => {\n        document.body.style.display = 'none';\n        // eslint-disable-next-line no-unused-expressions\n        document.body.offsetHeight; // cause a reflow\n        document.body.style.display = 'block'; // cause a repaint\n      });\n    }\n    const pref = window.matchMedia('(prefers-color-scheme: dark)');\n    const listener = (e: MediaQueryListEvent) => {\n      if (global.SETTINGS.theme === 'System') {\n        this.setTheme(e.matches ? 'Dark' : 'Light');\n      }\n    };\n    try {\n      pref.addEventListener('change', listener);\n    } catch (err) {\n      pref.addListener(listener);\n    }\n    this.setTheme(\n      global.SETTINGS.theme === 'System'\n        ? pref.matches\n          ? 'Dark'\n          : 'Light'\n        : global.SETTINGS.theme\n    );\n\n    this.root = document.getElementById('display')!;\n\n    const state = JSON.parse(localStorage.getItem('state')!);\n    this.current = state ? state.current : 'Menu';\n    this.previous = state ? state.previous : 'Menu';\n    this.loader = new Loader();\n    const VIEWS = {\n      Menu: MenuView,\n      Board: BoardView,\n      Training: TrainingView,\n      Define: DefineView,\n      Stats: StatsView,\n      Settings: SettingsView,\n    };\n    const views = state ? state.views : {};\n    this.Views = {};\n    for (const [type, V] of Object.entries(VIEWS)) {\n      // @ts-ignore\n      this.Views[type] = new V(views[type]);\n    }\n    this.Views.Review = new ReviewView(this.Views.Training as TrainingView);\n    this.Views.Score = new ScoreView(this.Views.Board as BoardView);\n\n    await this.setup();\n\n    this.BACK = document.createElement('img');\n    this.BACK.src = (document.getElementById('svg') as HTMLImageElement).src;\n    this.BACK.height = 20;\n\n    document.addEventListener('keydown', e => this.onKeyDown(e));\n    document.addEventListener('swiped-left', () => this.toggleView('Define'));\n    document.addEventListener('swiped-right', () => this.toggleView('Define'));\n    window.addEventListener('hashchange', () => this.onHashChange());\n    window.addEventListener('beforeunload', () => this.persist());\n\n    await this.attachView(this.current);\n  }\n\n  persist(previous = false) {\n    const state = JSON.parse(localStorage.getItem('state')!) || {};\n    state.current = this.current;\n    state.previous = this.previous;\n    state.views = state.views || {};\n    state.views[this.current] = this.Views[this.current];\n    if (previous) state.views[this.previous] = this.Views[this.previous];\n    localStorage.setItem('state', JSON.stringify(state));\n  }\n\n  async attachView(view: string, data?: any) {\n    // console.log(+new Date(), 'ATTACHING', view, data, this.Views[view]);\n    this.root.appendChild(this.loader.attach());\n    const v = this.Views[view];\n    const attached = await v.attach(data);\n    this.root.removeChild(this.loader.detach());\n    this.root.appendChild(attached);\n    if (v.afterAttach) v.afterAttach();\n    // console.log(+new Date(), 'ATTACHED', view, data, this.Views[view]);\n  }\n\n  async detachView(view: string, next: string) {\n    // console.log(+new Date(), 'DETACHING', view, this.Views[view]);\n    this.root.removeChild(await this.Views[view].detach(next));\n    // console.log(+new Date(), 'DETACHED', view, this.Views[view]);\n  }\n\n  async toggleView(view: string, data?: any) {\n    // console.log('TOGGLE', view, {current: this.current, previous: this.previous});\n    if (this.current === view) {\n      await this.detachView(view, this.previous);\n      this.current = this.previous;\n      this.previous = view;\n      await this.attachView(this.current, data);\n    } else {\n      await this.detachView(this.current, view);\n      this.previous = this.current;\n      this.current = view;\n      await this.attachView(view, data);\n    }\n    this.persist(true);\n  }\n\n  async setup() {\n    const setupFromHistory = async () => {\n      await global.LOADED.HISTORY;\n      if (global.HISTORY.length) {\n        const id = global.HISTORY[global.HISTORY.length - 1].seed;\n        const [settings] = Game.decodeID(id);\n\n        const rand = new Random();\n        rand.seed = global.SEED;\n        rand.next();\n\n        this.updateSettings(settings, rand.seed % global.MAX_SEED, false);\n      }\n    };\n\n    const hash = document.location.hash?.slice(1);\n    if (!hash) {\n      const existing = (this.Views.Board as BoardView).game;\n      if (existing) {\n        const [settings, seed] = Game.decodeID((existing as GameJSON).seed);\n        this.updateSettings(settings, seed, false);\n      } else {\n        return setupFromHistory();\n      }\n    } else {\n      const [settings, seed] = Game.decodeID(hash);\n      if (!this.valid(settings, seed)) {\n        return setupFromHistory();\n      }\n      this.updateSettings(settings, seed, false);\n    }\n  }\n\n  async onKeyDown(e: KeyboardEvent) {\n    const key = e.keyCode;\n    const currentView = this.Views[this.current];\n    if (key === 191 && e.shiftKey) {\n      e.preventDefault();\n      await this.toggleView('Define');\n    } else if ('onKeyDown' in currentView) {\n      await currentView.onKeyDown!(e);\n    }\n  }\n\n  async onHashChange() {\n    if (!document.location.hash) return;\n    const [settings, seed] = Game.decodeID(document.location.hash.slice(1));\n    if (!this.valid(settings, seed)) return;\n\n    let refresh = seed !== global.SEED;\n    if (!refresh) {\n      const s = {...global.SETTINGS};\n      refresh = s.dice !== settings.dice || s.min !== settings.min || s.dict !== settings.dict;\n    }\n    this.updateSettings(settings, seed, false);\n\n    if (this.current === 'Settings') {\n      (this.Views[this.current] as SettingsView).update();\n    } else if (refresh && ['Board', 'Score'].includes(this.current)) {\n      return (this.Views.Board as BoardView).refresh({new: true, allowDupes: true});\n    }\n  }\n\n  valid(settings: Partial<GameSettings>, seed: number) {\n    return !!(\n      !isNaN(seed) &&\n      Number.isInteger(seed) &&\n      seed < global.MAX_SEED &&\n      settings.dice &&\n      settings.dict &&\n      settings.min\n    );\n  }\n\n  updateSettings(settings: Partial<Settings>, seed?: number, dom = true) {\n    Object.assign(global.SETTINGS, settings);\n    localStorage.setItem('settings', JSON.stringify(global.SETTINGS));\n    if (typeof seed === 'number') global.SEED = seed;\n\n    const id = Game.encodeID(global.SETTINGS, global.SEED);\n    window.history.replaceState(null, '', `#${id}`);\n\n    if (dom && this.current === 'Settings') {\n      const view = this.Views[this.current] as SettingsView;\n      view.seed.textContent = id;\n      view.seed.classList.remove('error');\n    }\n  }\n\n  createElementWithId(type: string, id: string) {\n    const element = document.createElement(type);\n    element.setAttribute('id', id);\n    return element;\n  }\n\n  createTopbar(left: HTMLElement | null, center: HTMLElement | null, right: HTMLElement | null) {\n    const topbar = this.createElementWithId('header', 'topbar');\n    topbar.appendChild(left || document.createElement('div'));\n    topbar.appendChild(center || document.createElement('div'));\n    topbar.appendChild(right || document.createElement('div'));\n    return topbar;\n  }\n\n  createBackButton(fn: (e: MouseEvent) => void) {\n    const back = this.createElementWithId('div', 'back');\n    back.appendChild(this.BACK);\n    back.addEventListener('mouseup', fn);\n    return back;\n  }\n\n  createPlaceholder() {\n    const empty = this.createElementWithId('div', 'empty');\n    empty.textContent = '...';\n    return empty;\n  }\n\n  permaFocus(element: HTMLInputElement) {\n    element.addEventListener('blur', () => setTimeout(() => element.focus(), 20));\n    element.focus();\n  }\n\n  setTheme(theme: Theme) {\n    document.documentElement.setAttribute('data-theme', theme.toLowerCase());\n  }\n\n  addAnagramRows(table: HTMLTableElement, group: string[]) {\n    for (const r of group) {\n      const w = r.replace(/[^A-Z]/, '');\n      const tr = document.createElement('tr');\n      const grade = global.STATS.stats(w, global.SETTINGS.dice, global.SETTINGS.dict).grade;\n      if (grade < global.SETTINGS.grade) tr.classList.add('hard');\n\n      let td = document.createElement('td');\n      const b = document.createElement('b');\n      const s = r.startsWith('(') ? `${r}\\xa0` : r.endsWith(')') ? `\\xa0${r}` : `\\xa0${r}\\xa0`;\n      b.textContent = `\\xa0${s}\\xa0`;\n      td.appendChild(b);\n      tr.appendChild(td);\n      td = document.createElement('td');\n      td.textContent = define(w, global.DICT);\n      tr.appendChild(td);\n\n      table.appendChild(tr);\n    }\n  }\n\n  createRadios(id: string, values: Array<string | [string]>, listener: () => void) {\n    const radios = this.createElementWithId('span', id);\n    radios.classList.add('toggle-group');\n    radios.classList.add('horizontal');\n    radios.setAttribute('role', 'radiogroup');\n    for (let val of values) {\n      let checked = false;\n      if (Array.isArray(val)) {\n        checked = true;\n        val = val[0];\n      }\n\n      const radio = this.createElementWithId('input', `${id}${val}`);\n      radio.classList.add('hide');\n      radio.setAttribute('type', 'radio');\n      radio.setAttribute('name', id);\n      radio.setAttribute('value', val);\n      if (checked) radio.setAttribute('checked', 'checked');\n\n      const label = document.createElement('label');\n      label.classList.add('toggle');\n      label.setAttribute('for', `${id}${val}`);\n      label.textContent = val.toUpperCase();\n\n      radio.addEventListener('click', listener.bind(radio));\n\n      radios.appendChild(radio);\n      radios.appendChild(label);\n    }\n    return radios;\n  }\n})();\n","import {define} from '../dict';\nimport {Game, GameJSON, SUFFIXES} from '../game';\nimport {Random} from '../random';\nimport {Timer, TimerJSON} from '../timer';\n\nimport {global} from './global';\nimport {UI, View} from './ui';\n\nconst DURATION = 180 * 1000;\nconst VALID = (s: string) =>\n  s.split('').every(c => (c >= 'A' && c <= 'Z') || (c >= 'a' && c <= 'z'));\n\ninterface BoardJSON {\n  last: string;\n  kept: boolean;\n  paused: boolean;\n  timer: TimerJSON;\n  game?: GameJSON;\n}\n\nexport class BoardView implements View {\n  last: string;\n  kept: boolean;\n  paused: boolean;\n  timer: Timer;\n  game: GameJSON | Game | undefined;\n\n  played!: Set<string>;\n\n  timerDisplay: HTMLElement;\n  container!: HTMLElement;\n  score!: HTMLElement;\n  full!: HTMLElement;\n  word!: HTMLInputElement;\n  defn!: HTMLElement;\n  tds!: Set<HTMLTableCellElement>;\n\n  constructor(json?: BoardJSON) {\n    this.last = json ? json.last : '';\n    this.kept = json ? json.kept : false;\n    this.game = json ? json.game : undefined;\n    this.paused = json ? json.paused : false;\n    const {display, timer} = this.createTimer(json?.timer);\n    this.timer = timer;\n    this.timerDisplay = display;\n    document.addEventListener('visibilitychange', () => {\n      if (document.hidden) {\n        this.timer.stop();\n      } else if (!this.paused) {\n        this.timer.start();\n      }\n    });\n  }\n\n  toJSON(): BoardJSON {\n    return {\n      last: this.last,\n      kept: this.kept,\n      paused: this.paused,\n      timer: this.timer.toJSON(),\n      game: this.game && ('random' in this.game ? this.game.toJSON() : this.game),\n    };\n  }\n\n  async init(data: {new?: boolean; allowDupes?: boolean} = {}) {\n    await Promise.all([\n      global.LOADED.DICT,\n      global.LOADED.TRIE(),\n      global.LOADED.STATS(),\n      global.LOADED.HISTORY,\n      global.LOADED.PLAYED(),\n    ]);\n\n    if (!this.game || data.new) {\n      let seed = global.SEED;\n      if (this.game) {\n        this.timer.stop();\n        if (!('random' in this.game)) {\n          this.game = Game.fromJSON(this.game, global.TRIE, global.DICT, global.STATS);\n        }\n        if (this.game.seed === seed) seed = this.game.random.seed % global.MAX_SEED;\n        global.PLAYED!.add(this.game.id);\n        if (Object.values(this.game.played).filter(t => t > 0).length) {\n          this.updateGames();\n          global.HISTORY.push(this.game.toJSON());\n          await global.STORE.set('history', global.HISTORY);\n        }\n      }\n\n      let game;\n      const random = new Random();\n      while (!game || !Object.keys(game.possible).length) {\n        random.seed = seed;\n        const id = Game.encodeID(global.SETTINGS, random.seed);\n        if (global.PLAYED!.has(id) && !data.allowDupes) {\n          seed = (seed + 1) % global.MAX_SEED;\n          continue;\n        }\n        game = new Game(global.TRIE, global.DICT, global.STATS, random, global.SETTINGS);\n      }\n      this.game = game;\n      global.SEED = seed;\n\n      const {display, timer} = this.createTimer();\n      this.timer = timer;\n      this.timerDisplay = display;\n\n      this.last = '';\n      this.kept = false;\n      this.paused = false;\n    } else if (!('random' in this.game)) {\n      this.game = Game.fromJSON(this.game, global.TRIE, global.DICT, global.STATS);\n    }\n\n    const hash = `#${(this.game).id}`;\n    if (document.location.hash !== hash) {\n      window.history.replaceState(null, '', hash);\n    }\n\n    if (!this.full) this.full = UI.createElementWithId('div', 'full');\n    if (!this.score) {\n      this.score = UI.createElementWithId('div', 'score');\n      this.displayScore();\n    }\n  }\n\n  async attach(data: {new?: boolean; allowDupes?: boolean} = {}) {\n    await this.init(data);\n\n    this.container = UI.createElementWithId('div', 'game');\n\n    const touch = 'ontouchstart' in window || navigator.maxTouchPoints > 0;\n\n    const back = UI.createBackButton(() => UI.toggleView('Menu'));\n    back.addEventListener('long-press', e => {\n      if (touch) e.preventDefault();\n      return this.refresh({new: true});\n    });\n\n    const score = UI.createElementWithId('div', 'score-wrapper');\n    score.appendChild(this.score);\n    score.addEventListener('mouseup', () => UI.toggleView('Score'));\n    score.addEventListener('long-press', () => this.onLongPress());\n    score.addEventListener('long-press-up', () => this.onLongPressUp());\n\n    this.container.appendChild(UI.createTopbar(back, this.timerDisplay, score));\n    this.container.appendChild(this.full);\n    this.container.appendChild(this.renderBoard());\n    this.displayScore();\n\n    this.word = UI.createElementWithId('input', 'word') as HTMLInputElement;\n    this.word.setAttribute('type', 'text');\n    this.word.classList.add('word');\n    this.word.addEventListener('beforeinput', e => this.onBeforeInput(e));\n\n    if (touch) this.word.setAttribute('disabled', 'disabled');\n    this.container.appendChild(this.word);\n    this.defn = UI.createElementWithId('div', 'defn');\n    this.defn.classList.add('definition');\n    this.container.appendChild(this.defn);\n\n    if (!this.paused) this.timer.start();\n    return this.container;\n  }\n\n  renderBoard() {\n    const game = this.game as Game;\n    const content = UI.createElementWithId('div', 'board-wrapper');\n    const table = UI.createElementWithId('table', 'board');\n    if (game.size > 4) table.classList.add('big');\n\n    this.tds = new Set();\n    const random = new Random(game.seed);\n    for (let row = 0; row < game.size; row++) {\n      const tr = document.createElement('tr');\n      for (let col = 0; col < game.size; col++) {\n        const td = document.createElement('td');\n\n        const text = document.createElement('div');\n        text.textContent = game.board[row * game.size + col];\n        if (text.textContent === 'Qu') text.classList.add('qu');\n        if (['M', 'W', 'Z'].includes(text.textContent)) text.classList.add('underline');\n        text.classList.add(`rotate${90 * random.next(0, 4)}`);\n        td.setAttribute('data-x', String(row));\n        td.setAttribute('data-y', String(col));\n        td.appendChild(text);\n\n        const div = document.createElement('div');\n        div.classList.add('target');\n        div.setAttribute('data-x', String(row));\n        div.setAttribute('data-y', String(col));\n\n        td.appendChild(div);\n        tr.appendChild(td);\n        this.tds.add(td);\n      }\n      table.appendChild(tr);\n    }\n\n    let touched = new Set<HTMLTableCellElement>();\n    const deselect = () => {\n      for (const td of touched) td.classList.remove('selected');\n    };\n\n    const registerTouch = (e: TouchEvent) => {\n      const touch = e.touches[0];\n      const cell = document.elementFromPoint(touch.clientX, touch.clientY);\n      if (cell?.matches('.target')) {\n        const td = cell.parentNode as HTMLTableCellElement;\n        td.classList.add('selected');\n        if (!touched.has(td)) {\n          touched.add(td);\n          this.word.value += td.textContent!;\n        }\n      }\n    };\n\n    table.addEventListener('touchstart', e => {\n      this.clear();\n      deselect();\n      touched = new Set();\n\n      registerTouch(e);\n    });\n    table.addEventListener('touchend', () => {\n      deselect();\n      this.play();\n    });\n    table.addEventListener('touchmove', registerTouch);\n\n    content.appendChild(table);\n    return content;\n  }\n\n  afterAttach() {\n    UI.permaFocus(this.word);\n  }\n\n  detach(next: string) {\n    if (!['Score', 'Define'].includes(next)) this.timer.stop();\n    return this.container;\n  }\n\n  async refresh(data: {new?: boolean; allowDupes?: boolean} = {}) {\n    UI.persist();\n    await UI.detachView('Board', 'Board');\n    await UI.attachView('Board', data);\n  }\n\n  play() {\n    const game = this.game as Game;\n    let w = (this.word.value || '').toUpperCase();\n    if (!w.length) return;\n    if (global.SETTINGS.shortcuts === 'Shortcuts' && (w.length < 3 || SUFFIXES.includes(w))) {\n      w = `${this.last}${w}`;\n      this.word.value = w;\n    }\n    const score = game.play(w);\n    this.last = w;\n    UI.persist();\n\n    const hide = global.SETTINGS.display === 'Hide';\n    this.kept = true;\n    if (!hide && score) {\n      this.displayScore();\n      this.defn.textContent = define(w, global.DICT);\n    } else {\n      const original = this.word.value || undefined;\n      if (!hide && game.played[w] < 0) this.word.classList.add('error');\n      this.word.classList.add('fade');\n      this.word.addEventListener('animationend', () => this.clear(original), {once: true});\n    }\n  }\n\n  displayScore() {\n    const game = this.game as Game;\n    if (global.SETTINGS.display === 'Hide') {\n      this.score.textContent = '?';\n      this.full.classList.add('hidden');\n      return;\n    }\n\n    if (global.SETTINGS.display === 'Full') {\n      const state = game.state();\n      const p = state.progress;\n      const details = `(${p.score}) ${Object.keys(p.suffixes).length}/${p.subwords}/${p.anagrams}`;\n      const score = game.score.regular + game.score.overtime;\n      const goal = state.totals[global.SETTINGS.grade.toLowerCase() as 'a' | 'b' | 'c' | 'd'];\n      const pct = Math.round((score / goal) * 100).toFixed(0);\n      this.full.classList.remove('hidden');\n      this.full.textContent = `${details} - ${score}/${goal} (${pct}%)`;\n    } else {\n      this.full.classList.add('hidden');\n    }\n\n    const s = game.score;\n    this.score.textContent = s.overtime ? `${s.regular}\\xA0/\\xA0${s.overtime}` : `${s.regular}`;\n  }\n\n  clear(w?: string) {\n    if (w && w !== this.word.value) return;\n    this.word.value = '';\n    this.word.classList.remove('error');\n    this.word.classList.remove('fade');\n    this.defn.textContent = '';\n    this.kept = false;\n  }\n\n  createTimer(json?: TimerJSON) {\n    const display = UI.createElementWithId('div', 'timer');\n    display.addEventListener('click', () => {\n      this.timer.toggle();\n      this.paused = !this.paused;\n    });\n    const duration = json ? json.duration : DURATION;\n    const elapsed = json ? json.elapsed : 0;\n    const expire = () => {\n      if (this.game && !this.game.expired) {\n        this.game.expired = +new Date();\n      }\n    };\n    const timer = new Timer(display, duration, elapsed, expire, () => UI.persist());\n    return {display, timer};\n  }\n\n  updateGames() {\n    if (!global.GAMES) return;\n\n    const game = this.game as Game;\n    const played = new Set<string>();\n    for (const w in game.played) {\n      if (game.played[w] > 0) played.add(w);\n    }\n    if (!played.size) return;\n\n    if (global.GAMES.length >= global.LIMIT) global.GAMES.shift();\n    global.GAMES.push([game.possible, played]);\n  }\n\n  onLongPress() {\n    const game = this.game as Game;\n    const size = game.size;\n    const weights = [];\n    for (let row = 0; row < size; row++) {\n      const a = [];\n      for (let col = 0; col < size; col++) {\n        a.push(0);\n      }\n      weights.push(a);\n    }\n    let total = 0;\n    for (const word in game.possible) {\n      if (game.played[word]) continue;\n      const score = Game.score(word);\n      total += score;\n      for (const p of game.possible[word]) {\n        weights[p[1]][p[0]] += score;\n      }\n    }\n\n    for (const td of this.tds) {\n      const w = weights[Number(td.dataset.x)][Number(td.dataset.y)] / total;\n      td.style.backgroundColor = `rgba(255,0,0,${w})`;\n    }\n  }\n\n  onLongPressUp() {\n    for (const td of this.tds) {\n      td.style.removeProperty('background-color');\n    }\n  }\n\n  onBeforeInput(e: any) {\n    if (e.inputType.startsWith('delete') || (e.data && VALID(e.data))) return;\n    e.preventDefault();\n    const enter = ['insertLineBreak', 'insertParagraph'].includes(e.inputType);\n    if (enter || (e.data?.includes(' '))) this.play();\n  }\n\n  // TODO: up and down arrow to go through history\n  async onKeyDown(e: KeyboardEvent) {\n    if (!this.word) return; // not attached\n    if (this.kept) this.clear();\n    const key = e.keyCode;\n    if (key === 13 || key === 32) {\n      e.preventDefault();\n      this.play();\n    } else if (!this.word.value && (key === 37 || key === 39)) {\n      e.preventDefault();\n    } else if (![0, 37, 39, 8, 46].includes(key) && !VALID(String.fromCharCode(key))) {\n      e.preventDefault();\n    }\n  }\n}\n","export interface TimerJSON {\n  duration: number;\n  elapsed: number;\n}\n\nexport class Timer {\n  private readonly display: HTMLElement;\n  private readonly duration: number;\n\n  private elapsed: number;\n  private interval: number | null;\n  private begin: number | undefined;\n  private last: number | undefined;\n  private expireFn: (() => void) | null;\n  private updateFn: (() => void) | null;\n\n  constructor(\n    display: HTMLElement,\n    duration: number,\n    elapsed = 0,\n    expireFn: (() => void) | null = null,\n    updateFn: (() => void) | null = null\n  ) {\n    this.duration = duration;\n    this.display = display;\n\n    this.elapsed = elapsed;\n    this.interval = null;\n    this.expireFn = expireFn;\n    this.updateFn = updateFn;\n\n    this.render();\n  }\n\n  toJSON(): TimerJSON {\n    return {duration: this.duration, elapsed: this.elapsed};\n  }\n\n  start() {\n    if (this.interval) return;\n    this.begin = new Date().getTime();\n    this.last = this.begin;\n    this.interval = setInterval(() => this.update(), 100);\n  }\n\n  stop() {\n    if (this.interval) {\n      clearInterval(this.interval);\n      this.interval = null;\n      this.begin = new Date().getTime();\n      this.elapsed += this.begin - this.last!;\n      this.last = this.begin;\n    }\n  }\n\n  toggle() {\n    if (this.interval) {\n      this.stop();\n    } else {\n      this.start();\n    }\n  }\n\n  expired() {\n    return this.elapsed >= this.duration;\n  }\n\n  update() {\n    const now = new Date().getTime();\n    this.elapsed += now - this.last!;\n    this.last = now;\n\n    const before = this.display.textContent;\n    this.render();\n    if (before !== this.display.textContent && this.updateFn) {\n      this.updateFn();\n    }\n  }\n\n  private render() {\n    let distance;\n    if (this.expired()) {\n      this.display.classList.add('expired');\n      distance = this.elapsed - this.duration;\n      if (this.expireFn) {\n        this.expireFn();\n        this.expireFn = null;\n      }\n    } else {\n      this.display.classList.remove('expired');\n      distance = this.duration - this.elapsed;\n    }\n\n    const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\n    const seconds = `${Math.floor((distance % (1000 * 60)) / 1000)}`.padStart(2, '0');\n    const time = `${minutes}:${seconds}`;\n    // Safari doesn't fire click events on the display while we're updating ¯\\_(ツ)_/¯\n    if (time !== this.display.textContent) this.display.textContent = time;\n  }\n}\n","import {define} from '../dict';\n\nimport {global} from './global';\nimport {UI, View} from './ui';\n\nconst VALID = (s: string) =>\n  s.split('').every(c => (c >= 'A' && c <= 'Z') || (c >= 'a' && c <= 'z'));\n\nexport class DefineView implements View {\n  private word: string;\n\n  private define!: HTMLElement;\n  private search!: HTMLInputElement;\n\n  private defn: HTMLElement | null = null;\n  private stats: HTMLElement | null = null;\n  private anagrams: HTMLElement | null = null;\n\n  constructor(json?: {word: string}) {\n    this.word = json ? json.word : '';\n  }\n\n  toJSON(): {word: string} {\n    return {word: this.word};\n  }\n\n  async attach(word?: string) {\n    await Promise.all([global.LOADED.DICT, global.LOADED.STATS()]);\n\n    if (word) this.word = word;\n\n    this.define = UI.createElementWithId('div', 'define');\n    this.search = UI.createElementWithId('input', 'search') as HTMLInputElement;\n    this.search.setAttribute('type', 'text');\n    this.search.classList.add('word');\n    this.search.value = this.word;\n    this.search.addEventListener('beforeinput', e => this.onBeforeInput(e));\n    this.search.addEventListener('input', () => {\n      const w = this.search.value;\n      this.query(w && VALID(w) ? w : '');\n    });\n    this.define.appendChild(this.search);\n\n    this.update();\n\n    return this.define;\n  }\n\n  afterAttach() {\n    UI.permaFocus(this.search);\n  }\n\n  query(w: string) {\n    this.search.value = w;\n    this.word = w.toUpperCase();\n    this.update();\n    UI.persist();\n  }\n\n  detach() {\n    this.defn = null;\n    this.stats = null;\n    this.anagrams = null;\n    return this.define;\n  }\n\n  update() {\n    const val = global.DICT[this.word];\n    if (val) {\n      const defn = UI.createElementWithId('div', 'defineDefn');\n      defn.classList.add('definition');\n      defn.textContent = define(this.word, global.DICT);\n      const hard =\n        (val.dict && !val.dict.includes(global.SETTINGS.dict.charAt(0))) ||\n        this.word.length < global.SETTINGS.min;\n      if (hard) {\n        this.define.classList.add('hard');\n      } else {\n        this.define.classList.remove('hard');\n      }\n\n      const addCells = (tr: HTMLTableRowElement, label: string, data: string) => {\n        let td = document.createElement('td');\n        const b = document.createElement('b');\n        b.textContent = label;\n        td.appendChild(b);\n        tr.appendChild(td);\n\n        td = document.createElement('td');\n        td.classList.add('value');\n        td.textContent = data;\n        tr.appendChild(td);\n      };\n\n      const s = global.STATS.stats(this.word, global.SETTINGS.dice, global.SETTINGS.dict);\n\n      const stats = document.createElement('table');\n      stats.classList.add('roundedTable');\n\n      let tr = document.createElement('tr');\n      addCells(tr, 'Grade', s.grade === ' ' ? 'S' : s.grade);\n      addCells(tr, 'Score', s.word ? String(s.word.p) : '-');\n      stats.appendChild(tr);\n\n      tr = document.createElement('tr');\n      addCells(tr, 'Frequency', s.freq ? String(s.freq) : '-');\n      addCells(tr, 'Anagram', s.anagram ? String(s.anagram.p) : '-');\n      stats.appendChild(tr);\n\n      stats.appendChild(tr);\n\n      if (this.defn) this.define.removeChild(this.defn);\n      this.define.appendChild(defn);\n      this.defn = defn;\n\n      if (this.stats) this.define.removeChild(this.stats);\n      this.define.appendChild(stats);\n      this.stats = stats;\n    } else {\n      if (this.defn) {\n        this.define.removeChild(this.defn);\n        this.defn = null;\n      }\n      if (this.stats) {\n        this.define.removeChild(this.stats);\n        this.stats = null;\n      }\n    }\n\n    const anagrams = this.renderAnagrams();\n    if (this.anagrams) this.define.removeChild(this.anagrams);\n    this.define.appendChild(anagrams);\n    this.anagrams = anagrams;\n  }\n\n  renderAnagrams() {\n    const div = UI.createElementWithId('div', 'defineAnagrams');\n\n    const words = global.STATS.anagrams(this.word, global.SETTINGS.dict).words;\n    if (words.length <= 1) return div;\n\n    const solo = [];\n    const anadromes = new Set<string>();\n\n    for (const w of words) {\n      const r = w.split('').reverse().join('');\n      if (r !== w && words.includes(r)) {\n        anadromes.add(`${[w, r].sort().join(' ')}`);\n      } else {\n        solo.push(w);\n      }\n    }\n\n    const format = (w: string) => {\n      const e = document.createElement(w === this.word ? 'b' : 'span');\n      e.textContent = w;\n      e.addEventListener('click', () => this.query(w));\n      return e;\n    };\n\n    for (const pair of anadromes) {\n      const [a, b] = pair.split(' ');\n      div.appendChild(document.createTextNode(' ('));\n      div.appendChild(format(a));\n      div.appendChild(document.createTextNode(' '));\n      div.appendChild(format(b));\n      div.appendChild(document.createTextNode(') '));\n    }\n\n    for (const w of solo) {\n      div.appendChild(format(w));\n      div.appendChild(document.createTextNode(' '));\n    }\n\n    return div;\n  }\n\n  async onBeforeInput(e: any) {\n    if (e.inputType.startsWith('delete') || (e.data && VALID(e.data))) return;\n    e.preventDefault();\n    const enter = ['insertLineBreak', 'insertParagraph'].includes(e.inputType);\n    if (enter || (e.data?.includes(' '))) {\n      if (this.word) {\n        this.query('');\n      } else {\n        await UI.toggleView('Define');\n      }\n    }\n  }\n\n  async onKeyDown(e: KeyboardEvent) {\n    if (!this.search) return; // not attached\n    const key = e.keyCode;\n    if (key === 13 || key === 32) {\n      e.preventDefault();\n      if (this.word) {\n        this.query('');\n      } else {\n        await UI.toggleView('Define');\n      }\n    } else if (key === 27) {\n      await UI.toggleView('Define');\n    } else if (![0, 37, 39, 8, 46].includes(key) && !VALID(String.fromCharCode(key))) {\n      e.preventDefault();\n    }\n  }\n}\n","import {BoardView} from './board';\nimport {UI, View} from './ui';\n\nexport class MenuView implements View {\n  menu!: HTMLElement;\n\n  toJSON() {}\n\n  attach() {\n    // NOTE: The '#menu' here would make more sense, but uBlock's \"Web Annoyances Ultralist\" has:\n    // 'github.io###menu, .fixedHeaderContainer, .menu-btn:style(position: absolute !important;)'\n    this.menu = UI.createElementWithId('div', 'men');\n    const title = UI.createElementWithId('h1', 'title');\n    title.textContent = 'BOGGLE';\n    title.addEventListener('long-press', async () => {\n      const key = (await caches.keys()).find(n => n.includes(':cache:'));\n      if (key) await caches.delete(key);\n      (document.location as any).reload(true);\n    });\n    this.menu.appendChild(title);\n    const nav = document.createElement('nav');\n\n    const createButton = (name: string, fn: () => void) => {\n      const button = document.createElement('button');\n      button.classList.add('toggle');\n      button.textContent = name;\n      button.addEventListener('click', fn);\n      return button;\n    };\n\n    if ((UI.Views.Board as BoardView).game) {\n      nav.appendChild(createButton('RESUME', () => UI.toggleView('Board')));\n      nav.appendChild(createButton('NEW GAME', () => UI.toggleView('Board', {new: true})));\n    } else {\n      nav.appendChild(createButton('PLAY', () => UI.toggleView('Board')));\n    }\n    nav.appendChild(createButton('TRAIN', () => UI.toggleView('Training')));\n    nav.appendChild(createButton('DEFINE', () => UI.toggleView('Define')));\n    nav.appendChild(createButton('STATS', () => UI.toggleView('Stats')));\n    nav.appendChild(createButton('SETTINGS', () => UI.toggleView('Settings')));\n\n    this.menu.appendChild(nav);\n    return this.menu;\n  }\n\n  detach() {\n    return this.menu;\n  }\n}\n","import {order} from '../dict';\nimport {Store} from '../store';\nimport {TrainingStats} from '../training';\n\nimport {global} from './global';\nimport {TrainingView} from './training';\nimport {UI, View} from './ui';\n\nexport class ReviewView implements View {\n  private readonly training: TrainingView;\n\n  review!: HTMLElement;\n\n  constructor(training: TrainingView) {\n    this.training = training;\n  }\n\n  toJSON() {}\n\n  async attach() {\n    await this.training.init();\n\n    this.review = UI.createElementWithId('div', 'review');\n\n    const back = UI.createBackButton(() => UI.toggleView('Training'));\n    this.review.appendChild(UI.createTopbar(back, null, this.training.progress));\n\n    const d = global.SETTINGS.dice.charAt(0).toLowerCase() as 'n' | 'o' | 'b';\n    const score = (k: string) => global.STATS.anagrams(k, global.SETTINGS.dict)[d] || 0;\n\n    const store = new Store('training', global.SETTINGS.dict);\n    const data = ((await store.get<TrainingStats[]>('data')) || []);\n    const keys = data\n      .filter(w => !w.c || w.e < 2.0)\n      .sort((a, b) => score(b.k) / b.e - score(a.k) / a.e)\n      .map(w => w.k);\n\n    const wrapper = UI.createElementWithId('div', 'review-results-wrapper');\n    if (!keys.length) {\n      wrapper.appendChild(UI.createPlaceholder());\n    } else {\n      for (const k of keys) {\n        const table = UI.createElementWithId('table', 'review-results') as HTMLTableElement;\n        UI.addAnagramRows(table, order(global.STATS.anagrams(k, global.SETTINGS.dict).words));\n        wrapper.appendChild(table);\n      }\n    }\n    this.review.appendChild(wrapper);\n\n    return this.review;\n  }\n\n  detach() {\n    return this.review;\n  }\n}\n","import {Game} from '../game';\n\nimport {BoardView} from './board';\nimport {global} from './global';\nimport {UI} from './ui';\n\nexport class ScoreView {\n  private readonly board: BoardView;\n\n  container!: HTMLElement;\n\n  constructor(board: BoardView) {\n    this.board = board;\n  }\n\n  toJSON() {}\n\n  async attach() {\n    await this.board.init();\n\n    this.container = UI.createElementWithId('div', 'game');\n\n    // TODO: wrapper should really be container, not game\n    const wrapper = UI.createElementWithId('div', 'score-history');\n\n    const back = UI.createBackButton(() => UI.toggleView('Board'));\n    this.container.appendChild(UI.createTopbar(back, this.board.timerDisplay, this.board.score));\n\n    const game = this.board.game as Game;\n    const state = game.state();\n    const score = game.score.regular + game.score.overtime;\n    const goal = state.totals[global.SETTINGS.grade.toLowerCase() as 'a' | 'b' | 'c' | 'd'];\n    const details = `${score}/${goal} (${Math.round((score / goal) * 100).toFixed(0)}%)`;\n    const current = makeCollapsible(game.id, details, 'block');\n    const div = document.createElement('div');\n    div.classList.add('collapsible-content');\n    this.displayPlayed(state, div, true);\n    this.displayPossible(state, div);\n    wrapper.appendChild(current);\n    wrapper.appendChild(div);\n    // Start off with played expanded\n    current.classList.add('active');\n    div.style.display = 'block';\n\n    for (let i = global.HISTORY.length - 1; i >= 0; i--) {\n      const state = global.HISTORY[i];\n      let score = 0;\n      for (const [w, t] of Object.entries(state.words)) {\n        if (t > 0) score += Game.score(w);\n      }\n      if (!score) continue;\n\n      const details = `${score}/${state.goal[global.SETTINGS.grade]} (${Math.round(\n        (score / state.goal[global.SETTINGS.grade]) * 100\n      ).toFixed(0)}%)`;\n      const div = document.createElement('div');\n      div.classList.add('collapsible-content');\n      div.classList.add('lazy');\n      const button = makeCollapsible(state.seed, details, 'block', () => {\n        if (div.classList.contains('lazy')) {\n          div.classList.remove('lazy');\n          const game = Game.fromJSON(state, global.TRIE, global.DICT, global.STATS);\n          const s = game.state();\n          this.displayPlayed(s, div);\n          this.displayPossible(s, div);\n        }\n      });\n      wrapper.appendChild(button);\n      wrapper.appendChild(div);\n    }\n\n    this.container.appendChild(wrapper);\n\n    return this.container;\n  }\n\n  detach() {\n    return this.container;\n  }\n\n  displayPlayed(state: ReturnType<Game['state']>, div: HTMLElement, expanded = false) {\n    const p = state.progress;\n    const details = `(${p.score}) ${Object.keys(p.suffixes).length}/${p.subwords}/${p.anagrams} (${\n      p.invalid\n    }/${p.total})`;\n\n    const button = makeCollapsible('PLAYED', details, 'table');\n\n    const table = document.createElement('table');\n    table.classList.add('collapsible-content');\n    table.classList.add('results');\n    table.classList.add('played');\n\n    for (const {word, grade, overtime, defn, invalid} of state.played) {\n      const tr = document.createElement('tr');\n      if (!invalid && grade < global.SETTINGS.grade) tr.classList.add('hard');\n      if (invalid) tr.classList.add('error');\n      if (overtime) tr.classList.add('overtime');\n\n      let td = document.createElement('td');\n      const b = document.createElement('b');\n      b.textContent = word;\n      td.appendChild(b);\n      tr.appendChild(td);\n\n      td = document.createElement('td');\n      if (defn) td.textContent = defn;\n      tr.appendChild(td);\n\n      table.appendChild(tr);\n    }\n\n    if (expanded) {\n      button.classList.add('active');\n      table.style.display = 'table';\n    }\n\n    div.appendChild(button);\n    div.appendChild(table);\n  }\n\n  displayPossible(state: ReturnType<Game['state']>, div: HTMLElement, expanded = false) {\n    const tot = state.totals;\n    const details = `${tot.d}/${tot.c}/${tot.b}/${tot.a} (${tot.s})`;\n\n    const button = makeCollapsible('POSSIBLE', details, 'table');\n    const table = document.createElement('table');\n    table.classList.add('collapsible-content');\n    table.classList.add('results');\n    table.classList.add('possible');\n\n    for (const {word, grade, root, missing, defn} of state.remaining) {\n      const tr = document.createElement('tr');\n      if (grade < global.SETTINGS.grade) tr.classList.add('hard');\n\n      let td = document.createElement('td');\n      const b = document.createElement('b');\n      if (root) {\n        const rootSpan = document.createElement('span');\n        rootSpan.textContent = root;\n        const suffixSpan = document.createElement('span');\n        suffixSpan.classList.add('underline');\n        suffixSpan.textContent = word.slice(root.length);\n        b.appendChild(rootSpan);\n        b.appendChild(suffixSpan);\n      } else {\n        if (missing) b.classList.add('underline');\n        b.textContent = word;\n      }\n      td.appendChild(b);\n      tr.appendChild(td);\n\n      td = document.createElement('td');\n      td.textContent = defn;\n      tr.appendChild(td);\n\n      table.appendChild(tr);\n    }\n\n    if (expanded) {\n      button.classList.add('active');\n      table.style.display = 'table';\n    }\n\n    div.appendChild(button);\n    div.appendChild(table);\n  }\n}\n\nfunction makeCollapsible(title: string, details: string, display: string, fn?: () => void) {\n  const button = document.createElement('button');\n  button.setAttribute('type', 'button');\n  button.classList.add('collapsible');\n\n  const div = document.createElement('div');\n\n  const titleSpan = document.createElement('span');\n  titleSpan.classList.add('collapsible-title');\n  titleSpan.textContent = title;\n\n  const detailsSpan = document.createElement('span');\n  detailsSpan.classList.add('collapsible-details');\n  detailsSpan.textContent = details;\n\n  div.appendChild(titleSpan);\n  div.appendChild(detailsSpan);\n  button.appendChild(div);\n\n  button.addEventListener('click', () => {\n    button.classList.toggle('active');\n    const content = button.nextElementSibling as HTMLElement;\n    if (content.style.display === display) {\n      content.style.display = 'none';\n    } else {\n      if (fn) fn();\n      content.style.display = display;\n    }\n  });\n\n  return button;\n}\n","import {Type} from '../dict';\nimport {Game} from '../game';\nimport {Dice, MinLength, ScoreDisplay, Settings, Shortcuts, Theme} from '../settings';\nimport {Grade} from '../stats';\n\nimport {global} from './global';\nimport {UI, View} from './ui';\n\nconst CHARS = new Set([\n  'B', 'b', 'N', 'n', 'E', 'e', 'C', 'c', 'O', 'o',\n  '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',\n]);\nconst VALID = (s: string) => s.split('').every(c => CHARS.has(c));\n\nexport class SettingsView implements View {\n  settings!: HTMLElement;\n  seed!: HTMLInputElement;\n\n  toJSON() {}\n\n  attach() {\n    this.settings = UI.createElementWithId('div', 'settings');\n\n    this.seed = UI.createElementWithId('input', 'seed') as HTMLInputElement;\n    this.seed.setAttribute('type', 'text');\n    this.seed.value = Game.encodeID(global.SETTINGS, global.SEED);\n    this.seed.addEventListener('input', () => this.onInput(this.seed.value || ''));\n    this.seed.addEventListener('beforeinput', e => this.onBeforeInput(e));\n    const back = UI.createBackButton(() => UI.toggleView('Menu'));\n    this.settings.appendChild(UI.createTopbar(back, this.seed, null));\n\n    const checkedRadioRow = (\n      k: keyof Settings,\n      opts: string[],\n      fn: (this: HTMLInputElement) => void,\n      id?: string\n    ) => {\n      const row = document.createElement('div');\n      row.classList.add('row');\n      const radios = UI.createRadios(\n        id || k,\n        opts.map(s => (s === String(global.SETTINGS[k]) ? [s] : s)),\n        fn\n      );\n      row.appendChild(radios);\n      return row;\n    };\n\n    this.settings.appendChild(\n      checkedRadioRow('dice', ['New', 'Old', 'Big'], function (this: HTMLInputElement) {\n        const min = this.value === 'Big' ? 4 : 3;\n        (document.getElementById(`min${min}`) as HTMLInputElement).checked = true;\n        UI.updateSettings({dice: this.value as Dice, min});\n      })\n    );\n    this.settings.appendChild(\n      checkedRadioRow('min', ['3', '4', '5'], function (this: HTMLInputElement) {\n        UI.updateSettings({min: Number(this.value) as MinLength});\n      })\n    );\n    this.settings.appendChild(\n      checkedRadioRow('dict', ['NWL', 'ENABLE', 'CSW'], function (this: HTMLInputElement) {\n        UI.updateSettings({dict: this.value as Type});\n      })\n    );\n    this.settings.appendChild(\n      checkedRadioRow('grade', ['A', 'B', 'C', 'D'], function (this: HTMLInputElement) {\n        UI.updateSettings({grade: this.value as Exclude<Grade, ' '>});\n      })\n    );\n    this.settings.appendChild(\n      checkedRadioRow(\n        'display',\n        ['Hide', 'Show', 'Full'],\n        function (this: HTMLInputElement) {\n          UI.updateSettings({display: this.value as ScoreDisplay});\n        },\n        'scoreDisplay'\n      )\n    );\n    this.settings.appendChild(\n      checkedRadioRow('shortcuts', ['Shortcuts', 'None'], function (this: HTMLInputElement) {\n        UI.updateSettings({shortcuts: this.value as Shortcuts});\n      })\n    );\n    this.settings.appendChild(\n      checkedRadioRow('theme', ['System', 'Light', 'Dark'], function (this: HTMLInputElement) {\n        const theme = this.value as Theme;\n        UI.updateSettings({theme});\n        UI.setTheme(theme);\n      })\n    );\n\n    return this.settings;\n  }\n\n  detach() {\n    return this.settings;\n  }\n\n  update() {\n    this.seed.textContent = Game.encodeID(global.SETTINGS, global.SEED);\n    this.seed.classList.remove('error');\n    const set = (id: string) => ((document.getElementById(id) as HTMLInputElement).checked = true);\n    set(`dice${global.SETTINGS.dice}`);\n    set(`min${global.SETTINGS.min}`);\n    set(`dict${global.SETTINGS.dict}`);\n    set(`grade${global.SETTINGS.grade}`);\n    set(`scoreDisplay${global.SETTINGS.display}`);\n    set(`shortcuts${global.SETTINGS.shortcuts}`);\n    set(`theme${global.SETTINGS.theme}`);\n  }\n\n  onInput(id: string) {\n    if (!VALID(id)) return;\n    const [settings, seed] = Game.decodeID(id);\n    if (!UI.valid(settings, seed)) {\n      this.seed.classList.add('error');\n    } else {\n      UI.updateSettings(settings, seed, false);\n      this.update();\n    }\n  }\n\n  onBeforeInput(e: any) {\n    if (e.inputType.startsWith('delete') || (e.data && VALID(e.data))) return;\n    e.preventDefault();\n  }\n\n  async onKeyDown(e: KeyboardEvent) {\n    if (!this.seed) return; // not attached\n    const key = e.keyCode;\n    if ([0, 37, 39, 8, 46].includes(key) || VALID(String.fromCharCode(key))) return;\n    e.preventDefault();\n  }\n}\n","import {Stats} from '../stats';\n\nimport {global} from './global';\nimport {UI, View} from './ui';\n\ntype Section = 'WORD' | 'ANAGRAM' | 'PAIR';\n\nexport class StatsView implements View {\n  section: Section;\n\n  stats!: HTMLElement;\n  table: HTMLElement | null = null;\n\n  constructor(json?: {section: Section}) {\n    this.section = json ? json.section : 'WORD';\n  }\n\n  toJSON(): {section: Section} {\n    return {section: this.section};\n  }\n\n  // TODO: why is there no spinner?\n  async attach() {\n    await global.LOADED.GAMES();\n    // TODO: cache this, invalidate if GAMES/dice/dict/min changes?\n    const data = global.STATS.history(global.GAMES!, global.SETTINGS.dice, global.SETTINGS.dict);\n\n    this.stats = UI.createElementWithId('div', 'stats');\n    const back = UI.createBackButton(() => UI.toggleView('Menu'));\n    const display = (s: Section) => this.display(s, data);\n    const radios = UI.createRadios(\n      'statsSelect',\n      ['WORD', 'ANAGRAM', 'PAIR'].map(s => (s === this.section ? [s] : s)),\n      function (this: HTMLInputElement) {\n        display(this.value as Section);\n        UI.persist();\n      }\n    );\n\n    this.stats.appendChild(UI.createTopbar(back, radios, null));\n    this.display(this.section, data);\n\n    return this.stats;\n  }\n\n  detach() {\n    this.table = null;\n    return this.stats;\n  }\n\n  display(section: Section, data: ReturnType<Stats['history']>) {\n    this.section = section;\n    const {words, anadromes, anagrams} = data;\n\n    const link = (w: string) => {\n      const b = document.createElement('b');\n      b.textContent = w;\n      b.addEventListener('click', () => UI.toggleView('Define', w));\n      return b;\n    };\n\n    let table = document.createElement('table') as HTMLElement;\n    table.classList.add('roundedTable');\n    if (section === 'PAIR') {\n      if (!anadromes.length) {\n        table = UI.createPlaceholder();\n      } else {\n        for (const {n, fn, d, fd, e} of anadromes) {\n          const tr = document.createElement('tr');\n\n          let td = document.createElement('td');\n          td.appendChild(link(n));\n          tr.appendChild(td);\n\n          td = document.createElement('td');\n          td.textContent = `${fn}/${fd} (${e})`;\n          tr.appendChild(td);\n\n          td = document.createElement('td');\n          td.appendChild(link(d));\n          tr.appendChild(td);\n\n          table.appendChild(tr);\n        }\n      }\n    } else if (section === 'WORD') {\n      if (!words.length) {\n        table = UI.createPlaceholder();\n      } else {\n        for (const {w, found, all} of words) {\n          const tr = document.createElement('tr');\n\n          let td = document.createElement('td');\n          td.appendChild(link(w));\n          tr.appendChild(td);\n\n          td = document.createElement('td');\n          td.textContent = `${found}/${all}`;\n          tr.appendChild(td);\n\n          table.appendChild(tr);\n        }\n      }\n    } else {\n      if (!anagrams.length) {\n        table = UI.createPlaceholder();\n      } else {\n        for (const group of anagrams) {\n          const tr = document.createElement('tr');\n          const td = document.createElement('td');\n\n          let together = [];\n          let wait = false;\n          for (const {raw, found, all} of group) {\n            const w = raw.replace(/[^A-Z]/, '');\n\n            if (raw.startsWith('(')) {\n              const b = document.createElement('b');\n              b.textContent = '(';\n              together.push(b);\n              wait = true;\n            }\n\n            together.push(link(w));\n\n            const span = document.createElement('span');\n            span.textContent = ` ${found}/${all}`;\n\n            if (raw.endsWith(')')) {\n              together.push(span);\n              const b = document.createElement('b');\n              b.textContent = ')';\n              together.push(b);\n              wait = false;\n            } else {\n              if (wait) span.textContent += ' ';\n              together.push(span);\n            }\n\n            if (!wait) {\n              for (const e of together) td.appendChild(e);\n              td.appendChild(document.createElement('br'));\n              together = [];\n            }\n          }\n\n          tr.appendChild(td);\n          table.appendChild(tr);\n        }\n      }\n    }\n    if (this.table) this.stats.removeChild(this.table);\n    this.stats.appendChild(table);\n    this.table = table;\n  }\n}\n","import {Store} from '../store';\nimport {TrainingPool} from '../training';\n\nimport {global} from './global';\nimport {UI, View} from './ui';\n\nconst INTERVAL = 1000;\n\nexport class TrainingView implements View {\n  pool!: TrainingPool;\n  train!: HTMLElement;\n  content: HTMLElement | null = null;\n  restore: (() => void) | null = null;\n\n  progress!: HTMLElement;\n  interval: number | null = null;\n\n  toJSON() {}\n\n  async init() {\n    await Promise.all([global.LOADED.TRAINING, global.LOADED.DICT, global.LOADED.STATS()]);\n    if (!this.pool || this.pool.type !== global.SETTINGS.dict) {\n      const store = new Store('training', global.SETTINGS.dict);\n      this.pool = await TrainingPool.create(\n        global.STATS,\n        global.SETTINGS.dice,\n        global.SETTINGS.dict,\n        store,\n        global.SETTINGS.min\n      );\n    }\n    if (!this.progress) {\n      this.progress = UI.createElementWithId('div', 'progress');\n      this.updateProgress();\n      this.interval = setInterval(() => this.updateProgress(), INTERVAL);\n    }\n  }\n\n  async attach() {\n    await this.init();\n    this.train = UI.createElementWithId('div', 'train');\n    this.next();\n    return this.train;\n  }\n\n  async detach() {\n    if (this.restore) this.restore();\n    if (this.interval) clearInterval(this.interval);\n    this.content = null;\n    return this.train;\n  }\n\n  next() {\n    const content = UI.createElementWithId('div', 'content');\n\n    const {label, group, update, restore} = this.pool.next();\n    this.restore = restore;\n    const trainWord = document.createElement('div');\n    trainWord.classList.add('word');\n    trainWord.textContent = label;\n\n    const sizeHint = UI.createElementWithId('div', 'sizeHint');\n    sizeHint.style.visibility = 'hidden';\n    sizeHint.textContent = String(group.length);\n\n    const rating = this.createRatingToggles(update);\n    const table = document.createElement('table');\n    table.classList.add('results', 'hidden');\n    UI.addAnagramRows(table, group);\n\n    const progress = UI.createElementWithId('div', 'progress-wrapper');\n    progress.appendChild(this.progress);\n    progress.addEventListener('mouseup', () => UI.toggleView('Review'));\n    progress.addEventListener('long-press', () => {\n      if (!rating.classList.contains('hidden')) return;\n      sizeHint.style.visibility = 'visible';\n    });\n    progress.addEventListener('long-press-up', () => {\n      sizeHint.style.visibility = 'hidden';\n    });\n\n    const back = UI.createBackButton(() => UI.toggleView('Menu'));\n    content.appendChild(UI.createTopbar(back, null, progress));\n\n    const wrapper = document.createElement('div');\n    wrapper.classList.add('wrapper');\n    wrapper.appendChild(trainWord);\n    wrapper.appendChild(table);\n\n    content.appendChild(wrapper);\n    content.appendChild(sizeHint);\n    const rwrapper = UI.createElementWithId('div', 'rating-wrapper');\n    rwrapper.appendChild(rating);\n    content.appendChild(rwrapper);\n\n    const listener = (e: MouseEvent) => {\n      if (![back, progress, this.progress].includes(e.target as HTMLElement)) {\n        content.removeEventListener('click', listener);\n        trainWord.classList.add('hidden');\n        sizeHint.classList.add('hidden');\n        table.classList.remove('hidden');\n        rating.classList.remove('hidden');\n      }\n    };\n    content.addEventListener('click', listener);\n\n    if (this.content) this.train.removeChild(this.content);\n    this.train.appendChild(content);\n    this.content = content;\n  }\n\n  createRatingToggles(update: (q: number) => Promise<void>) {\n    const toggles = document.createElement('div');\n    toggles.setAttribute('id', 'rating');\n    toggles.classList.add('toggle-group');\n    toggles.classList.add('horizontal');\n    toggles.classList.add('hidden');\n\n    for (let i = 0; i < 6; i++) {\n      const toggle = document.createElement('button');\n      toggle.setAttribute('id', `rating${i}`);\n      toggle.setAttribute('type', 'button');\n      toggle.classList.add('toggle');\n      toggle.textContent = String(i);\n\n      toggles.appendChild(toggle);\n\n      toggle.addEventListener('click', async () => {\n        await update(Number(toggle.textContent));\n        // Update progress before its scheduled interval to ensure there's no perceived lag\n        this.updateProgress();\n        this.restore = null;\n        this.next();\n      });\n    }\n\n    return toggles;\n  }\n\n  updateProgress() {\n    this.progress.textContent = `${this.pool.overdue()}\\xA0/\\xA0${this.pool.size}`;\n  }\n}\n"],"names":["downX","downY","diffX","diffY","timeDown","startElement","$55dcb6b52fc85e3d$export$f36d6a7a5c09a23e","word","dict","def","defn","match","re","exec","m","toUpperCase","replace","$55dcb6b52fc85e3d$export$1ea939691cdc45b8","type","val","includes","charAt","$55dcb6b52fc85e3d$export$aaaeab0fac9a3ccb","words","ordered","anadromes","Set","w","r","split","reverse","join","key","sort","has","add","push","window","CustomEvent","event","params","bubbles","cancelable","detail","undefined","e","document","createEvent","initCustomEvent","prototype","Event","addEventListener","board","getElementById","contains","target","Date","now","touches","clientX","clientY","timeDiff","eventType","Math","abs","dispatchEvent","TOUCH","navigator","maxTouchPoints","mouseUp","timer","startX","startY","isTouch","clearLongPressTimer","cancelAnimationFrame","value","startLongPressTimer","start","getTime","loop","delta","id","TIMEOUT","fireLongPressEvent","element","stopImmediatePropagation","preventDefault","stopPropagation","once","capture","requestAnimationFrame","$2f4d5440d89e6de9$export$3cdec2bba15e3523","constructor","percentiles","mixed","anagram","toAnagram","anagrams","min","a","group","result","length","v","d","stats","dice","grade","pf","freq","freqs","findIndex","f","p","s","toLowerCase","vw","pw","rw","$2f4d5440d89e6de9$var$rank","va","pa","g","ceil","pct","round","total","history","games","ratio","all","either","found","n","possible","played","as","k","filter","reduce","acc","K","log","pow","b","sorted","obj","limit","Object","entries","slice","map","fn","fd","raw","$565bb8264fce4bd8$export$390f32400eaf98c9","setup","dbName","storeNames","Promise","resolve","reject","openreq","indexedDB","open","onerror","error","onsuccess","onupgradeneeded","storeName","createObjectStore","db","get","req","withIDBStore","store","then","set","put","callback","transaction","oncomplete","onabort","objectStore","$69e3cfcc1b264755$export$a92776769f460054","imul","seed","next","max","floor","z","shuffle","arr","i","j","sample","remove","RangeError","index","pop","hasOwnProperty","call","$96aac1339b3e6cb8$var$defaultCompare","$96aac1339b3e6cb8$var$Queue","data","compare","down","item","up","top","bottom","peek","pos","parent","current","half","left","best","right","$96aac1339b3e6cb8$export$c612839cda33ff7e","create","learned","queued","stored","unlearned","size","overdue","popped","backfill","c","fill","restore","random","label","update","q","$96aac1339b3e6cb8$var$adjust","mod","bonus","$96aac1339b3e6cb8$var$DAY","$e46db5192eb49d53$var$NEW_DICE","$e46db5192eb49d53$var$OLD_DICE","$e46db5192eb49d53$var$BIG_DICE","$e46db5192eb49d53$export$4405dec33e6bc9e5","$e46db5192eb49d53$export$985739bfa5723e08","trie","settings","die","sqrt","solve","encodeID","overtime","score","regular","expired","play","bucket","toJSON","goal","S","totals","A","B","C","D","decodeID","Number","isNaN","t","num","NaN","String","fromJSON","json","game","totals_","grades","progress","invalid","valid","suffixes","subwords","suffix","suffixed","endsWith","sub","$e46db5192eb49d53$var$subs","substr","missing","concat","keys","Array","from","sum","state","gr","augment","remaining","ma","mb","ga","gb","localeCompare","root","queue","y","x","ord","charCodeAt","node","children","h","dx","dy","x2","y2","find","hist","node2","s2","isWord","$f58af0fc7d096920$export$73571c50d0f2507e","letter","$c1afce2e0b574aed$var$STORE","$c1afce2e0b574aed$var$fetchJSON","url","fetch","mode","$c1afce2e0b574aed$export$90b4d2ff6acb88af","SETTINGS","JSON","parse","localStorage","getItem","shortcuts","display","theme","STORE","LIMIT","MAX_SEED","DICT","STATS","HISTORY","TRIE","GAMES","PLAYED","SEED","LOADED","TRAINING","$c97362ee32723b49$export$c57e9b2d8b9e4de","duration","elapsed","expireFn","updateFn","interval","render","begin","last","setInterval","stop","clearInterval","toggle","before","textContent","distance","classList","minutes","seconds","padStart","time","$5733c26233441270$var$VALID","every","$5733c26233441270$export$373e09b633948dc","kept","paused","createTimer","timerDisplay","hidden","init","new","values","updateGames","allowDupes","hash","location","replaceState","full","$635ad17e88fce26c$export$4b08aed5f1ec6952","createElementWithId","displayScore","attach","container","touch","back","createBackButton","toggleView","refresh","appendChild","onLongPress","onLongPressUp","createTopbar","renderBoard","setAttribute","onBeforeInput","content","table","tds","row","tr","createElement","col","td","text","div","touched","deselect","registerTouch","cell","elementFromPoint","matches","parentNode","clear","afterAttach","permaFocus","detach","persist","detachView","attachView","hide","original","details","toFixed","shift","weights","dataset","style","backgroundColor","removeProperty","inputType","startsWith","enter","onKeyDown","keyCode","fromCharCode","$29f72165be3278d3$var$VALID","$29f72165be3278d3$export$4598af383c6b3a19","define","search","query","addCells","removeChild","renderAnagrams","solo","format","pair","createTextNode","$e7e585f6fffb4ff0$export$5fe8222595b01ed2","menu","title","caches","delete","reload","nav","createButton","name","button","Views","Board","$d5af522aef81d25f$export$ce711eda3c29ab03","training","review","wrapper","addAnagramRows","createPlaceholder","$3ffa33bc3d9c668d$export$b5fd6146180b74ff","$3ffa33bc3d9c668d$var$makeCollapsible","displayPlayed","displayPossible","expanded","tot","rootSpan","suffixSpan","titleSpan","detailsSpan","nextElementSibling","$952a3e9600c33f15$var$CHARS","$952a3e9600c33f15$var$VALID","$952a3e9600c33f15$export$7d05e0deed78c249","onInput","checkedRadioRow","opts","radios","createRadios","checked","updateSettings","setTheme","$9bc8b3c506b9c499$export$1e3e8ecfe0e6273a","section","link","together","wait","span","$7425debbed8aea0b$export$9e19812ff71b0df9","pool","updateProgress","train","trainWord","sizeHint","visibility","rating","createRatingToggles","rwrapper","listener","removeEventListener","toggles","$635ad17e88fce26c$var$Loader","loader","spinner","setTimeout","scrollTo","orientation","userAgent","meta","querySelector","innerWidth","innerHeight","body","offsetHeight","pref","matchMedia","err","addListener","previous","views","V","Menu","Training","Define","Stats","Settings","Review","Score","BACK","src","height","onHashChange","setItem","stringify","view","attached","setupFromHistory","rand","existing","currentView","shiftKey","isInteger","dom","assign","center","topbar","empty","focus","documentElement","isArray","radio","bind","$ffaaba23bb5f0d08$export$153e5dc2c098b35c","backup","modify","global","UI","Debug"],"version":3,"file":"index.f70a23f0.js.map"}