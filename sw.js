"use strict";const version="2256c0d2",CACHE="boggle:cache:2256c0d2",DATA="boggle:data:ff7e239f";self.addEventListener("install",(e=>{console.log("[ServiceWorker:2256c0d2] installed"),e.waitUntil(caches.open(CACHE).then((e=>(console.log("[ServiceWorker:2256c0d2] cache.addAll",["index.html"]),e.addAll(["index.html"])))).then(self.skipWaiting()))})),self.addEventListener("activate",(e=>{console.log("[ServiceWorker:2256c0d2] activate"),e.waitUntil(caches.keys().then((e=>Promise.all(e.map((e=>{if(e.startsWith("boggle")&&![CACHE,DATA].includes(e))return console.log("[ServiceWorker:2256c0d2] deleting",e),caches.delete(e)}))))))}));const writeBack=(e,t)=>caches.open(t).then((async c=>{const r=await c.match(e.request);if(r)return console.log("[ServiceWorker:2256c0d2] returning cached result for",e.request.url),r;console.log("[ServiceWorker:2256c0d2] fetching",e.request.url);const s=await fetch(e.request);return 200===s.status&&(console.log("[ServiceWorker:2256c0d2] caching",e.request.url,"to",t),c.put(e.request.url,s.clone())),s}));self.addEventListener("fetch",(e=>{e.request.url.includes("/data/dict.json")||e.request.url.includes("/data/stats.json")?e.respondWith(writeBack(e,DATA)):e.respondWith(writeBack(e,CACHE))}));
//# sourceMappingURL=sw.js.map